<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Message Capture Properties</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023" />
<meta name="description" content="This chapter explains the options available for configuration of the property file for the Oracle GoldenGate for Java VAM." />
<meta name="dcterms.created" content="2015-04-08T9:18:57Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="GoldenGate Application Adapters Administering Oracle GoldenGate Adapters" />
<meta name="dcterms.identifier" content="E61853-01" />
<meta name="dcterms.isVersionOf" content="GADAD" />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="java_msgcap_parsing.htm" title="Previous" type="text/html" />
<link rel="Next" href="java_msgdel_part.htm" title="Next" type="text/html" />
<link rel="alternate" href="E61853-01.pdf" title="PDF version" type="application/pdf" />
<link rel="alternate" href="E61853-01.epub" title="ePub version" type="application/epub+zip" />
<link rel="alternate" href="E61853-01.mobi" title="Mobipocket version" type="application/x-mobipocket-ebook" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/fonts.css">
<link rel="stylesheet" href="../dcommon/css/foundation.css">
<link rel="stylesheet" href="../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a>
<header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">17/28</span> <!-- End Header -->
<div id="GADAD193" class="chapter"><a id="BABDFGIA"></a>
<h1 class="chapter"><span class="secnum">11</span> Message Capture Properties</h1>
<p><a id="GADAD541"></a>This chapter explains the options available for configuration of the property file for the Oracle GoldenGate for Java VAM.</p>
<p>This chapter includes the following sections:</p>
<ul>
<li>
<p><a href="#A998878">Logging and Connection Properties</a></p>
</li>
<li>
<p><a href="#A1000409">Parser Properties</a></p>
</li>
</ul>
<a id="A998878"></a>
<div id="GADAD194" class="sect1">
<h2 class="sect1"><span class="secnum">11.1</span> Logging and Connection Properties</h2>
<p>The following properties control the connection to JMS and the log file names, error handling, and message output.</p>
<div id="GADAD195" class="sect2"><a id="sthref181"></a>
<h3 class="sect2"><span class="secnum">11.1.1</span> Logging Properties</h3>
<p>Logging is controlled by the following properties.</p>
<div id="GADAD196" class="sect3"><a id="sthref182"></a>
<h4 class="sect3"><span class="secnum">11.1.1.1</span> gg.log</h4>
<p>Specifies the type of logging that is to be used. The default implementation is the <code>JDK</code> option. This is the built-in Java logging called <code>java.util.logging</code> (<code>JUL</code>). The other logging options are <code>log4j</code> or <code>logback</code>. The syntax is:</p>
<pre>
gg.log={JDK|log4j|logback}
</pre>
<p>For example, to set the type of logging to <code>log4j</code>:</p>
<pre>
gg.log=log4j 
</pre>
<p>The log file is created in the report subdirectory of the installation. The default log file name includes the group name of the associated Extract and the file extension is <code>log</code>.</p>
</div>
<!-- class="sect3" -->
<div id="GADAD197" class="sect3"><a id="sthref183"></a>
<h4 class="sect3"><span class="secnum">11.1.1.2</span> gg.log.level</h4>
<p>Specifies the overall log level for all modules. The syntax is:</p>
<pre>
gg.log.level={ERROR|WARN|INFO|DEBUG}
</pre>
<p>The log levels are defined as follows:</p>
<ul>
<li>
<p><code>ERROR</code> &ndash; Only write messages if errors occur</p>
</li>
<li>
<p><code>WARN</code> &ndash; Write error and warning messages</p>
</li>
<li>
<p><code>INFO</code> &ndash; Write error, warning and informational messages</p>
</li>
<li>
<p><code>DEBUG</code> &ndash; Write all messages, including debug ones.</p>
</li>
</ul>
<p>The default logging level is <code>INFO</code>. The messages in this case will be produced on startup, shutdown and periodically during operation. If the level is switched to <code>DEBUG</code>, large volumes of messages may occur which could impact performance. For example, the following sets the global logging level to <code>INFO</code>:</p>
<pre>
# global logging level
gg.log.level=INFO
</pre></div>
<!-- class="sect3" -->
<div id="GADAD627" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref184"></a>
<h4 class="sect3"><span class="secnum">11.1.1.3</span> gg.log.file</h4>
<p>Specifies the path to the log file. The syntax is:</p>
<pre>
gg.log.file=<span class="italic">path_to_file</span>
</pre>
<p>Where the <code><span class="codeinlineitalic">path_to_file</span></code> is the fully defined location of the log file. This allows a change to the name of the log, but you must include the Extract name if you have more than one Extract to avoid one overwriting the log of the other.</p>
</div>
<!-- class="sect3" -->
<div id="GADAD628" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref185"></a>
<h4 class="sect3"><span class="secnum">11.1.1.4</span> gg.log.classpath</h4>
<p>Specifies the class path to the jars used to implement logging.</p>
<pre>
gg.log.classpath=path_to_jars
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="GADAD201" class="sect2"><a id="sthref186"></a>
<h3 class="sect2"><span class="secnum">11.1.2</span> JMS Connection Properties</h3>
<p>The JMS connection properties set up the connection, such as how to start up the JVM for JMS integration.</p>
<div id="GADAD202" class="sect3"><a id="sthref187"></a>
<h4 class="sect3"><span class="secnum">11.1.2.1</span> jvm.boot options</h4>
<p>Specifies the class path and boot options that will be applied when the JVM starts up. The path needs colon (:) separators for UNIX/Linux and semicolons (;) for Windows.</p>
<p>The syntax is:</p>
<pre>
jvm.bootoptions=<span class="italic">option</span>[, option][. . .]
</pre>
<p>The <code><span class="codeinlineitalic">options</span></code> are the same as those passed to Java executed from the command line. They may include class path, system properties, and JVM memory options (such as maximum memory or initial memory) that are valid for the version of Java being used. Valid options may vary based on the JVM version and provider.</p>
<p>For example (all on a single line):</p>
<pre>
jvm.bootoptions= -Djava.class.path=ggjava/ggjava.jar
-Dlog4j.configuration=my-log4j.properties
</pre>
<p>The <code>log4j.configuration</code> property could be a fully qualified URL to a log4j properties file; by default this file is searched for in the class path. You may use your own log4j configuration, or one of the pre-configured log4j settings: <code>log4j.properties</code> (default level of logging), <code>debug-log4j.properties</code> (debug logging) or <code>trace-log4j.properties</code> (very verbose logging).</p>
</div>
<!-- class="sect3" -->
<div id="GADAD203" class="sect3"><a id="sthref188"></a>
<h4 class="sect3"><span class="secnum">11.1.2.2</span> jms.report.output</h4>
<p>Specifies where the JMS report is written. The syntax is:</p>
<pre>
jms.report.output={report|log|both}
</pre>
<p><code>Where:</code></p>
<ul>
<li>
<p><code>report</code> sends the JMS report to the Oracle GoldenGate report file. This is the default.</p>
</li>
<li>
<p><code>log</code> will write to the Java log file (if one is configured)</p>
</li>
<li>
<p><code>both</code> will send to both locations.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div id="GADAD204" class="sect3"><a id="sthref189"></a>
<h4 class="sect3"><span class="secnum">11.1.2.3</span> jms.report.time</h4>
<p>Specifies the frequency of report generation based on time.</p>
<pre>
jms.report.time=<span class="italic">time_specification</span>
</pre>
<p>The following examples write a report every 30 seconds, 45 minutes and eight hours.</p>
<pre>
jms.report.time=30sec
jms.report.time=45min
jms.report.time=8hr
</pre></div>
<!-- class="sect3" -->
<div id="GADAD205" class="sect3"><a id="sthref190"></a>
<h4 class="sect3"><span class="secnum">11.1.2.4</span> jms.report.records</h4>
<p>Specifies the frequency of report generation based on number of records. The syntax is:</p>
<pre>
jms.report.records=<span class="italic">number</span>
</pre>
<p>The following example writes a report every 1000 records.</p>
<pre>
jms.report.records=1000
</pre></div>
<!-- class="sect3" -->
<div id="GADAD206" class="sect3"><a id="sthref191"></a>
<h4 class="sect3"><span class="secnum">11.1.2.5</span> jms.id</h4>
<p>Specifies that a unique identifier with the indicated format is passed back from the JMS integration to the message capture VAM. This may be used by the VAM as a unique sequence ID for records.</p>
<pre>
jms.id={ogg|time|wmq|activemq|<span class="italic">message_header</span>|<span class="codeinlineitalic">custom_java_class</span>}
</pre>
<p><code>Where:</code></p>
<ul>
<li>
<p><code>ogg -</code> returns the message header property <code>GG_ID</code> which is set by Oracle GoldenGate JMS delivery.</p>
</li>
<li>
<p><code>time -</code> uses a system timestamp as a starting point for the message ID</p>
</li>
<li>
<p><code>wmq -</code> reformats a WebSphere MQ Message ID for use with the VAM</p>
</li>
<li>
<p><code>activemq -</code> reformats an ActiveMQ Message ID for use with the VAM</p>
</li>
<li>
<p><code><span class="codeinlineitalic">message_header -</span></code> specifies the user customized JMS message header to be included, such as JMSMessageID, JMSCorrelationID, or JMSTimestamp.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">custom_java_class</span></code> - specifies a custom Java class that creates a string to be used as an ID.</p>
</li>
</ul>
<p>For example:</p>
<pre>
jms.id=time
jms.id=JMSMessageID
</pre>
<p>The ID returned must be unique, incrementing, and fixed-width. If there are duplicate numbers, the duplicates are skipped. If the message ID changes length, the Extract process will abend.</p>
</div>
<!-- class="sect3" -->
<div id="GADAD207" class="sect3"><a id="sthref192"></a>
<h4 class="sect3"><span class="secnum">11.1.2.6</span> jms.destination</h4>
<p>Specifies the queue or topic name to be looked up via JNDI.</p>
<pre>
jms.destination=<span class="italic">jndi_name</span>
</pre>
<p>For example:</p>
<pre>
jms.destination=sampleQ
</pre></div>
<!-- class="sect3" -->
<div id="GADAD208" class="sect3"><a id="sthref193"></a>
<h4 class="sect3"><span class="secnum">11.1.2.7</span> jms.connectionFactory</h4>
<p>Specifies the connection factory name to be looked up via JNDI.</p>
<pre>
jms.connectionFactory=<span class="italic">jndi_name</span>
</pre>
<p>For example</p>
<pre>
jms.connectionFactory=ConnectionFactory
</pre></div>
<!-- class="sect3" -->
<div id="GADAD209" class="sect3"><a id="sthref194"></a>
<h4 class="sect3"><span class="secnum">11.1.2.8</span> jms.user, jms.password</h4>
<p>Sets the user name and password of the JMS connection, as specified by the JMS provider.</p>
<pre>
jms.user=<span class="italic">user_name</span>
jms.password=<span class="italic">password</span>
</pre>
<p>This is not used for JNDI security. To set JNDI authentication, see the JNDI <code>java.naming.security</code> properties.</p>
<p>For example:</p>
<pre>
jms.user=myuser
jms.password=mypasswd
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="GADAD210" class="sect2"><a id="sthref195"></a>
<h3 class="sect2"><span class="secnum">11.1.3</span> JNDI Properties</h3>
<p>In addition to specific properties for the message capture VAM, the JMS integration also supports setting JNDI properties required for connection to an Initial Context to look up the connection factory and destination. The following properties must be set:</p>
<pre>
java.naming.provider.url=<span class="italic">url</span>
java.naming.factory.initial=<span class="codeinlineitalic">java_class_name</span>
</pre>
<p>If JNDI security is enabled, the following properties may be set:</p>
<pre>
java.naming.security.principal=<span class="italic">user_name</span>
java.naming.security.credentials=<span class="italic">password_or_other_authenticator</span>
</pre>
<p>For example:</p>
<pre>
java.naming.provider.url= t3://localhost:7001
java.naming.factory.initial=weblogic.jndi.WLInitialContextFactory
java.naming.security.principal=jndiuser
java.naming.security.credentials=jndipw
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="A1000409"></a>
<div id="GADAD211" class="sect1">
<h2 class="sect1"><span class="secnum">11.2</span> Parser Properties</h2>
<p>Properties specify the formats of the message and the translation rules for each type of parser: fixed, delimited, or XML. Set the <code>parser.type</code> property to specify which parser to use. The remaining properties are parser specific.</p>
<div id="GADAD212" class="sect2"><a id="sthref196"></a>
<h3 class="sect2"><span class="secnum">11.2.1</span> Setting the Type of Parser</h3>
<p>The following property sets the parser type.</p>
<div id="GADAD213" class="sect3"><a id="sthref197"></a>
<h4 class="sect3"><span class="secnum">11.2.1.1</span> parser.type</h4>
<p>Specifies the parser to use.</p>
<pre>
parser.type={fixed|delim|xml}
</pre>
<p><code>Where:</code></p>
<ul>
<li>
<p><code>fixed</code> invokes the fixed width parser</p>
</li>
<li>
<p><code>delim</code> invokes the delimited parser</p>
</li>
<li>
<p><code>xml</code> invokes the XML parser</p>
</li>
</ul>
<p>For example:</p>
<pre>
parser.type=delim
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="GADAD214" class="sect2"><a id="sthref198"></a>
<h3 class="sect2"><span class="secnum">11.2.2</span> Fixed Parser Properties</h3>
<p>The following properties are required for the fixed parser.</p>
<div id="GADAD215" class="sect3"><a id="sthref199"></a>
<h4 class="sect3"><span class="secnum">11.2.2.1</span> fixed.schematype</h4>
<p>Specifies the type of file used as metadata for message capture. The two valid options are <code>sourcedefs</code> and <code>copybook</code>.</p>
<pre>
fixed.schematype={sourcedefs|copybook}
</pre>
<p>For example:</p>
<pre>
fixed.schematype=copybook
</pre>
<p>The value of this property determines the other properties that must be set in order to successfully parse the incoming data.</p>
</div>
<!-- class="sect3" -->
<div id="GADAD216" class="sect3"><a id="sthref200"></a>
<h4 class="sect3"><span class="secnum">11.2.2.2</span> fixed.sourcedefs</h4>
<p>If the <code>fixed.schematype</code>=<code>sourcedefs</code>, this property specifies the location of the source definitions file that is to be used.</p>
<pre>
fixed.sourcedefs=<span class="italic">file_location</span>
</pre>
<p>For example:</p>
<pre>
fixed.sourcedefs=dirdef/hrdemo.def
</pre></div>
<!-- class="sect3" -->
<div id="GADAD217" class="sect3"><a id="sthref201"></a>
<h4 class="sect3"><span class="secnum">11.2.2.3</span> fixed.copybook</h4>
<p>If the <code>fixed.schematype</code>=<code>copybook</code>, this property specifies the location of the copybook file to be used by the message capture process.</p>
<pre>
fixed.copybook=<span class="italic">file_location</span>
</pre>
<p>For example:</p>
<pre>
fixed.copybook=test_copy_book.cpy
</pre></div>
<!-- class="sect3" -->
<div id="GADAD218" class="sect3"><a id="sthref202"></a>
<h4 class="sect3"><span class="secnum">11.2.2.4</span> fixed.header</h4>
<p>Specifies the name of the <code>sourcedefs</code> entry or copybook record that contains header information used to determine the data block structure:</p>
<pre>
fixed.header=<span class="italic">record_name</span>
</pre>
<p>For example:</p>
<pre>
fixed.header=HEADER
</pre></div>
<!-- class="sect3" -->
<div id="GADAD219" class="sect3"><a id="sthref203"></a>
<h4 class="sect3"><span class="secnum">11.2.2.5</span> fixed.seqid</h4>
<p>Specifies the name of the header field, JMS property, or system value that contains the <code>seqid</code> used to uniquely identify individual records. This value must be continually incrementing and the last character must be the least significant.</p>
<pre>
fixed.seqid={<span class="italic">field_name</span>|$<span class="italic">jms_property</span>|*<span class="italic">seqid</span>}
</pre>
<p><code>Where:</code></p>
<ul>
<li>
<p><code>field_name</code> indicates the name of a header field containing the <code><span class="codeinlineitalic">seqid</span></code></p>
</li>
<li>
<p><code>jms_property</code> uses the value of the specified JMS header property. A special value of this is <code>$jmsid</code> which uses the value returned by the mechanism chosen by the <code>jms.id</code> property</p>
</li>
<li>
<p><code>seqid</code> indicates a simple incrementing 64-bit integer generated by the system</p>
</li>
</ul>
<p>For example:</p>
<pre>
fixed.seqid=$jmsid
</pre></div>
<!-- class="sect3" -->
<div id="GADAD220" class="sect3"><a id="sthref204"></a>
<h4 class="sect3"><span class="secnum">11.2.2.6</span> fixed.timestamp</h4>
<p>Specifies the name of the field, JMS property, or system value that contains the timestamp.</p>
<pre>
fixed.timestamp={<span class="italic">field_name</span>|$<span class="italic">jms_property</span>|*ts}
</pre>
<p>For example:</p>
<pre>
fixed.timestamp=TIMESTAMP
fixed.timestamp=$JMSTimeStamp
fixed.timestamp=*ts
</pre></div>
<!-- class="sect3" -->
<div id="GADAD221" class="sect3"><a id="sthref205"></a>
<h4 class="sect3"><span class="secnum">11.2.2.7</span> fixed.timestamp.format</h4>
<p>Specifies the format of the timestamp field.</p>
<pre>
fixed.timestamp.format=<span class="italic">format</span>
</pre>
<p>Where the format can include punctuation characters plus:</p>
<ul>
<li>
<p><code>YYYY</code> &ndash; four digit year</p>
</li>
<li>
<p><code>YY</code> &ndash; two digit year</p>
</li>
<li>
<p><code>M[M]</code> &ndash; one or two digit month</p>
</li>
<li>
<p><code>D[D]</code> &ndash; one or two digit day</p>
</li>
<li>
<p><code>HH</code> &ndash; hours in twenty four hour notation</p>
</li>
<li>
<p><code>MI</code> &ndash; minutes</p>
</li>
<li>
<p><code>SS</code> &ndash; seconds</p>
</li>
<li>
<p><code>Fn</code> &ndash; n number of fractions</p>
</li>
</ul>
<p>The default format is "<code>YYYY-MM-DD:HH:MI:SS.FFF</code>"</p>
<p>For example:</p>
<pre>
fixed.timestamp.format=YYYY-MM-DD-HH.MI.SS
</pre></div>
<!-- class="sect3" -->
<div id="GADAD222" class="sect3"><a id="sthref206"></a>
<h4 class="sect3"><span class="secnum">11.2.2.8</span> fixed.txid</h4>
<p>Specifies the name of the field, JMS property, or system value that contains the <code>txid</code> used to uniquely identify transactions. This value must increment for each transaction.</p>
<pre>
fixed.txid={<span class="codeinlineitalic">field_name</span>|$<span class="italic">jms_property</span>|*txid}
</pre>
<p>For most cases using the system value of <code>*txid</code> is preferred.</p>
<p>For example:</p>
<pre>
fixed.txid=$JMSTxId
fixed.txid=*txid
</pre></div>
<!-- class="sect3" -->
<div id="GADAD223" class="sect3"><a id="sthref207"></a>
<h4 class="sect3"><span class="secnum">11.2.2.9</span> fixed.txowner</h4>
<p>Specifies the name of the field, JMS property, or static value that contains a user name associated with a transaction. This value may be used to exclude certain transactions from processing. This is an optional property.</p>
<pre>
fixed.txowner={<span class="italic">field_name</span>|<span class="codeinlineitalic">$jms_property</span>|"<span class="italic">value</span>"}
</pre>
<p>For example:</p>
<pre>
fixed.txowner=$MessageOwner
fixed.txowner="jsmith"
</pre></div>
<!-- class="sect3" -->
<div id="GADAD224" class="sect3"><a id="sthref208"></a>
<h4 class="sect3"><span class="secnum">11.2.2.10</span> fixed.txname</h4>
<p>Specifies the name of the field, JMS property, or static value that contains an arbitrary name to be associated with a transaction. This is an optional property.</p>
<pre>
fixed.txname={<span class="codeinlineitalic">field_name</span>|$<span class="italic">jms_property</span>|"<span class="italic">value</span>"}
</pre>
<p>For example:</p>
<pre>
fixed.txname="fixedtx"
</pre></div>
<!-- class="sect3" -->
<div id="GADAD225" class="sect3"><a id="sthref209"></a>
<h4 class="sect3"><span class="secnum">11.2.2.11</span> fixed.optype</h4>
<p>Specifies the name of the field, or JMS property that contains the operation type, which is validated against the <code>fixed.optype</code> values specified in the next sections.</p>
<pre>
fixed.header.optype={<span class="italic">field_name</span>|$<span class="italic">jms_property</span>}
</pre>
<p>For example:</p>
<pre>
fixed.header.optype=FUNCTION
</pre></div>
<!-- class="sect3" -->
<div id="GADAD226" class="sect3"><a id="sthref210"></a>
<h4 class="sect3"><span class="secnum">11.2.2.12</span> fixed.optype.insertval</h4>
<p>This value identifies an insert operation. The default is <code>I</code>.</p>
<pre>
fixed.optype.insertval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
fixed.optype.insertval=A
</pre></div>
<!-- class="sect3" -->
<div id="GADAD227" class="sect3"><a id="sthref211"></a>
<h4 class="sect3"><span class="secnum">11.2.2.13</span> fixed.optype.updateval</h4>
<p>This value identifies an update operation. The default is <code>U</code>.</p>
<pre>
fixed.optype.updateval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
fixed.optype.updateval=M
</pre></div>
<!-- class="sect3" -->
<div id="GADAD228" class="sect3"><a id="sthref212"></a>
<h4 class="sect3"><span class="secnum">11.2.2.14</span> fixed.optype.deleteval</h4>
<p>This value identifies a delete operation.The default is <code>D</code>.</p>
<pre>
fixed.optype.deleteval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
fixed.optype.deleteval=R
</pre></div>
<!-- class="sect3" -->
<div id="GADAD229" class="sect3"><a id="sthref213"></a>
<h4 class="sect3"><span class="secnum">11.2.2.15</span> fixed.table</h4>
<p>Specifies the name of the table. This enables the parser to find the data record definition needed to translate the non-header data portion.</p>
<pre>
fixed.table=<span class="italic">field_name</span>|$<span class="italic">jms_property</span>[, . . .]
</pre>
<p>More than one comma delimited field name may be used to determine the name of the table Each field name corresponds to a field in the header record defined by the <code>fixed.header</code> property or JMS property. The values of these fields are concatenated to identify the data record.</p>
<p>For example:</p>
<pre>
fixed.table=$JMSTableName
fixed.table=SOURCE_Db,SOURCE_Db_Rec_Version
</pre></div>
<!-- class="sect3" -->
<div id="GADAD230" class="sect3"><a id="sthref214"></a>
<h4 class="sect3"><span class="secnum">11.2.2.16</span> fixed.schema</h4>
<p>Specifies the static name of the schema when generating <code>SCHEMA.TABLE</code> table names.</p>
<pre>
fixed.schema="<span class="italic">value</span>"
</pre>
<p>For example:</p>
<pre>
fixed.schema="OGG"
</pre></div>
<!-- class="sect3" -->
<div id="GADAD231" class="sect3"><a id="sthref215"></a>
<h4 class="sect3"><span class="secnum">11.2.2.17</span> fixed.txind</h4>
<p>Specifies the name of the field or JMS property that contains a transaction indicator that is validated against the transaction indicator values. If this is not defined, all operations within a single message will be seen to have occurred within a whole transaction. If defined, then it determines the beginning, middle and end of transactions. Transactions defined in this way can span messages. This is an optional property.</p>
<pre>
fixed.txind={<span class="italic">field_name</span>|$<span class="italic">jms_property</span>}
</pre>
<p>For example:</p>
<pre>
fixed.txind=$TX_IND
</pre></div>
<!-- class="sect3" -->
<div id="GADAD232" class="sect3"><a id="sthref216"></a>
<h4 class="sect3"><span class="secnum">11.2.2.18</span> fixed.txind.beginval</h4>
<p>This value identifies an operation as the beginning of a transaction. The defaults is <code>B</code>.</p>
<pre>
fixed.txind.beginval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
fixed.txind.beginval=0
</pre></div>
<!-- class="sect3" -->
<div id="GADAD233" class="sect3"><a id="sthref217"></a>
<h4 class="sect3"><span class="secnum">11.2.2.19</span> fixed.txind.middleval</h4>
<p>This value identifies an operation as the middle of a transaction. The default is <code>M</code>.</p>
<pre>
fixed.txind.middleval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
fixed.txind.middleval=1
</pre></div>
<!-- class="sect3" -->
<div id="GADAD234" class="sect3"><a id="sthref218"></a>
<h4 class="sect3"><span class="secnum">11.2.2.20</span> fixed.txind.endval</h4>
<p>This value identifies an operation as the end of a transaction. The default is <span class="italic">E</span>.</p>
<pre>
fixed.txind.endval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
fixed.txind.endval=2
</pre></div>
<!-- class="sect3" -->
<div id="GADAD235" class="sect3"><a id="sthref219"></a>
<h4 class="sect3"><span class="secnum">11.2.2.21</span> fixed.txind.wholeval</h4>
<p>This value identifies an operation as a whole transaction. The default is <span class="italic">W</span>.</p>
<pre>
fixed.txind.wholeval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
fixed.txind.wholeval=3
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="GADAD236" class="sect2"><a id="sthref220"></a>
<h3 class="sect2"><span class="secnum">11.2.3</span> Delimited Parser Properties</h3>
<p>The following properties are required for the delimited parser except where otherwise noted.</p>
<div id="GADAD237" class="sect3"><a id="sthref221"></a>
<h4 class="sect3"><span class="secnum">11.2.3.1</span> delim.sourcedefs</h4>
<p>Specifies the location of the source definitions file to use.</p>
<pre>
delim.sourcedefs=<span class="italic">file_location</span>
</pre>
<p>For example:</p>
<pre>
delim.sourcedefs=dirdef/hrdemo.def
</pre></div>
<!-- class="sect3" -->
<div id="GADAD238" class="sect3"><a id="sthref222"></a>
<h4 class="sect3"><span class="secnum">11.2.3.2</span> delim.header</h4>
<p>Specifies the list of values that come before the data and assigns names to each.</p>
<pre>
delim.header=<span class="italic">name</span>[,<span class="italic">name2</span>][. . .]
</pre>
<p>The names must be unique. They can be referenced in other <code>delim</code> properties or wherever header fields can be used.</p>
<p>For example:</p>
<pre>
delim.header=optype, tablename, ts
delim.timestamp=ts
</pre></div>
<!-- class="sect3" -->
<div id="GADAD239" class="sect3"><a id="sthref223"></a>
<h4 class="sect3"><span class="secnum">11.2.3.3</span> delim.seqid</h4>
<p>Specifies the name of the header field, JMS property, or system value that contains the <code>seqid</code> used to uniquely identify individual records. This value must increment and the last character must be the least significant.</p>
<pre>
delim.seqid={<span class="italic">field_name</span>|$<span class="italic">jms_property</span>|*seqid}
</pre>
<p><code>Where:</code></p>
<ul>
<li>
<p><code><span class="codeinlineitalic">field_name</span></code> indicates the name of a header field containing the <code><span class="codeinlineitalic">seqid</span></code></p>
</li>
<li>
<p><code><span class="codeinlineitalic">jms_property</span></code> uses the value of the specified JMS header property, a special value of this is <code>$jmsid</code> which uses the value returned by the mechanism chosen by the <code>jms.id property</code></p>
</li>
<li>
<p><code>seqid</code> indicates a simple continually incrementing 64-bit integer generated by the system</p>
</li>
</ul>
<p>For example:</p>
<pre>
delim.seqid=$jmsid
</pre></div>
<!-- class="sect3" -->
<div id="GADAD240" class="sect3"><a id="sthref224"></a>
<h4 class="sect3"><span class="secnum">11.2.3.4</span> delim.timestamp</h4>
<p>Specifies the name of the JMS property, header field, or system value that contains the timestamp.</p>
<pre>
delim.timestamp={<span class="italic">field_name</span>|$<span class="italic">jms_property</span>|*ts}
</pre>
<p>For example:</p>
<pre>
delim.timestamp=TIMESTAMP
delim.timestamp=$JMSTimeStamp
delim.timestamp=*ts
</pre></div>
<!-- class="sect3" -->
<div id="GADAD241" class="sect3"><a id="sthref225"></a>
<h4 class="sect3"><span class="secnum">11.2.3.5</span> delim.timestamp.format</h4>
<p>Specifies the format of the timestamp field.</p>
<pre>
delim.timestamp.format=<span class="italic">format</span>
</pre>
<p>Where the <code><span class="codeinlineitalic">format</span></code> can include punctuation characters plus:</p>
<ul>
<li>
<p><code>YYYY</code> &ndash; four digit year</p>
</li>
<li>
<p><code>YY</code> &ndash; two digit year</p>
</li>
<li>
<p><code>M[M]</code> &ndash; one or two digit month</p>
</li>
<li>
<p><code>D[D]</code> &ndash; one or two digit day</p>
</li>
<li>
<p><code>HH</code> &ndash; hours in twenty four hour notation</p>
</li>
<li>
<p><code>MI</code> &ndash; minutes</p>
</li>
<li>
<p><code>SS</code> &ndash; seconds</p>
</li>
<li>
<p><code>Fn</code> &ndash; n number of fractions</p>
</li>
</ul>
<p>The default format is "<code>YYYY-MM-DD:HH:MI:SS.FFF</code>"</p>
<p>For example:</p>
<pre>
delim.timestamp.format=YYYY-MM-DD-HH.MI.SS
</pre></div>
<!-- class="sect3" -->
<div id="GADAD242" class="sect3"><a id="sthref226"></a>
<h4 class="sect3"><span class="secnum">11.2.3.6</span> delim.txid</h4>
<p>Specifies the name of the JMS property, header field, or system value that contains the <code>txid</code> used to uniquely identify transactions. This value must increment for each transaction.</p>
<pre>
delim.txid={<span class="italic">field_name</span>|$<span class="italic">jms_property</span>|*txid}
</pre>
<p>For most cases using the system value of <code>*txid</code> is preferred.</p>
<p>For example:</p>
<pre>
delim.txid=$JMSTxId
delim.txid=*txid
</pre></div>
<!-- class="sect3" -->
<div id="GADAD243" class="sect3"><a id="sthref227"></a>
<h4 class="sect3"><span class="secnum">11.2.3.7</span> delim.txowner</h4>
<p>Specifies the name of the JMS property, header field, or static value that contains an arbitrary user name associated with a transaction. This value may be used to exclude certain transactions from processing. This is an optional property.</p>
<pre>
delim.txowner={<span class="codeinlineitalic">field_name</span>|$<span class="italic">jms_property</span>|"value"}
</pre>
<p>For example:</p>
<pre>
delim.txowner=$MessageOwner
delim.txowner="jsmith"
</pre></div>
<!-- class="sect3" -->
<div id="GADAD244" class="sect3"><a id="sthref228"></a>
<h4 class="sect3"><span class="secnum">11.2.3.8</span> delim.txname</h4>
<p>Specifies the name of the JMS property, header field, or static value that contains an arbitrary name to be associated with a transaction. This is an optional property.</p>
<pre>
delim.txname={<span class="italic">field_name</span>|$<span class="italic">jms_property</span>|"<span class="italic">value</span>"}
</pre>
<p>For example:</p>
<pre>
delim.txname="fixedtx"
</pre></div>
<!-- class="sect3" -->
<div id="GADAD245" class="sect3"><a id="sthref229"></a>
<h4 class="sect3"><span class="secnum">11.2.3.9</span> delim.optype</h4>
<p>Specifies the name of the JMS property or header field that contains the operation type. This is compared to the values for <code>delim.optype.insertval, delim.optype.updateval</code> and <code>delim.optype.deleteval</code> to determine the operation.</p>
<pre>
delim.optype={<span class="italic">field_name</span>|$jms_property}
</pre>
<p>For example:</p>
<pre>
delim.optype=optype
</pre></div>
<!-- class="sect3" -->
<div id="GADAD246" class="sect3"><a id="sthref230"></a>
<h4 class="sect3"><span class="secnum">11.2.3.10</span> delim.optype.insertval</h4>
<p>This value identifies an insert operation. The default is I.</p>
<pre>
delim.optype.insertval={<span class="codeinlineitalic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
delim.optype.insertval=A
</pre></div>
<!-- class="sect3" -->
<div id="GADAD247" class="sect3"><a id="sthref231"></a>
<h4 class="sect3"><span class="secnum">11.2.3.11</span> delim.optype.updateval</h4>
<p>This value identifies an update operation. The default is U.</p>
<pre>
delim.optype.updateval={<span class="codeinlineitalic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
delim.optype.updateval=M
</pre></div>
<!-- class="sect3" -->
<div id="GADAD248" class="sect3"><a id="sthref232"></a>
<h4 class="sect3"><span class="secnum">11.2.3.12</span> delim.optype.deleteval</h4>
<p>This value identifies a delete operation. The default is <code>D</code>.</p>
<pre>
delim.optype.deleteval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
delim.optype.deleteval=R
</pre></div>
<!-- class="sect3" -->
<div id="GADAD249" class="sect3"><a id="sthref233"></a>
<h4 class="sect3"><span class="secnum">11.2.3.13</span> delim.schemaandtable</h4>
<p>Specifies the name of the JMS property or header field that contains the schema and table name in the form <code>SCHEMA.TABLE</code>.</p>
<pre>
delim.schemaandtable={<span class="italic">field_name</span>|$<span class="italic">jms_property</span>}
</pre>
<p>For example:</p>
<pre>
delim.schemaandtable=$FullTableName
</pre></div>
<!-- class="sect3" -->
<div id="GADAD250" class="sect3"><a id="sthref234"></a>
<h4 class="sect3"><span class="secnum">11.2.3.14</span> delim.schema</h4>
<p>Specifies the name of the JMS property, header field, or hard-coded value that contains the schema name.</p>
<pre>
delim.schema={<span class="italic">field_name</span>|$<span class="italic">jms_property</span>|"<span class="italic">value</span>"}
</pre>
<p>For example:</p>
<pre>
delim.schema="OGG"
</pre></div>
<!-- class="sect3" -->
<div id="GADAD251" class="sect3"><a id="sthref235"></a>
<h4 class="sect3"><span class="secnum">11.2.3.15</span> delim.table</h4>
<p>Specifies the name of the JMS property or header field that contains the table name.</p>
<pre>
delim.table={<span class="italic">field_name</span>|$<span class="italic">jms_property</span>}
</pre>
<p>For example:</p>
<pre>
delim.table=TABLE_NAME
</pre></div>
<!-- class="sect3" -->
<div id="GADAD252" class="sect3"><a id="sthref236"></a>
<h4 class="sect3"><span class="secnum">11.2.3.16</span> delim.txind</h4>
<p>Specifies the name of the JMS property or header field that contains the transaction indicator to be validated against <code>beginval</code>, <code>middleval</code>, <code>endval</code> or <code>wholeval</code>. All operations within a single message will be seen as within one transaction if this property is not set. If it is set it determines the beginning, middle and end of transactions. Transactions defined in this way can span messages. This is an optional property.</p>
<pre>
delim.txind={<span class="italic">field_name</span>|$<span class="italic">jms_property</span>}
</pre>
<p>For example:</p>
<pre>
delim.txind=txind
</pre></div>
<!-- class="sect3" -->
<div id="GADAD253" class="sect3"><a id="sthref237"></a>
<h4 class="sect3"><span class="secnum">11.2.3.17</span> delim.txind.beginval</h4>
<p>The value that identifies an operation as the beginning of a transaction. The default is <code>B</code>.</p>
<pre>
delim.txind.beginval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
delim.txind.beginval=0
</pre></div>
<!-- class="sect3" -->
<div id="GADAD254" class="sect3"><a id="sthref238"></a>
<h4 class="sect3"><span class="secnum">11.2.3.18</span> delim.txind.middleval</h4>
<p>The value that identifies an operation as the middle of a transaction. The default is <code>M</code>.</p>
<pre>
delim.txind.middleval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
delim.txind.middleval=1
</pre></div>
<!-- class="sect3" -->
<div id="GADAD255" class="sect3"><a id="sthref239"></a>
<h4 class="sect3"><span class="secnum">11.2.3.19</span> delim.txind.endval</h4>
<p>The value that identifies an operation as the end of a transaction. The default is <code>E</code>.</p>
<pre>
delim.txind.endval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
delim.txind.endval=2
</pre></div>
<!-- class="sect3" -->
<div id="GADAD256" class="sect3"><a id="sthref240"></a>
<h4 class="sect3"><span class="secnum">11.2.3.20</span> delim.txind.wholeval</h4>
<p>The value that identifies an operation as a whole transaction. The default is <code>W</code>.</p>
<pre>
delim.txind.wholeval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
delim.txind.wholeval=3
</pre></div>
<!-- class="sect3" -->
<div id="GADAD257" class="sect3"><a id="sthref241"></a>
<h4 class="sect3"><span class="secnum">11.2.3.21</span> delim.fielddelim</h4>
<p>Specifies the delimiter value used to separate fields (columns) in the data. This value is defined through characters or hexadecimal values:</p>
<pre>
delim.fielddelim={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
delim.fielddelim=,
delim.fielddelim=\xc7
</pre></div>
<!-- class="sect3" -->
<div id="GADAD258" class="sect3"><a id="sthref242"></a>
<h4 class="sect3"><span class="secnum">11.2.3.22</span> delim.linedelim</h4>
<p>Specifies the delimiter value used to separate lines (records) in the data. This value is defined using characters or hexadecimal values.</p>
<pre>
delim.linedelim={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
delim.linedelim=||
delim.linedelim=\x0a
</pre></div>
<!-- class="sect3" -->
<div id="GADAD259" class="sect3"><a id="sthref243"></a>
<h4 class="sect3"><span class="secnum">11.2.3.23</span> delim.quote</h4>
<p>Specifies the value used to identify quoted data. This value is defined using characters or hexadecimal values.</p>
<pre>
delim.quote={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
delim.quote="
</pre></div>
<!-- class="sect3" -->
<div id="GADAD260" class="sect3"><a id="sthref244"></a>
<h4 class="sect3"><span class="secnum">11.2.3.24</span> delim.nullindicator</h4>
<p>Specifies the value used to identify <code>NULL</code> data. This value is defined using characters or hexadecimal values.</p>
<pre>
delim.nullindicator={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
delim.nullindicator=NULL
</pre></div>
<!-- class="sect3" -->
<div id="GADAD261" class="sect3"><a id="sthref245"></a>
<h4 class="sect3"><span class="secnum">11.2.3.25</span> delim.fielddelim.escaped</h4>
<p>Specifies the value that will replace the field delimiter when the field delimiter occurs in the input field. The syntax is:</p>
<pre>
delim.fielddelim.escaped={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example, given the following property settings:</p>
<pre>
delim.fielddelim=-
delim.fielddelim.escaped=$#$
</pre>
<p>If the data does not contain the hyphen delimiter within any of the field values:</p>
<pre>
one two three four
</pre>
<p>The resulting delimited data is:</p>
<pre>
one-two-three-four
</pre>
<p>If there are hyphen (-) delimiters within the field values:</p>
<pre>
one two three four-fifths two-fifths
</pre>
<p>The resulting delimited data is:</p>
<pre>
one-two-three-four$#$fifths-two$#$fifths
</pre></div>
<!-- class="sect3" -->
<div id="GADAD262" class="sect3"><a id="sthref246"></a>
<h4 class="sect3"><span class="secnum">11.2.3.26</span> delim.linedelim.escaped</h4>
<p>Specifies the value that will replace the line delimiter when the line delimiter occurs in the input data. The syntax is:</p>
<pre>
delim.linedelim.escaped={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example, given the following property settings:</p>
<pre>
delim.linedelim=\
delim.linedelim.escaped=%/%
</pre>
<p>If the input lines are:</p>
<pre>
These are the lines and they
do not contain the delimiter.
</pre>
<p>Because the lines do not contain the backslash (\) , the result is:</p>
<pre>
These are the lines and they\
do not contain the delimiter.\
</pre>
<p>However, if the input lines do contain the delimiter:</p>
<pre>
These are the lines\data values
and they do contain the delimiter.
</pre>
<p>So the results are:</p>
<pre>
These are the lines%/%data values\
and they do contain the delimiter.\
</pre></div>
<!-- class="sect3" -->
<div id="GADAD263" class="sect3"><a id="sthref247"></a>
<h4 class="sect3"><span class="secnum">11.2.3.27</span> delim.quote.escaped</h4>
<p>Specifies the value that will replace a quote delimiter when the quote delimiter occurs in the input data. The syntax is:</p>
<pre>
delim.quote.escaped={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example, given the following property settings:</p>
<pre>
delim.quote="
delim.quote.escaped="'"
</pre>
<p>If the input data does not contain the quote (") delimiter:</p>
<pre>
It was a very original play.
</pre>
<p>The result is:</p>
<pre>
"It was a very original play."
</pre>
<p>However, if the input data does contain the quote delimiter:</p>
<pre>
It was an "uber-original" play.
</pre>
<p>The result is:</p>
<pre>
"It was an "'"uber-original"'" play."
</pre></div>
<!-- class="sect3" -->
<div id="GADAD264" class="sect3"><a id="sthref248"></a>
<h4 class="sect3"><span class="secnum">11.2.3.28</span> delim.nullindicator.escaped</h4>
<p>Specifies the value that will replace a null indicator when a null indicator occurs in the input data. The syntax is:</p>
<pre>
delim.nullindicator.escaped={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example, given the following property settings:</p>
<pre>
delim.fielddelim=,
delim.nullindicator=NULL
delim.nullindicator.escaped=$NULL$
</pre>
<p>When the input data does not contain a <code>NULL</code> value or a <code>NULL</code> indicator:</p>
<pre>
1 2 3 4 5
</pre>
<p>The result is</p>
<pre>
1,2,3,4,5
</pre>
<p>When the input data contains a <code>NULL</code> value:</p>
<pre>
1 2 4 5
</pre>
<p>The result is</p>
<pre>
1,2,NULL,4,5
</pre>
<p>When the input data contains a <code>NULL</code> indicator:</p>
<pre>
1 2 NULL 4 5
</pre>
<p>The result is:</p>
<pre>
1,2,$NULL$,4,5
</pre></div>
<!-- class="sect3" -->
<div id="GADAD265" class="sect3"><a id="sthref249"></a>
<h4 class="sect3"><span class="secnum">11.2.3.29</span> delim.hasbefores</h4>
<p>Specifies whether before values are present in the data.</p>
<pre>
delim.hasbefores={true|false}
</pre>
<p>The default is <code>false</code>. The parser expects to find before and after values of columns for all records if <code>delim.hasbefores</code> is set to true. The before values are used for updates and deletes, the after values for updates and inserts. The <code>afterfirst</code> property specifies whether the before images are before the after images or after them. If <code>delim.hasbefores</code> is false, then no before values are expected.</p>
<p>For example:</p>
<pre>
delim.hasbefores=true
</pre></div>
<!-- class="sect3" -->
<div id="GADAD266" class="sect3"><a id="sthref250"></a>
<h4 class="sect3"><span class="secnum">11.2.3.30</span> delim.hasnames</h4>
<p>Specifies whether column names are present in the data.</p>
<pre>
delim.hasnames={true|false}
</pre>
<p>The default is false. If true, the parser expects to find column names for all records. The parser validates the column names against the expected column names. If false, no column names are expected.</p>
<p>For example:</p>
<pre>
delim.hasnames=true
</pre></div>
<!-- class="sect3" -->
<div id="GADAD267" class="sect3"><a id="sthref251"></a>
<h4 class="sect3"><span class="secnum">11.2.3.31</span> delim.afterfirst</h4>
<p>Specifies whether after values are positioned before or after the before values.</p>
<pre>
delim.afterfirst={true|false}
</pre>
<p>The default is false. If true, the parser expects to find the after values before the before values. If false, the after values are before the before values.</p>
<p>For example:</p>
<pre>
delim.afterfirst=true
</pre></div>
<!-- class="sect3" -->
<div id="GADAD268" class="sect3"><a id="sthref252"></a>
<h4 class="sect3"><span class="secnum">11.2.3.32</span> delim.isgrouped</h4>
<p>Specifies whether the column names and before and after images should be expected grouped together for all columns or interleaved for each column.</p>
<pre>
delim.isgrouped={true|false}
</pre>
<p>The default is false. If true, the parser expects find a group of column names (if <code>hasnames</code> is true), followed by a group of before values (if <code>hasbefores</code>), followed by a group of after values (the <code>afterfirst</code> setting will reverse the before and after value order). If false, the parser will expect to find a column name (if <code>hasnames</code>), before value (if <code>hasbefores</code>) and after value for each column.</p>
<p>For example:</p>
<pre>
delim.isgrouped=true
</pre></div>
<!-- class="sect3" -->
<div id="GADAD269" class="sect3"><a id="sthref253"></a>
<h4 class="sect3"><span class="secnum">11.2.3.33</span> delim.dateformat | delim.dateformat.<span class="syntaxinlineitalic">table</span> | delim.dateform.table.column</h4>
<p>Specifies the date format for column data. This is specified at a global level, table level or column level.The format used to parse the date is a subset of the formats used for <code>parser.timestamp.format</code>.</p>
<pre>
delim.dateformat=<span class="italic">format</span>
delim.dateformat.<span class="italic">TABLE</span>=<span class="italic">format</span>
delim.dateformat.<span class="italic">TABLE</span>.<span class="italic">COLUMN</span>=<span class="italic">format</span>
</pre>
<p><code>Where:</code></p>
<ul>
<li>
<p><code><span class="codeinlineitalic">format</span></code> is the format defined for <code>parser.timestamp.format</code>.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">table</span></code> is the fully qualified name of the table that is currently being processed.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">column</span></code> is a column of the specified table.</p>
</li>
</ul>
<p>For example:</p>
<pre>
delim.dateformat=YYYY-MM-DD HH:MI:SS
delim.dateformat.MY.TABLE=DD/MM/YY-HH.MI.SS
delim.dateformat.MY.TABLE.EXP_DATE=YYMM
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="GADAD270" class="sect2"><a id="sthref254"></a>
<h3 class="sect2"><span class="secnum">11.2.4</span> XML Parser Properties</h3>
<p>The following properties are used by the XML parser.</p>
<div id="GADAD271" class="sect3"><a id="sthref255"></a>
<h4 class="sect3"><span class="secnum">11.2.4.1</span> xml.sourcedefs</h4>
<p>Specifies the location of the source definitions file.</p>
<pre>
xml.sourcedefs=<span class="italic">file_location</span>
</pre>
<p>For example:</p>
<pre>
xml.sourcedefs=dirdef/hrdemo.def
</pre></div>
<!-- class="sect3" -->
<div id="GADAD272" class="sect3"><a id="sthref256"></a>
<h4 class="sect3"><span class="secnum">11.2.4.2</span> xml.rules</h4>
<p>Specifies the list of XML rules for parsing a message and converting to transactions, operations and columns:</p>
<pre>
xml.rules=<span class="italic">xml_rule_name</span>[, . . .]
</pre>
<p>The specified XML rules are processed in the order listed. All rules matching a particular XML document may result in the creation of transactions, operations and columns. The specified XML rules should be transaction or operation type rules.</p>
<p>For example:</p>
<pre>
xml.rules=dyntxrule, statoprule
</pre></div>
<!-- class="sect3" -->
<div id="GADAD273" class="sect3"><a id="sthref257"></a>
<h4 class="sect3"><span class="secnum">11.2.4.3</span> <span class="italic">rulename</span>.type</h4>
<p>Specifies the type of XML rule.</p>
<pre>
<span class="italic">rulename</span>.type={<span class="italic">tx</span>|<span class="italic">op</span>|<span class="italic">col</span>}
</pre>
<p><code>Where:</code></p>
<ul>
<li>
<p><code><span class="codeinlineitalic">tx</span></code> indicates a transaction rule</p>
</li>
<li>
<p><code><span class="codeinlineitalic">op</span></code> indicates an operation rule</p>
</li>
<li>
<p><code><span class="codeinlineitalic">col</span></code> indicates a column rule</p>
</li>
</ul>
<p>For example:</p>
<pre>
dyntxrule.type=tx
statoprule.type=op
</pre></div>
<!-- class="sect3" -->
<div id="GADAD274" class="sect3"><a id="sthref258"></a>
<h4 class="sect3"><span class="secnum">11.2.4.4</span> <span class="italic">rulename</span>.match</h4>
<p>Specifies an XPath expression used to determine whether the rule is activated for a particular document or not.</p>
<pre>
<span class="italic">rulename</span>.match=<span class="italic">xpath_expression</span>
</pre>
<p>If the XPath expression returns any nodes from the document, the rule matches and further processing occurs. If it does not return any nodes, the rule is ignored for that document.</p>
<p>The following example activates the <code>dyntxrule</code> if the document has a root element of <code>Transaction</code></p>
<pre>
dyntxrule.match=/Transaction
</pre>
<p>Where <code>statoprule</code> is a subrule of <code>stattxtule</code>, the following example activates the <code>statoprule</code> if the parent rule's matching nodes have child elements of <code>NewMyTableEntry.</code></p>
<pre>
statoprule.match=./NewMyTableEntry
</pre></div>
<!-- class="sect3" -->
<div id="GADAD275" class="sect3"><a id="sthref259"></a>
<h4 class="sect3"><span class="secnum">11.2.4.5</span> <span class="italic">rulename</span>.subrules</h4>
<p>Specifies a list of rule names to check for matches if the parent rule is activated by its match.</p>
<pre>
<span class="italic">rulename</span>.subrules=<span class="italic">xml_rule_name</span>[, . . .]
</pre>
<p>The specified XML rules are processed in the order listed. All matching rules may result in the creation of transactions, operations and columns.</p>
<p>Valid sub-rules are determined by the parent type. Transaction rules can only have operation sub-rules. Operation rules can have operation or column sub-rules. Column rules cannot have sub-rules.</p>
<p>For example:</p>
<pre>
dyntxrule.subrules=dynoprule
statoprule.subrules=statkeycolrule, statcol1rule
</pre></div>
<!-- class="sect3" -->
<div id="GADAD276" class="sect3"><a id="sthref260"></a>
<h4 class="sect3"><span class="secnum">11.2.4.6</span> <span class="italic">txrule</span>.timestamp</h4>
<p>Controls the transaction timestamp by instructing the adapter to 1) use the transaction commit timestamp contained in a specified XPath expression or JMS property or 2) use the current system time. This is an optional property.</p>
<pre>
<span class="italic">txrule</span>.timestamp={<span class="italic">xpath_expression</span>|$<span class="italic">jms_property</span>|*ts}
</pre>
<p>The timestamp for the transaction may be overridden at the operation level, or may only be present at the operation level. Any XPath expression must end with a value accessor such as <code>@att</code> or <code>text()</code>.</p>
<p>For example:</p>
<pre>
dyntxrule.timestamp=@ts
</pre></div>
<!-- class="sect3" -->
<div id="GADAD277" class="sect3"><a id="sthref261"></a>
<h4 class="sect3"><span class="secnum">11.2.4.7</span> <span class="italic">txrule</span>.timestamp.format</h4>
<p>Specifies the format of the timestamp field.</p>
<pre>
<span class="italic">txrule</span>.timestamp.format=<span class="italic">format</span>
</pre>
<p>Where the format can include punctuation characters plus:</p>
<ul>
<li>
<p><code>YYYY</code> &ndash; four digit year</p>
</li>
<li>
<p><code>YY</code> &ndash; two digit year</p>
</li>
<li>
<p><code>M[M]</code> &ndash; one or two digit month</p>
</li>
<li>
<p><code>D[D]</code> &ndash; one or two digit day</p>
</li>
<li>
<p><code>HH</code> &ndash; hours in twenty four hour notation</p>
</li>
<li>
<p><code>MI</code> &ndash; minutes</p>
</li>
<li>
<p><code>SS</code> &ndash; <code>seconds</code></p>
</li>
<li>
<p><code>Fn</code> &ndash; n number of fractions</p>
</li>
</ul>
<p>The default format is "<code>YYYY-MM-DD:HH:MI:SS.FFF</code>"</p>
<p>For example:</p>
<pre>
dyntxrule.timestamp.format=YYYY-MM-DD-HH.MI.SS
</pre></div>
<!-- class="sect3" -->
<div id="GADAD278" class="sect3"><a id="sthref262"></a>
<h4 class="sect3"><span class="secnum">11.2.4.8</span> <span class="italic">txrule</span>.seqid</h4>
<p>Specifies the <code>seqid</code> for a particular transaction. This can be used when there are multiple transactions per message. Determines the XPath expression, JMS property, or system value that contains the transactions <code>seqid</code>. Any XPath expression must end with a value accessor such as <code>@att</code> or <code>text()</code>.</p>
<pre>
<span class="italic">txrule</span>.seqid={<span class="italic">xpath_expression</span>|$<span class="italic">jms_property</span>|*seqid}
</pre>
<p>For example:</p>
<pre>
dyntxrule.seqid=@seqid
</pre></div>
<!-- class="sect3" -->
<div id="GADAD279" class="sect3"><a id="sthref263"></a>
<h4 class="sect3"><span class="secnum">11.2.4.9</span> <span class="italic">txrule</span>.txid</h4>
<p>Specifies the XPath expression, JMS property, or system value that contains the <code>txid</code> used to unique identify transactions. This value must increment for each transaction.</p>
<pre>
<span class="italic">txrule</span>.txid={<span class="italic">xpath_expression</span>|$<span class="italic">jms_property</span>|*txid}
</pre>
<p>For most cases using the system value of <code>*txid</code> is preferred.</p>
<p>For example:</p>
<pre>
dyntxrule.txid=$JMSTxId
dyntxrule.txid=*txid
</pre></div>
<!-- class="sect3" -->
<div id="GADAD280" class="sect3"><a id="sthref264"></a>
<h4 class="sect3"><span class="secnum">11.2.4.10</span> <span class="italic">txrule</span>.txowner</h4>
<p>Specifies the XPath expression, JMS property, or static value that contains an arbitrary user name associated with a transaction. This value may be used to exclude certain transactions from processing.</p>
<pre>
<span class="italic">txrule</span>.txowner={<span class="italic">xpath_expression</span>|$<span class="italic">jms_property</span>|"<span class="italic">value</span>"}
</pre>
<p>For example:</p>
<pre>
dyntxrule.txowner=$MessageOwner
dyntxrule.txowner="jsmith"
</pre></div>
<!-- class="sect3" -->
<div id="GADAD281" class="sect3"><a id="sthref265"></a>
<h4 class="sect3"><span class="secnum">11.2.4.11</span> <span class="italic">txrule</span>.txname</h4>
<p>Specifies the XPath expression, JMS property, or static value that contains an arbitrary name to be associated with a transaction. This is an optional property.</p>
<pre>
<span class="italic">txrule</span>.txname={<span class="italic">xpath_expression</span>|$<span class="italic">jms_property</span>|"<span class="italic">value</span>"}
</pre>
<p>For example:</p>
<pre>
dyntxrule.txname="fixedtx"
</pre></div>
<!-- class="sect3" -->
<div id="GADAD282" class="sect3"><a id="sthref266"></a>
<h4 class="sect3"><span class="secnum">11.2.4.12</span> <span class="italic">oprule</span>.timestamp</h4>
<p>Controls the operation timestamp by instructing the adapter to 1) use the transaction commit timestamp contained in a specified XPath expression or JMS property or 2) use the current system time. This is an optional property.</p>
<pre>
<span class="italic">oprule</span>.timestamp={<span class="italic">xpath_expression</span>|$<span class="italic">jms_property</span>|*ts}
</pre>
<p>The timestamp for the operation will override a timestamp at the transaction level.</p>
<p>Any XPath expression must end with a value accessor such as <code>@att</code> or <code>text()</code>.</p>
<p>For example:</p>
<pre>
statoprule.timestamp=./CreateTime/text()
</pre></div>
<!-- class="sect3" -->
<div id="GADAD283" class="sect3"><a id="sthref267"></a>
<h4 class="sect3"><span class="secnum">11.2.4.13</span> <span class="italic">oprule</span>.timestamp.format</h4>
<p>Specifies the format of the timestamp field.</p>
<pre>
<span class="italic">oprule</span>.timestamp.format=<span class="italic">format</span>
</pre>
<p>Where the <code><span class="codeinlineitalic">format</span></code> can include punctuation characters plus:</p>
<ul>
<li>
<p><code>YYYY</code> &ndash; four digit year</p>
</li>
<li>
<p><code>YY</code> &ndash; two digit year</p>
</li>
<li>
<p><code>M[M]</code> &ndash; one or two digit month</p>
</li>
<li>
<p><code>D[D]</code> &ndash; one or two digit day</p>
</li>
<li>
<p><code>HH</code> &ndash; hours in twenty four hour notation</p>
</li>
<li>
<p><code>MI</code> &ndash; minutes</p>
</li>
<li>
<p><code>SS</code> &ndash; seconds</p>
</li>
<li>
<p><code>Fn</code> &ndash; n number of fractions</p>
</li>
</ul>
<p>The default format is "<code>YYYY-MM-DD:HH:MI:SS.FFF</code>"</p>
<p>For example:</p>
<pre>
statoprule.timestamp.format=YYYY-MM-DD-HH.MI.SS
</pre></div>
<!-- class="sect3" -->
<div id="GADAD284" class="sect3"><a id="sthref268"></a>
<h4 class="sect3"><span class="secnum">11.2.4.14</span> <span class="italic">oprule</span>.seqid</h4>
<p>Specifies the <code>seqid</code> for a particular operation. Use the XPath expression, JMS property, or system value that contains the operation <code>seqid</code>. This overrides any <code>seqid</code> defined in parent transaction rules. Must be present if there is no parent transaction rule.</p>
<p>Any XPath expression must end with a value accessor such as <code>@att</code> or <code>text()</code>.</p>
<pre>
<span class="italic">oprule</span>.seqid={<span class="italic">xpath_expression</span>|$<span class="italic">jms_property</span>|*seqid}
</pre>
<p>For example:</p>
<pre>
dynoprule.seqid=@seqid
</pre></div>
<!-- class="sect3" -->
<div id="GADAD285" class="sect3"><a id="sthref269"></a>
<h4 class="sect3"><span class="secnum">11.2.4.15</span> <span class="italic">oprule</span>.txid</h4>
<p>Specifies the XPath expression, JMS property, or system value that contains the <code>txid</code> used to uniquely identify transactions. This overrides any <code>txid</code> defined in parent transaction rules and is required if there is no parent transaction rule. The value must be incremented for each transaction.</p>
<pre>
<span class="italic">oprule</span>.txid={<span class="italic">xpath_expression</span>|$<span class="italic">jms_property</span>|*txid}
</pre>
<p>For most cases using the system value of <code>*txid</code> is preferred.</p>
<p>For example:</p>
<pre>
dynoprule.txid=$JMSTxId
dynoprule.txid=*txid
</pre></div>
<!-- class="sect3" -->
<div id="GADAD286" class="sect3"><a id="sthref270"></a>
<h4 class="sect3"><span class="secnum">11.2.4.16</span> <span class="italic">oprule</span>.txowner</h4>
<p>Specifies the XPath expression, JMS property, or static value that contains an arbitrary user name associated with a transaction. This value may be used to exclude certain transactions from processing. This is an optional property.</p>
<pre>
<span class="italic">oprule</span>.txowner={<span class="italic">xpath_expression</span>|$<span class="italic">jms_property</span>|"<span class="italic">value</span>"}
</pre>
<p>For example:</p>
<pre>
dynoprule.txowner=$MessageOwner
dynoprule.txowner="jsmith"
</pre></div>
<!-- class="sect3" -->
<div id="GADAD287" class="sect3"><a id="sthref271"></a>
<h4 class="sect3"><span class="secnum">11.2.4.17</span> <span class="italic">oprule</span>.txname</h4>
<p>Specifies the XPath expression, JMS property, or static value that contains an arbitrary name to be associated with a transaction. This is an optional property.</p>
<pre>
<span class="italic">oprule</span>.txname={<span class="italic">xpath_expression</span>|$<span class="italic">jms_property</span>|"<span class="italic">value</span>"}
</pre>
<p>For example:</p>
<pre>
dynoprule.txname="fixedtx"
</pre></div>
<!-- class="sect3" -->
<div id="GADAD288" class="sect3"><a id="sthref272"></a>
<h4 class="sect3"><span class="secnum">11.2.4.18</span> <span class="italic">oprule</span>.schemandtable</h4>
<p>Specifies the XPath expression JMS property or hard-coded value that contains the schema and table name in the form <code>SCHEMA.TABLE</code>. Any XPath expression must end with a value accessor such as <code>@att</code> or <code>text()</code>. The value is verified to ensure the table exists in the source definitions.</p>
<pre>
<span class="italic">oprule</span>.schemaandtable={<span class="italic">xpath_expression</span>|$<span class="italic">jms_property</span>|"<span class="italic">value</span>"}
</pre>
<p>For example:</p>
<pre>
statoprule.schemaandtable="MY.TABLE"
</pre></div>
<!-- class="sect3" -->
<div id="GADAD289" class="sect3"><a id="sthref273"></a>
<h4 class="sect3"><span class="secnum">11.2.4.19</span> <span class="italic">oprule</span>.schema</h4>
<p>Specifies the XPath expression, JMS property or hard-coded value that contains the schema name. Any XPath expression must end with a value accessor such as <code>@att</code> or <code>text()</code>.</p>
<pre>
<span class="italic">oprule</span>.schema={<span class="italic">xpath_expression</span>|$<span class="italic">jms_property</span>|"<span class="italic">value</span>"}
</pre>
<p>For example:</p>
<pre>
statoprule.schema=@schema
</pre></div>
<!-- class="sect3" -->
<div id="GADAD290" class="sect3"><a id="sthref274"></a>
<h4 class="sect3"><span class="secnum">11.2.4.20</span> <span class="italic">oprule</span>.table</h4>
<p>Specifies the XPath expression, JMS property or hard-coded value that contains the table name. Any XPath expression must end with a value accessor such as <code>@att</code> or <code>text()</code>.</p>
<pre>
<span class="italic">oprule</span>.table={<span class="italic">xpath_expression</span>|$<span class="italic">jms_property</span>|"<span class="italic">value</span>"}
</pre>
<p>For example:</p>
<pre>
statoprule.table=$TableName
</pre></div>
<!-- class="sect3" -->
<div id="GADAD291" class="sect3"><a id="sthref275"></a>
<h4 class="sect3"><span class="secnum">11.2.4.21</span> <span class="italic">oprule</span>.optype</h4>
<p>Specifies the XPath expression, JMS property or literal value that contains the <code>optype</code> to be validated against an optype <code>insertval</code>, etc. Any XPath expression must end with a value accessor such as <code>@att</code> or <code>text()</code>.</p>
<pre>
<span class="italic">oprule</span>.optype={<span class="italic">xpath_expression</span>|$<span class="italic">jms_property</span>|"<span class="italic">value</span>"}
</pre>
<p>For example:</p>
<pre>
dynoprule.optype=@type
statoprule.optype="I"
</pre></div>
<!-- class="sect3" -->
<div id="GADAD292" class="sect3"><a id="sthref276"></a>
<h4 class="sect3"><span class="secnum">11.2.4.22</span> <span class="italic">oprule</span>.optype.insertval</h4>
<p>Specifies the value that identifies an insert operation. The default is <code>I</code>.</p>
<pre>
<span class="italic">oprule</span>.optype.insertval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
dynoprule.optype.insertval=A
</pre></div>
<!-- class="sect3" -->
<div id="GADAD293" class="sect3"><a id="sthref277"></a>
<h4 class="sect3"><span class="secnum">11.2.4.23</span> <span class="italic">oprule</span>.optype.updateval</h4>
<p>Specifies the value that identifies an update operation. The default is <code>U</code>.</p>
<pre>
<span class="italic">oprule</span>.optype.updateval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
dynoprule.optype.updateval=M
</pre></div>
<!-- class="sect3" -->
<div id="GADAD294" class="sect3"><a id="sthref278"></a>
<h4 class="sect3"><span class="secnum">11.2.4.24</span> <span class="italic">oprule</span>.optype.deleteval</h4>
<p>Specifies the value that identifies a delete operation. The default is <code>D</code>.</p>
<pre>
<span class="italic">oprule</span>.optype.deleteval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
dynoprule.optype.deleteval=R
</pre></div>
<!-- class="sect3" -->
<div id="GADAD295" class="sect3"><a id="sthref279"></a>
<h4 class="sect3"><span class="secnum">11.2.4.25</span> <span class="italic">oprule</span>.txind</h4>
<p>Specifies the XPath expression or JMS property that contains the transaction indicator to be validated against <code>beginval</code> or other value that identifies the position within the transaction. All operations within a single message are regarded as occurring within a whole transaction if this property is not defined. Specifies the begin, middle and end of transactions. Any XPath expression must end with a value accessor such as <code>@att</code> or <code>text()</code>. Transactions defined in this way can span messages. This is an optional property.</p>
<pre>
<span class="italic">oprule</span>.txind={<span class="italic">xpath_expression</span>|$<span class="italic">jms_property</span>}
</pre>
<p>For example:</p>
<pre>
dynoprule.txind=@txind
</pre></div>
<!-- class="sect3" -->
<div id="GADAD296" class="sect3"><a id="sthref280"></a>
<h4 class="sect3"><span class="secnum">11.2.4.26</span> <span class="italic">oprule</span>.txind.beginval</h4>
<p>Specifies the value that identifies an operation as the beginning of a transaction. The default is <code>B</code>.</p>
<pre>
oprule.txind.beginval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
dynoprule.txind.beginval=0
</pre></div>
<!-- class="sect3" -->
<div id="GADAD297" class="sect3"><a id="sthref281"></a>
<h4 class="sect3"><span class="secnum">11.2.4.27</span> <span class="italic">oprule</span>.txind.middleval</h4>
<p>Specifies the value that identifies an operation as the middle of a transaction. The default is <code>M</code>.</p>
<pre>
<span class="italic">oprule</span>.txind.middleval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
dynoprule.txind.middleval=1
</pre></div>
<!-- class="sect3" -->
<div id="GADAD298" class="sect3"><a id="sthref282"></a>
<h4 class="sect3"><span class="secnum">11.2.4.28</span> <span class="italic">oprule</span>.txind.endval</h4>
<p>Specifies the value that identifies an operation as the end of a transaction. The default is <code>E</code>.</p>
<pre>
<span class="italic">oprule</span>.txind.endval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
dynoprule.txind.endval=2
</pre></div>
<!-- class="sect3" -->
<div id="GADAD299" class="sect3"><a id="sthref283"></a>
<h4 class="sect3"><span class="secnum">11.2.4.29</span> <span class="italic">oprule</span>.txind.wholeval</h4>
<p>Specifies the value that identifies an operation as a whole transaction. The default is <code>W</code>.</p>
<pre>
<span class="italic">oprule</span>.txind.wholeval={<span class="italic">value</span>|\x<span class="italic">hex_value</span>}
</pre>
<p>For example:</p>
<pre>
dynoprule.txind.wholeval=3
</pre></div>
<!-- class="sect3" -->
<div id="GADAD300" class="sect3"><a id="sthref284"></a>
<h4 class="sect3"><span class="secnum">11.2.4.30</span> <span class="italic">colrule</span>.name</h4>
<p>Specifies the XPath expression or hard-coded value that contains a column name. The column index must be specified if this is not and the column name will be resolved from that. If specified the column name will be verified against the source definitions file. Any XPath expression must end with a value accessor such as <code>@att</code> or <code>text()</code>.</p>
<pre>
<span class="italic">colrule</span>.name={<span class="italic">xpath_expression</span>|<span class="italic">"value</span>"}
</pre>
<p>For example:</p>
<pre>
dyncolrule.name=@name
statkeycolrule.name="keycol"
</pre></div>
<!-- class="sect3" -->
<div id="GADAD301" class="sect3"><a id="sthref285"></a>
<h4 class="sect3"><span class="secnum">11.2.4.31</span> <span class="italic">colrule</span>.index</h4>
<p>Specifies the XPath expression or hard-coded value that contains a column index. If not specified then the column name must be specified and the column index will be resolved from that. If specified the column index will be verified against the source definitions file. Any XPath expression must end with a value accessor such as <code>@att</code> or <code>text()</code>.</p>
<pre>
<span class="italic">colrule</span>.index={<span class="italic">xpath_expression</span>|<span class="italic">"value</span>"}
</pre>
<p>For example:</p>
<pre>
dyncolrule.index=@index
statkeycolrule.index=1
</pre></div>
<!-- class="sect3" -->
<div id="GADAD302" class="sect3"><a id="sthref286"></a>
<h4 class="sect3"><span class="secnum">11.2.4.32</span> <span class="italic">colrule</span>.value</h4>
<p>Specifies the XPath expression or hard-coded value that contains a column value. Any XPath expression must end with a value accessor such as <code>@att</code> or <code>text().</code> If the XPath expression fails to return any data because a node or attribute does not exist, the column value will be deemed as null. To differentiate between null and missing values (for updates) the <code>isnull</code> and <code>ismissing</code> properties should be set. The value returned is used for delete before values, and update/insert after values.</p>
<pre>
<span class="italic">colrule</span>.value={<span class="italic">xpath_expression</span>|<span class="italic">"value</span>"}
</pre>
<p>For example:</p>
<pre>
statkeycolrule.value=./text()
</pre></div>
<!-- class="sect3" -->
<div id="GADAD303" class="sect3"><a id="sthref287"></a>
<h4 class="sect3"><span class="secnum">11.2.4.33</span> <span class="italic">colrule</span>.isnull</h4>
<p>Specifies the XPath expression used to discover if a column value is null. The XPath expression must end with a value accessor such as <code>@att</code> or <code>text()</code>. If the XPath expression returns any value, the column value is null. This is an optional property.</p>
<pre>
<span class="italic">colrule</span>.isnull=<span class="italic">xpath_expression</span>
</pre>
<p>For example:</p>
<pre>
dyncolrule.isnull=@isnull
</pre></div>
<!-- class="sect3" -->
<div id="GADAD304" class="sect3"><a id="sthref288"></a>
<h4 class="sect3"><span class="secnum">11.2.4.34</span> <span class="italic">colrule</span>.ismissing</h4>
<p>Specifies the XPath expression used to discover if a column value is missing. The XPath expression must end with a value accessor such as <code>@att</code> or <code>text()</code>. If the XPath expression returns any value, then the column value is missing. This is an optional property.</p>
<pre>
<span class="italic">colrule</span>.ismissing=<span class="italic">xpath_expression</span>
</pre>
<p>For example:</p>
<pre>
dyncolrule.ismissing=./missing
</pre></div>
<!-- class="sect3" -->
<div id="GADAD305" class="sect3"><a id="sthref289"></a>
<h4 class="sect3"><span class="secnum">11.2.4.35</span> <span class="italic">colrule</span>.before.value</h4>
<p>Overrides <code><span class="codeinlineitalic">colrule</span></code><code>.value</code> to specifically say how to obtain before values used for updates or deletes. This has the same format as <code><span class="codeinlineitalic">colrule</span></code><code>.value</code>. This is an optional property.</p>
<p>For example:</p>
<pre>
dyncolrule.before.value=./beforevalue/text()
</pre></div>
<!-- class="sect3" -->
<div id="GADAD306" class="sect3"><a id="sthref290"></a>
<h4 class="sect3"><span class="secnum">11.2.4.36</span> <span class="italic">colrule</span>.before.isnull</h4>
<p>Overrides <code><span class="codeinlineitalic">colrule</span></code><code>.isnull</code> to specifically say how to determine if a before value is null for updates or deletes. This has the same format as <code><span class="codeinlineitalic">colrule</span></code><code>.isnull</code>. This is an optional property.</p>
<p>For example:</p>
<pre>
dyncolrule.before.isnull=./beforevalue/@isnull
</pre></div>
<!-- class="sect3" -->
<div id="GADAD307" class="sect3"><a id="sthref291"></a>
<h4 class="sect3"><span class="secnum">11.2.4.37</span> <span class="italic">colrule</span>.before.ismissing</h4>
<p>Overrides <code><span class="codeinlineitalic">colrule</span></code><code>.ismissing</code> to specifically say how to determine if a before value is missing for updates or deletes. This has the same format as <code><span class="codeinlineitalic">colrule</span></code><code>.ismissing</code>. This is an optional property.</p>
<p>For example:</p>
<pre>
dyncolrule.before.ismissing=./beforevalue/missing
</pre></div>
<!-- class="sect3" -->
<div id="GADAD308" class="sect3"><a id="sthref292"></a>
<h4 class="sect3"><span class="secnum">11.2.4.38</span> <span class="italic">colrule</span>.after.value</h4>
<p>Overrides <code><span class="codeinlineitalic">colrule</span></code><code>.value</code> to specifically say how to obtain after values used for updates or deletes. This has the same format as <code><span class="codeinlineitalic">colrule</span></code><code>.value</code>. This is an optional property.</p>
<p>For example:</p>
<pre>
dyncolrule.after.value=./aftervalue/text()
</pre></div>
<!-- class="sect3" -->
<div id="GADAD309" class="sect3"><a id="sthref293"></a>
<h4 class="sect3"><span class="secnum">11.2.4.39</span> <span class="italic">colrule</span>.after.isnull</h4>
<p>Overrides <code><span class="codeinlineitalic">colrule</span></code><code>.isnull</code> to specifically say how to determine if an after value is null for updates or deletes. This has the same format as <code><span class="codeinlineitalic">colrule</span></code><code>.isnull</code>. This is an optional property.</p>
<p>For example:</p>
<pre>
dyncolrule.after.isnull=./aftervalue/@isnull
</pre></div>
<!-- class="sect3" -->
<div id="GADAD310" class="sect3"><a id="sthref294"></a>
<h4 class="sect3"><span class="secnum">11.2.4.40</span> <span class="italic">colrule</span>.after.ismissing</h4>
<p>Overrides <code><span class="codeinlineitalic">colrule</span></code><code>.ismissing</code> to specifically say how to determine if an after value is missing for updates or deletes. This has the same format as <code><span class="codeinlineitalic">colrule</span></code><code>.ismissing</code>. This is an optional property.</p>
<p>For example:</p>
<pre>
dyncolrule.after.ismissing=./aftervalue/missing
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1">
<tr>
<td class="cellalignment8">
<table class="cellalignment6">
<tr>
<td class="cellalignment5"><a href="java_msgcap_parsing.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment5"><a href="java_msgdel_part.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment10">
<table class="cellalignment4">
<tr>
<td class="cellalignment5"><a href="../../index.htm"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment5"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment5"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
