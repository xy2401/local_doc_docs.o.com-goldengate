<!DOCTYPE html>
<html lang="en-US" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<meta http-equiv="Content-Type" content="UTF-8" />
<title>GET_COLUMN_VALUE_FROM_INDEX</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)" />
<meta name="dcterms.created" content="2018-09-07T12:04:07Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Fusion Middleware Reference for Oracle GoldenGate" />
<meta name="dcterms.identifier" content="E81608-08" />
<meta name="dcterms.isVersionOf" content="GWURF" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2013, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="http://docs.oracle.com/goldengate/c1230/gg-winux/index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="get_column_name_from_index.htm" title="Previous" type="text/html" />
<link rel="Next" href="get_column_value_from_name.htm" title="Next" type="text/html" />
<link rel="alternate" href="GWURF.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/fonts.css">
<link rel="stylesheet" href="../dcommon/css/foundation.css">
<link rel="stylesheet" href="../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350"></a> <span id="PAGE" style="display:none;">324/356</span> <!-- End Header -->
<a id="GWURF853"></a>
<h1 id="GWURF-GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350" class="sect1"><span class="enumeration_section">8.19</span> GET_COLUMN_VALUE_FROM_INDEX</h1>
<div>
<div class="section">
<p class="subhead1">Valid For</p>
<p>Extract and Replicat</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Description</p>
<p>Use the <code class="codeph">GET_COLUMN_VALUE_FROM_INDEX</code> function to retrieve the column value from the data record using the specified column index. Column values are the basis for most logic within the user exit. You can base complex logic on the values of individual columns within the data record. You can specify the character format of the returned value.</p>
<p>If the character session of the user exit is set with <code class="codeph">SET_SESSION_CHARSET</code> to a value other than the default character set of the operating system, as defined in <code class="codeph">ULIB_CS_DEFAULT</code> in the <code class="codeph">ucharset.h</code> file, the character data that is exchanged between the user exit and the process is interpreted in the session character set.</p>
<p>A column value is set to the session character set only if the following is true:</p>
<ul style="list-style-type: disc;">
<li>
<p>The column value is a SQL character type (<code class="codeph">CHAR/VARCHAR2/CLOB</code>, <code class="codeph">NCHAR/NVARCHAR2/NCLOB</code>), a SQL date/timestamp/interval/number type)</p>
</li>
<li>
<p>The <code class="codeph">column_value_mode</code> indicator is set to <code class="codeph">EXIT_FN_CNVTED_SESS_CHAR_FORMAT</code>.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Syntax</p>
<pre dir="ltr">
#include "usrdecs.h"
short result_code;
column_def column;
ERCALLBACK (GET_COLUMN_VALUE_FROM_INDEX, &amp;column, &amp;result_code);
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Buffer</p>
<pre dir="ltr">
typedef struct
{
char *column_value;
unsigned short max_value_length;
unsigned short actual_value_length;
short null_value;
short remove_column;
short value_truncated;
short column_index;
char *column_name;
/* Version 3 CALLBACK_STRUCT_VERSION */
short column_value_mode;
short source_or_target;
/* Version 2 CALLBACK_STRUCT_VERSION */
char requesting_before_after_ind;
char more_lob_data;
/* Version 3 CALLBACK_STRUCT_VERSION  */
ULibCharSet column_charset;
} column_def;
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Input</p>
<dl>
<dt class="dlterm"><a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-02B29EA0-AAE0-40EB-AAB9-5FF50A829A4B"><!-- --></a><code class="codeph">column_value</code></dt>
<dd>
<p>A pointer to a buffer to accept the returned column value.</p>
</dd>
<dt class="dlterm"><a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-411413A7-4BF9-4188-BACC-036A71600EED"><!-- --></a><code class="codeph">max_value_length</code></dt>
<dd>
<p>The maximum length of the returned column value. Typically, the maximum length is the length of the column value buffer. If ASCII format is specified with <code class="codeph">column_value_mode</code>, the column value is null-terminated and the maximum length should equal the maximum length of the column value.</p>
</dd>
<dt class="dlterm"><a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-26731DD1-A423-43DB-9AA2-DDDBA3C89441"><!-- --></a><code class="codeph">column_index</code></dt>
<dd>
<p>The column index of the column value to be returned.</p>
</dd>
<dt class="dlterm"><a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-84DB62CE-BB52-4ACF-8D7C-FE7A0F8D7E8C"><!-- --></a><code class="codeph">column_value_mode</code></dt>
<dd>
<p>Indicates the format of the column value.</p>
<dl>
<dt class="dlterm"><a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-5FBAC29F-9ECA-41F4-9694-4021563801EF"><!-- --></a><code class="codeph">EXIT_FN_CHAR_FORMAT</code></dt>
<dd>
<p>ASCII format: The value is a null-terminated ASCII (or EBCDIC) string (with a known exception for the sub-data type <code class="codeph">UTF16_BE</code>, which is converted to UTF8.)</p>
<div class="infobox-note" id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-7B70E3D7-163E-456F-9217-7E8193891D2E">
<p class="notep1">Note:</p>
<p>A column value might be truncated when presented to a user exit, because the value is interpreted as an ASCII string and is supposed to be null-terminated. The first value of <code class="codeph">0</code> becomes the string terminator.</p>
</div>
<ul style="list-style-type: disc;">
<li>
<p>Dates are in the format <code class="codeph">CCYY-MM-DD HH:MI:SS.FFFFFF</code>, in which the fractional time is database-dependent.</p>
</li>
<li>
<p>Numeric values are in their string format. For example, <code class="codeph">123.45</code> is represented as <code class="codeph">"123.45"</code>.</p>
</li>
<li>
<p>Non-printable characters or binary values are converted to hexadecimal notation.</p>
</li>
<li>
<p>Floating point types are output as null-terminated strings, to the first 14 significant digits.</p>
</li>
</ul>
</dd>
<dt class="dlterm"><a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-B0F49974-3E2C-4F1A-9A47-84B0F10A2DDA"><!-- --></a><code class="codeph">EXIT_FN_RAW_FORMAT</code></dt>
<dd>
<p>Internal Oracle GoldenGate canonical format: This format includes a two-byte <code class="codeph">NULL</code> indicator and a two-byte variable data length when applicable. No character-set conversion is performed by Oracle GoldenGate for this format for any character data type.</p>
</dd>
<dt class="dlterm"><a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-747A6CAC-CC6D-4EF8-9615-F6D1F89E7B57"><!-- --></a><code class="codeph">EXIT_FN_CNVTED_SESS_CHAR_FORMAT</code></dt>
<dd>
<p>User exit character set: This only applies if the column data type is:</p>
<ul style="list-style-type: disc;">
<li>
<p>a character-based type, single or multi-byte</p>
</li>
<li>
<p>a numeric type with a string representation</p>
</li>
</ul>
<p>This format is not null-terminated.</p>
</dd>
</dl>
</dd>
<dt class="dlterm"><a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-5AC4B37A-5C63-4843-9379-BD4AE4842EB9"><!-- --></a><code class="codeph">source_or_target</code></dt>
<dd>
<p>One of the following to indicate whether to use the source or the target data record to retrieve the column value.</p>
<pre dir="ltr">
EXIT_FN_SOURCE_VAL
EXIT_FN_TARGET_VAL
</pre></dd>
<dt class="dlterm"><a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-ABCEC70D-6D35-4690-AE55-E0DCDD13F958"><!-- --></a><code class="codeph">requesting_before_after_ind</code></dt>
<dd>
<p>Set when processing an after image record and you want the before-image column value of either an update or a primary key update.</p>
<p>To get the "before" value of the column while processing an "after image" of a primary key update or a regular (non-key) update record, set the <code class="codeph">requesting_before_after_ind</code> flag to <code class="codeph">BEFORE_IMAGE_VAL</code>.</p>
<ul style="list-style-type: disc;">
<li>
<p>To access the before image of the key columns of a primary key update, nothing else is necessary.</p>
</li>
<li>
<p>To access non-key columns of a primary key update or any column of a regular update, the before image must be available.</p>
</li>
</ul>
<p>The default setting is <code class="codeph">AFTER_IMAGE_VAL</code> (get the after image of the column) when an explicit input for <code class="codeph">requesting_before_after_ind</code> is not specified.</p>
<p>To make a before image available, you can use the <code class="codeph">GETUPDATEBEFORES</code> parameter or you can use the <code class="codeph">INCLUDEUPDATEBEFORES</code> option within the <code class="codeph">CUSEREXIT</code> parameter statement.</p>
<p>Note that:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">GETUPDATEBEFORES</code> causes an Extract process to write before-image records to the trail and also to make an <code class="codeph">EXIT_CALL_PROCESS_RECORD</code> call to the user exit with the before images.</p>
</li>
<li>
<p><code class="codeph">INCLUDEUPDATEBEFORES</code> does not cause an <code class="codeph">EXIT_CALL_PROCESS_RECORD</code> call to the user exit nor, in the case of Extract, does it cause the process to write the before image to the trail.</p>
</li>
</ul>
</dd>
<dt class="dlterm"><a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-62415D28-F0A8-4D25-94A6-558FFCC1D103"><!-- --></a><code class="codeph">requesting_before_after_ind</code></dt>
<dd>
<p>To get the before image of the column, set the <code class="codeph">char requesting_before_after_ind</code> flag to <code class="codeph">BEFORE_IMAGE_VAL</code>. To get the after image, set it to <code class="codeph">AFTER_IMAGE_VAL</code>. The default is to always work with the after image unless the before is specified.</p>
<p>To make the before images available, you can use the <code class="codeph">GETUPDATEBEFORES</code> parameter for the <code class="codeph">TABLE</code> statement that contains the table, or you can use the <code class="codeph">INCLUDEUPDATEBEFORES</code> option within the <code class="codeph">CUSEREXIT</code> parameter statement. Both will cause the same callout to the user exit for <code class="codeph">process_record</code>.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Output</p>
<dl>
<dt class="dlterm"><a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-C734C721-4F51-4CCD-9684-A83701F2FC58"><!-- --></a><code class="codeph">column_value</code></dt>
<dd>
<p>A pointer to the returned column value. If <code class="codeph">column_value_mode</code> is specified as <code class="codeph">EXIT_FN_CHAR_FORMAT</code>, the column value is returned as a null-terminated ASCII string; otherwise, the column value is returned in the Oracle GoldenGate internal canonical format. In ASCII format, dates are returned in the following format:</p>
<pre dir="ltr">
YYYY-MM-DD HH:MI:SS.FFFFFF
</pre>
<p>The inclusion of fractional time is database-dependent.</p>
</dd>
<dt class="dlterm"><a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-EA41B0D1-AA1D-41D4-A097-7FE27E61408F"><!-- --></a><code class="codeph">actual_value_length</code></dt>
<dd>
<p>The string length of the returned column name, in bytes. The actual length does not include a null terminator when <code class="codeph">column_value_mode</code> is specified as <code class="codeph">EXIT_FN_CHAR_FORMAT</code>.</p>
</dd>
<dt class="dlterm"><a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-CF20503E-6572-4718-8394-F650A3D9DC75"><!-- --></a><code class="codeph">null_value</code></dt>
<dd>
<p>A flag (<code class="codeph">0</code> or <code class="codeph">1</code>) indicating whether or not the column value is null. If the <code class="codeph">null_value</code> flag is <code class="codeph">1</code>, then the column value buffer is filled with null bytes.</p>
</dd>
<dt class="dlterm"><a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-264522FD-F641-4FFA-86A9-FDABEDA7EDD5"><!-- --></a><code class="codeph">value_truncated</code></dt>
<dd>
<p>A flag (<code class="codeph">0</code> or <code class="codeph">1</code>) indicating whether or not the value was truncated. Truncation occurs if the length of the column value exceeds the maximum buffer length. If <code class="codeph">column_value_mode</code> was specified as <code class="codeph">EXIT_FN_CHAR_FORMAT</code>, the null terminator is included in the length of the column.</p>
</dd>
<dt class="dlterm"><a id="GUID-E0A06862-F57B-43B8-99AA-DB3A6E9B8350__GUID-928C17FF-7620-4101-9FDC-BADF507AD914"><!-- --></a><code class="codeph">char more_lob_data</code></dt>
<dd>
<p>A flag that indicates if more LOB data is present beyond the initial 4K that can be stored in the base record. When a LOB is larger than the 4K limit, it is stored in LOB fragments.</p>
<p>You must allocate the appropriate amount of memory to contain the returned values. Oracle GoldenGate will access LOB columns up to 8K of data at all times, filling up the buffer to the amount that the user exit has allocated. If the LOB is larger than that which was allocated, subsequent callbacks are required to obtain the total column data, until all data has been sent to the user exit.</p>
<p>To determine the end of the data, evaluate <code class="codeph">more_lob_data</code>. The user exit sets this flag to either <code class="codeph">CHAR_NO_VAL</code> or <code class="codeph">CHAR_YES_VAL</code> before accessing a new column. If this flag is still initialized after first callback and is not set to either <code class="codeph">CHAR_YES_VAL</code> or <code class="codeph">CAR_NO_VAL</code>, then one of the following is true:</p>
<ul style="list-style-type: disc;">
<li>
<p>Enough memory was allocated to handle the LOB.</p>
</li>
<li>
<p>It is not a LOB.</p>
</li>
<li>
<p>It was not over the 4K limit of the base trail record size.</p>
</li>
</ul>
<p>It is recommended that you obtain the source table metadata to determine if a column might be a LOB.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Return Values</p>
<pre dir="ltr">
EXIT_FN_RET_BAD_COLUMN_DATA
EXIT_FN_RET_COLUMN_NOT_FOUND
EXIT_FN_RET_INVALID_COLUMN
EXIT_FN_RET_INVALID_CONTEXT
EXIT_FN_RET_INVALID_PARAM
EXIT_FN_RET_OK
</pre></div>
<!-- class="section" --></div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment350">
<tr>
<td class="cellalignment357">
<table class="cellalignment355">
<tr>
<td class="cellalignment354"><a href="get_column_name_from_index.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment354"><a href="get_column_value_from_name.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2013, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment359">
<table class="cellalignment353">
<tr>
<td class="cellalignment354"><a href="http://docs.oracle.com/goldengate/c1230/gg-winux/index.html"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment354"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment354"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
