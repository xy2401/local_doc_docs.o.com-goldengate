<!DOCTYPE html>
<html lang="en-US" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<meta http-equiv="Content-Type" content="UTF-8" />
<title>REPERROR</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)" />
<meta name="dcterms.created" content="2018-09-07T12:04:07Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Fusion Middleware Reference for Oracle GoldenGate" />
<meta name="dcterms.identifier" content="E81608-08" />
<meta name="dcterms.isVersionOf" content="GWURF" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2013, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="http://docs.oracle.com/goldengate/c1230/gg-winux/index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="recoveryoptions.htm" title="Previous" type="text/html" />
<link rel="Next" href="repfetchedcoloptions.htm" title="Next" type="text/html" />
<link rel="alternate" href="GWURF.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/fonts.css">
<link rel="stylesheet" href="../dcommon/css/foundation.css">
<link rel="stylesheet" href="../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6"></a> <span id="PAGE" style="display:none;">192/356</span> <!-- End Header -->
<a id="GWURF604"></a><a id="GWURF605"></a><a id="GWURF606"></a><a id="GWURF607"></a><a id="GWURF608"></a><a id="GWURF564"></a><a id="GWURF565"></a><a id="GWURF566"></a><a id="GWURF567"></a><a id="GWURF603"></a>
<h1 id="GWURF-GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6" class="sect1"><span class="enumeration_section">6.123</span> REPERROR</h1>
<div>
<div class="section">
<p class="subhead1">Valid For</p>
<p>Replicat</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Description</p>
<p>Use the <code class="codeph">REPERROR</code> parameter to control how Replicat responds to errors. The default response of Replicat to any error is to abend.</p>
<p>You can use one <code class="codeph">REPERROR</code> statement to handle most errors in a default manner, while using one or more other <code class="codeph">REPERROR</code> statements to handle specific errors differently. For example, you can ignore duplicate-record errors but abend processing in all other cases.</p>
<p>You can use <code class="codeph">REPERROR</code> globally (at the root of the parameter file) to affect all <code class="codeph">MAP</code> statements that follow it, or you can use it within a <code class="codeph">MAP</code> statement to affect the tables specified in that statement. Using <code class="codeph">REPERROR</code> within a <code class="codeph">MAP</code> statement gives you the ability to handle errors in a particular way for each thread of a coordinated Replicat.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Using Record-level Error Handling</p>
<p>All <code class="codeph">REPERROR</code> options except <code class="codeph">TRANSDISCARD</code> and <code class="codeph">TRANSEXCEPTION</code> apply an error-handling action in response to an individual SQL operation on an individual record. Other, error-free records in the same transaction are processed as configured in the <code class="codeph">MAP</code> statements and other parameters in the parameter file, as applicable.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Using Transaction-level Error Handling</p>
<p>The <code class="codeph">TRANSDISCARD</code>, <code class="codeph">TRANSEXCEPTION</code>, and <code class="codeph">ABEND</code> options apply an error-handling action to an entire transaction. The triggering error can occur on an individual record in the transaction or on the commit operation. (Commit errors do not have a particular record associated with them.) These options can be used to:</p>
<ul style="list-style-type: disc;">
<li>
<p>prevent an entire source transaction from being replicated to the target when any error is associated with it.</p>
</li>
<li>
<p>respond to a commit error when deferred constraint checking is enabled on the target.</p>
</li>
</ul>
<p><code class="codeph">TRANSDISCARD</code> and <code class="codeph">TRANSEXCEPTION</code> are mutually exclusive.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Effect of Other Parameters on Transaction-level Options</p>
<p><code class="codeph">TRANSDISCARD</code> and <code class="codeph">TRANSEXCEPTION</code> honor the boundaries of the source transaction; however, the presence of <code class="codeph">BATCHSQL</code>, <code class="codeph">GROUPTRANSOPS</code>, or <code class="codeph">MAXTRANSOPS</code> in the parameter file may affect the error-handling logic or outcome, because they alter transaction boundaries.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Effect of BATCHSQL and GROUPTRANSOPS</p>
<p><code class="codeph">BATCHSQL</code> or <code class="codeph">GROUPTRANSOPS</code> (the default) both group SQL operations from different transactions into larger transactions to improve performance, while maintaining transactional order. When these parameters are in effect and any error occurs, Replicat first tries to resolve it by entering an alternate processing mode (see the documentation for those parameters). If the error persists, <code class="codeph">TRANSDISCARD</code> or <code class="codeph">TRANSEXCEPTION</code> comes into effect, and Replicat reverts to source-processing mode as follows:</p>
<ol>
<li>
<p>It rolls back the grouped or arrayed transaction.</p>
</li>
<li>
<p>It replays the offending transaction one SQL operation at a time, using the same transaction boundaries as the source transaction.</p>
</li>
<li>
<p>It performs the discard logic (<code class="codeph">TRANSDISCARD</code>) or exceptions-mapping (<code class="codeph">TRANSEXCEPTION</code>). (See those option descriptions for more detail.)</p>
</li>
<li>
<p>It resumes <code class="codeph">BATCHSQL</code> or <code class="codeph">GROUPTRANSOPS</code> mode after the <code class="codeph">TRANSDISCARD</code> error handling is completed.</p>
</li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Effect of MAXTRANSOPS</p>
<p>The integrity of <code class="codeph">TRANSDISCARD</code> and <code class="codeph">TRANSEXCEPTION</code> transaction-level error handling can be adversely affected by the setting of the <code class="codeph">MAXTRANSOPS</code> parameter. <code class="codeph">MAXTRANSOPS</code> causes Replicat to split very large replicated source transactions into smaller transactions when it applies them on the target.</p>
<p>The <code class="codeph">TRANSDISCARD</code> and <code class="codeph">TRANSEXCEPTION</code> logic cause Replicat to roll back to the first record after the last successful commit. This may or may not be the actual beginning of the offending transaction. It depends on whether that transaction was split up and parts of it are in the previously committed transactions. If that is the case, Replicat cannot apply the <code class="codeph">TRANSDISCARD</code> or <code class="codeph">TRANSEXCEPTION</code> action to the whole transaction as it was issued on the source, but only to the part that was rolled back from the target.</p>
<p>If you use <code class="codeph">MAXTRANSOPS</code>, make certain that it is set to a value that is larger than the largest transaction that you expect to be handled by <code class="codeph">TRANSDISCARD</code> and <code class="codeph">TRANSEXCEPTION</code>. This will ensure that transactions are not be split apart into smaller ones on the target.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Effect of Transaction-level Options on Statistics</p>
<p>The output of informational commands in GGSCI, such as <code class="codeph">STATS REPLICAT</code>, will show the total number of records in the transaction that was processed by <code class="codeph">TRANSDISCARD</code> or <code class="codeph">TRANSEXCEPTION</code> logic. This number may reflect the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Replicat writes all records of the transaction to the discard file, including any records that were excluded from Oracle GoldenGate processing by means of a <code class="codeph">FILTER</code> or <code class="codeph">WHERE</code> clause in a <code class="codeph">MAP</code> statement.</p>
</li>
<li>
<p>If a source table in the transaction has multiple targets, the discarded transaction will contain multiple copies of each record, one for each target.</p>
</li>
<li>
<p>Replicat ignores any exceptions mapping statements (as specified with <code class="codeph">EXCEPTIONSONLY</code> or <code class="codeph">MAPEXCEPTION</code> in a <code class="codeph">MAP</code> statement) when discarding the transaction.</p>
</li>
</ul>
<p>Replicat abends on errors that are caused by the discard processing (<code class="codeph">TRANSDISCARD</code>) or exceptions mapping (<code class="codeph">TRANSEXCEPTION</code>).</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Getting More Information about Error Handling</p>
<p>See <a class="olink GWUAD497" target="_blank" href="../GWUAD/handling-processing-errors.htm#GWUAD497"><span class="italic"><span id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GWUAD"><cite>Administering Oracle GoldenGate</cite></span></span></a> for more information about configuring error handling.</p>
<p>See <span class="q">"<a href="table-map.htm#GUID-C2356234-3780-48EE-9E7A-F21DC352638C">TABLE | MAP</a>"</span> for more information about the <code class="codeph">MAP</code> parameter.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Default</p>
<p><code class="codeph">TRANSABORT</code> for deadlocks; <code class="codeph">ABEND</code> for all others</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Syntax</p>
<pre dir="ltr">
REPERROR { 
(
{DEFAULT | DEFAULT2 | <span class="italic">SQL_error</span> | <span class="italic">user_defined_error</span>},
{ABEND | 
DISCARD | 
EXCEPTION | 
IGNORE |
RETRYOP [MAXRETRIES <span class="italic">n</span>] |
TRANSABORT [, MAXRETRIES] [, DELAYSECS <span class="italic">n</span> | DELAYCSECS <span class="italic">n</span>] |
TRANSDISCARD |
TRANSEXCEPTION
}
{PROCEDURE,[ABEND|IGNORE|DISCARD]}) |
RESET }
</pre></div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Error Specification Options</p>
<dl>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-228ED2D2-9F49-4DDC-8239-CB0EF5A1E796"><!-- --></a><code class="codeph">DEFAULT</code></dt>
<dd>
<p>Sets a global response to all errors except those for which explicit <code class="codeph">REPERROR</code> statements are specified.</p>
</dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-8F75EF0E-8C95-42EC-910B-0BD3D49EF145"><!-- --></a><code class="codeph">DEFAULT2</code></dt>
<dd>
<p>Provides a backup default action when the response for <code class="codeph">DEFAULT</code> is set to <code class="codeph">EXCEPTION</code>. Use <code class="codeph">DEFAULT2</code> when an exceptions <code class="codeph">MAP</code> statement is not specified for a <code class="codeph">MAP</code> statement for which errors are anticipated.</p>
</dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-3E882A5D-BAD9-4F6B-A93C-3404DE356EC4"><!-- --></a><span class="italic"><code class="codeph">SQL_error</code></span></dt>
<dd>
<p>A SQL error number. This can be a record-level error or a commit-level error if using <code class="codeph">TRANSDISCARD</code> and <code class="codeph">TRANSEXCEPTION</code>.</p>
</dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-2F383A50-D61C-4D3B-A2B6-B6CAF6C0F3EB"><!-- --></a><span class="italic"><code class="codeph">user_defined_error</code></span></dt>
<dd>
<p>A user-defined error that is specified with the <code class="codeph">RAISEERROR</code> option of a <code class="codeph">FILTER</code> clause within a <code class="codeph">MAP</code> statement.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Error Response Options</p>
<dl>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-E8589BBA-D5AF-41C2-B834-7606D2915426"><!-- --></a><code class="codeph">ABEND</code></dt>
<dd>
<p>Rolls back the transaction and terminates processing abnormally. <code class="codeph">ABEND</code> is the default.</p>
</dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-BEF97DFF-C929-45B6-9C70-20830DFEC9A9"><!-- --></a><code class="codeph">DISCARD</code></dt>
<dd>
<p>Logs the offending operation to the discard file but continue processing the transaction and subsequent transactions.</p>
</dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-36429726-FDCC-48B9-A98C-9C951685B008"><!-- --></a><code class="codeph">EXCEPTION</code></dt>
<dd>
<p>Handles the operation that causes an error as an exception, but processes error-free operations in the transaction normally. Use this option in conjunction with an exceptions <code class="codeph">MAP</code> statement or to work with the <code class="codeph">MAPEXCEPTION</code> option of <code class="codeph">MAP</code>. For example, you can map columns from failed update statements into a "missing updates" table. In the parameter file, specify the exceptions <code class="codeph">MAP</code> statement after the <code class="codeph">MAP</code> statement for which the error is anticipated.</p>
<p><code class="codeph">EXCEPTION</code> applies exception handling only to an individual SQL operation on an individual record. To apply exception handling to the entire transaction, use the <code class="codeph">TRANSEXCEPTION</code> option.</p>
<div class="infobox-note" id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-63142797-4EBC-461B-A7B0-9B1E288FE3D7">
<p class="notep1">Note:</p>
<p>When the Conflict Detection and Resolution (CDR) feature is active, CDR automatically treats all operations that cause errors as exceptions if an exceptions <code class="codeph">MAP</code> statement exists for the affected table. In this case, <code class="codeph">REPERROR</code> with <code class="codeph">EXCEPTION</code> is not necessary, but you should use <code class="codeph">REPERROR</code> with other options to handle conflicts that CDR cannot resolve, or for conflicts that you do not want CDR to handle.</p>
</div>
</dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-2C30F360-A23E-45DC-8904-7956F677809F"><!-- --></a><code class="codeph">IGNORE</code></dt>
<dd>
<p>Ignores the error.</p>
</dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-862D4188-480D-4CC9-9735-7B4AA3735397"><!-- --></a><code class="codeph">RETRYOP [MAXRETRIES</code> <span class="italic"><code class="codeph">n]</code></span></dt>
<dd>
<p>Retries the offending operation. Use the <code class="codeph">MAXRETRIES</code> option to control the number of retries. For example, if a table is out of extents, <code class="codeph">RETRYOP</code> with <code class="codeph">MAXRETRIES</code> gives you time to add extents so the transaction does not fail. Replicat abends after the specified number of <code class="codeph">MAXRETRIES</code>.</p>
</dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-EC0BE558-9514-4F13-886E-4F28675C5733"><!-- --></a><code class="codeph">TRANSABORT [, MAXRETRIES</code> <span class="italic"><code class="codeph">n</code></span><code class="codeph">] [, DELAYSECS</code> <span class="italic"><code class="codeph">n</code></span> <code class="codeph">| DELAYCSECS</code> <span class="italic"><code class="codeph">n</code></span><code class="codeph">]</code></dt>
<dd>
<p>Aborts the transaction and repositions to the beginning of the transaction. This sequence continues either until the record(s) are processed successfully or <code class="codeph">MAXRETRIES</code> expires. If <code class="codeph">MAXRETRIES</code> is not set, the <code class="codeph">TRANSABORT</code> action will loop continuously.</p>
<p>Use one of the <code class="codeph">DELAY</code> options to delay the retry. <code class="codeph">DELAYSECS</code> <span class="italic"><code class="codeph">n</code></span> sets the delay in seconds and the default is 60 seconds. <code class="codeph">DELAYCSECS</code> <span class="italic"><code class="codeph">n</code></span> sets the delay in centiseconds.</p>
<p>The <code class="codeph">TRANSABORT</code> option is useful for handling timeouts and deadlocks on databases that support those conditions.</p>
</dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-F42C7154-45D7-4DF0-AFB8-52ED34882E19"><!-- --></a><code class="codeph">TRANSDISCARD</code></dt>
<dd>
<p>Discards the entire source transaction if any operation within that transaction, including the commit operation, causes a Replicat error that is listed in the <code class="codeph">REPERROR</code> error specification. Replicat aborts the transaction and, if the error occurred on a record, writes that record to the discard file. Replicat then replays the transaction and writes all of the records to the discard file, including the commit record. Replicat abends on errors that are caused by the discard processing.</p>
<p>If the discarded record has already been data-mapped to a target record, Replicat writes it to the discard file in the target format; otherwise, it will be written in source format. The replayed transaction itself is always written in source format.</p>
<p><code class="codeph">TRANSDISCARD</code> supports record-level errors as well as commit errors.</p>
<p>Additional information is at the beginning of this topic.</p>
</dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-98A1A455-B622-42BA-A51D-447822DD2AB5"><!-- --></a><code class="codeph">TRANSEXCEPTION</code></dt>
<dd>
<p>If an error specified with <code class="codeph">REPERROR</code> occurs on any record in a transaction, performs exceptions mapping for every record in the transaction according to its corresponding exceptions-mapping specification, as defined by a <code class="codeph">MAPEXCEPTION</code> or <code class="codeph">EXCEPTIONSONLY</code> clause in an exceptions <code class="codeph">MAP</code> statement. If any record does not have a corresponding exceptions mapping specification, or if there is an error writing to the exceptions table, Replicat abends with an error message.</p>
<p>When an error is encountered and <code class="codeph">TRANSEXCEPTION</code> is being used, Replicat aborts the transaction and, if the error occurred on a record, writes that record to the discard file. Replicat replays the transaction and examines the source records to find the exceptions-mapping specifications, and then executes them.</p>
<p><code class="codeph">TRANSEXCEPTION</code> supports record-level errors as well as commit errors. To handle errors at the record level (for individual SQL operations), without affecting error-free operations in the same transaction, use the <code class="codeph">EXCEPTION</code> option in a <code class="codeph">MAP</code> statement.</p>
</dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-E487922C-09FD-4733-B9BF-A3A602CB92CA"><!-- --></a><code class="codeph">PROCEDURE,[ABEND|IGNORE|DISCARD]</code></dt>
<dd>
<p>Use <code class="codeph">PROCEDURE</code> to configure behavior of Replicat when a procedural replication error occurs. By default, Replicat will <code class="codeph">ABEND</code> when a procedural replication error occurs.</p>
The <code class="codeph">IGNORE</code> option ignores the call that failed. The <code class="codeph">DISCARD</code> option stages the discarded errors in the apply error queue in the target database. These errors can be re-executed or deleted at a later time.</dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-7D0C2A78-BE76-4DF1-988F-38878EDA6501"><!-- --></a><code class="codeph">RESET</code></dt>
<dd>
<p>Use a <code class="codeph">REPERROR RESET</code> statement to remove error-handling rules specified in previous <code class="codeph">REPERROR</code> parameters and apply default error handling to all <code class="codeph">MAP</code> statements that follow.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Examples of Using REPERROR Globally</p>
<p>These examples show <code class="codeph">REPERROR</code> as used at the root of the parameter file to set global error-handling rules. You can override any or all of these rules for any given table or tables by using <code class="codeph">REPERROR</code> in a <code class="codeph">MAP</code> statement. See <span class="q">"<a href="reperror.htm#GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__BABJBGCB">Examples of Using REPERROR Globally and in a MAP Statement</a>"</span>.</p>
<dl>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-5073870B-4C22-4196-AB4C-CDF8B5941DED"><!-- --></a>Example 1&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The following example demonstrates how to stop processing for most errors, but ignore duplicate-record errors.</p>
<pre dir="ltr">
REPERROR (DEFAULT, ABEND)
REPERROR (-1, IGNORE)
</pre></dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-832FDF91-36D4-41F6-A869-8A6E888FA710"><!-- --></a>Example 2&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The following example invokes an exceptions MAP statement created to handle errors on the account table. Errors on the product table cause Replicat to end abnormally because an exceptions <code class="codeph">MAP</code> statement was not defined.</p>
<pre dir="ltr">
REPERROR (DEFAULT, EXCEPTION)
REPERROR (DEFAULT2, ABEND)
MAP sales.product, TARGET sales.product;
MAP sales.account, TARGET sales.account;
INSERTALLRECORDS
MAP sales.account, TARGET sales.account_exception,
EXCEPTIONSONLY,
COLMAP (account_no = account_no,
optype = @GETENV ('lasterr', 'optype'),
dberr = @GETENV ('lasterr', 'dberrnum'),
dberrmsg = @GETENV ('lasterr', 'dberrmsg'));
</pre></dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-BADF5C9A-BEA3-44E2-B687-FDFDD499A08C"><!-- --></a>Example 3&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The following applies error rules for the first <code class="codeph">MAP</code> statement and then restores the default of <code class="codeph">ABEND</code> to the second one.</p>
<pre dir="ltr">
REPERROR (-1, IGNORE)
MAP sales.product, TARGET sales.product;
REPERROR RESET
MAP sales.account, TARGET sales.account;
</pre></dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-AFA29609-B533-4C6A-9BDA-4F5960C142C3"><!-- --></a>Example 4&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The following discards the offending record and then replays the entire transaction if any operation on a record within it generates an error 1403. Other error types cause Replicat to abend.</p>
<pre dir="ltr">
REPERROR DEFAULT ABEND
REPERROR 1403 TRANSDISCARD
</pre></dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-88BE1A3B-9C8D-48EF-92C8-FF78691FE4FA"><!-- --></a>Example 5&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The following discards the offending record and then replays the entire transaction to search for an exceptions-mapping specification that writes to the exceptions table that is named <code class="codeph">tgtexception</code>. Other errors cause Replicat to discard the offending record (if applicable) and then abend.</p>
<pre dir="ltr">
REPERROR DEFAULT ABEND
REPERROR 1403 TRANSEXCEPTION
MAP src, TARGET tgt, &amp;
MAPEXCEPTION (TARGET tgtexception, INSERTALLRECORDS, COLMAP (&hellip;) );
</pre></dd>
</dl>
</div>
<!-- class="section" -->
<div class="section" id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__BABJBGCB">
<p class="subhead1">Examples of Using REPERROR Globally and in a MAP Statement</p>
<p>The following examples show different ways that <code class="codeph">REPERROR</code> can be used in a <code class="codeph">MAP</code> statement in conjunction with a global <code class="codeph">REPERROR</code> statement.</p>
<dl>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-A1BBF931-E071-45C2-989E-CDDF201F9204"><!-- --></a>Example 1&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre dir="ltr">
REPLICAT <span class="italic">group_name</span>
REPERROR (<span class="italic">error1</span> , <span class="italic">response1</span>)
MAP <span class="italic">src1</span>, TARGET <span class="italic">tgt1</span>, REPERROR (<span class="italic">error1</span>, <span class="italic">response2</span>);
MAP <span class="italic">src2</span>, TARGET <span class="italic">tgt2</span>, REPERROR (<span class="italic">error2</span>, <span class="italic">response3</span>);
</pre>
<p>In the preceding example, when <code class="codeph">error1</code> occurs for the first <code class="codeph">MAP</code> statement, the action should be <code class="codeph">response2</code>, not <code class="codeph">response1</code>, because an override was specified. However, if an <code class="codeph">error1</code> occurs for the second <code class="codeph">MAP</code> statement, the response should be <code class="codeph">response1</code>, the global response. The response for <code class="codeph">error2</code> would be <code class="codeph">response3</code>, which is <code class="codeph">MAP</code>-specific.</p>
</dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-4997D257-FB9A-485B-B7A6-1E8CAA4426C2"><!-- --></a>Example 2&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre dir="ltr">
REPLICAT <span class="italic">group_name</span>
REPERROR (<span class="italic">error1</span> , <span class="italic">response1</span>)
MAP <span class="italic">src1</span>, TARGET <span class="italic">tgt1</span>, REPERROR (<span class="italic">error2</span>, <span class="italic">response2</span>),
REPERROR (<span class="italic">error3</span>, <span class="italic">response3</span>);
</pre>
<p>In the preceding example, when replicating from <code class="codeph">src1</code> to <code class="codeph">src2</code>, all errors and actions (1-3) should apply, because all <code class="codeph">REPERROR</code> statements address different errors (there are no <code class="codeph">MAP</code>-specific overrides).</p>
</dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-B5A19920-3F6A-4222-AC2A-3612AE98470C"><!-- --></a>Example 3&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre dir="ltr">
REPLICAT <span class="italic">group_name</span>
REPERROR (<span class="italic">error1</span> , <span class="italic">response1</span>)
MAP <span class="italic">src1</span>, TARGET <span class="italic">tgt1</span>, REPERROR (<span class="italic">error1</span>, <span class="italic">response2</span>);
MAP <span class="italic">src2</span>, TARGET <span class="italic">tgt2</span>, REPERROR (<span class="italic">error2</span>, <span class="italic">response3</span>);
REPERROR (<span class="italic">error1</span> , <span class="italic">response4</span>)
MAP <span class="italic">src2</span>, TARGET <span class="italic">tgt2</span>, REPERROR (<span class="italic">error3</span>, <span class="italic">response3</span>);
</pre>
<p>In the preceding example, if <code class="codeph">error1</code> occurs for the first <code class="codeph">MAP</code> statement, the action should be <code class="codeph">response2</code>. For the second one it would be <code class="codeph">response1</code> (the global response), and for the third one it would be <code class="codeph">response4</code> (because of the second <code class="codeph">REPERROR</code> statement). A global <code class="codeph">REPERROR</code> statement applies to all <code class="codeph">MAP</code> statements that follow it in the parameter file until another <code class="codeph">REPERROR</code> statement starts new rules.</p>
</dd>
<dt class="dlterm"><a id="GUID-CB7CD1F1-EC5E-482A-9FDB-3BAA2ECF86B6__GUID-A6AFF2AE-DCCD-4BB8-98A0-F34FA0931B38"><!-- --></a>Example 4&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre dir="ltr">
REPERROR DEFAULT ABEND
REPERROR 1403 TRANSDISCARD.
MAP src, TARGET tgt, REPERROR(600 TRANSDISCARD);
</pre>
<p>In the preceding example, if error 600 is encountered while applying source table <code class="codeph">src</code> to target table <code class="codeph">tgt</code>, the whole transaction is written to discard file. Encountering error 1403 also results in the same action based on the global <code class="codeph">REPERROR</code> specification. On the other errors, the process simply discards only the offending record and then abends.</p>
</dd>
</dl>
</div>
<!-- class="section" --></div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment350">
<tr>
<td class="cellalignment357">
<table class="cellalignment355">
<tr>
<td class="cellalignment354"><a href="recoveryoptions.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment354"><a href="repfetchedcoloptions.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2013, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment359">
<table class="cellalignment353">
<tr>
<td class="cellalignment354"><a href="http://docs.oracle.com/goldengate/c1230/gg-winux/index.html"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment354"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment354"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
