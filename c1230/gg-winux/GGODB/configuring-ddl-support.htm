<!DOCTYPE html>
<html lang="en-US" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<meta http-equiv="Content-Type" content="UTF-8" />
<title>Configuring DDL Support</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)" />
<meta name="description" content="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate." />
<meta name="dcterms.created" content="2018-07-26T05:17:29Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Fusion Middleware Using Oracle GoldenGate for Oracle Database" />
<meta name="dcterms.identifier" content="E88785-05" />
<meta name="dcterms.isVersionOf" content="GGODB" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2010, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="http://docs.oracle.com/goldengate/c1230/gg-winux/index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="additional-configuration-steps-using-nonintegrated-replicat.htm" title="Previous" type="text/html" />
<link rel="Next" href="creating-process-groups.htm" title="Next" type="text/html" />
<link rel="alternate" href="GGODB.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/fonts.css">
<link rel="stylesheet" href="../dcommon/css/foundation.css">
<link rel="stylesheet" href="../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF"></a> <span id="PAGE" style="display:none;">15/28</span> <!-- End Header -->
<script  >
//<![CDATA[
window.name='configuring-ddl-support'
//]]>
</script> <script  >
    function footdisplay(footnum,footnote) {
    var msg = window.open('about:blank', 'NewWindow' + footnum,
        'directories=no,height=100,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');
    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">'); 
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en-us" ><head><title>');
   
    msg.document.write('Footnote&amp;nbsp; ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><div id="footnote"><h1>Footnote&nbsp; ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/div><\/body><\/html>');
    msg.document.close();
    setTimeout(function() {
        var height = msg.document.getElementById('footnote').offsetHeight;
        msg.resizeTo(598, height + 100);
    }
    , 100);
    msg.focus();
}
</script><noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript>
<h1 id="GGODB-GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" class="sect1"><span class="enumeration_chapter">12</span> Configuring DDL Support</h1>
<div>
<div><span>This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.</span></div>
<p><span class="bold">Topics:</span></p>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-B73C7C8F-D270-4679-8C62-10A557B0418C">Prerequisites for Configuring DDL</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-F22CC022-1DEB-4985-84AC-8FC85161CD3B">Overview of DDL Synchronization</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-10A0DA4A-B6C5-4D5D-839E-7731B580D4A2">Limitations of Oracle GoldenGate DDL Support</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-A6826FBA-FF61-47FE-8E1D-B8B61DE91845">Configuration Guidelines for DDL Support</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-48FAC36D-5BA2-4355-A4E3-9D4C1EDBE7AA">Understanding DDL Scopes</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-A29FD45D-736B-4D18-9319-F16DAEF9C9A6">Correctly Identifying Unqualified Object Names in DDL</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-44A7C9FC-446E-46D1-97BC-B63D866C3909">Enabling DDL Support</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-D6165D41-5CDA-4B73-A545-B196A7AD57B9">Filtering DDL Replication</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-69F54227-17AB-437B-BB65-70C6E4F59FE2">Special Filter Cases</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-9EE9E693-2197-417C-9BB0-FA515DFF2F0F">How Oracle GoldenGate Handles Derived Object Names</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-741901ED-6318-47AB-BBAB-BDFF9C86092B">Using DDL String Substitution</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-F1F3B4C8-8A93-4C80-87EA-5B74EA35E370">Controlling the Propagation of DDL to Support Different Topologies</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-EFAFF255-FFD1-4C8B-9CA8-F15266E2BEA6">Adding Supplemental Log Groups Automatically</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-5228B712-1279-4109-9667-D09E222A4F5B">Removing Comments from Replicated DDL</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-49EEAD0F-5817-433E-AF9C-A32136EDAB37">Replicating an IDENTIFIED BY Password</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-05DF9C4B-D6CD-4F87-AFB0-6F6ED8CC17E4">How DDL is Evaluated for Processing</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-0F1E9E0F-DD57-4663-9381-1CD40712BECC">Viewing DDL Report Information</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-0E1690FD-27E4-4EF7-A818-6F1FBCA96CFE">Tracing DDL Processing</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-FE395ADD-39B2-4E38-AF82-70C84304716D">Using Tools that Support Trigger-Based DDL Capture</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-DCD48579-8E16-413B-95DC-33999D26C1D2">Using Edition-Based Redefinition</a><br /></li>
</ul>
</div>
<div class="props_rev_3"><a id="GUID-B73C7C8F-D270-4679-8C62-10A557B0418C"></a>
<h2 id="GGODB-GUID-B73C7C8F-D270-4679-8C62-10A557B0418C" class="sect2"><span class="enumeration_section">12.1</span> Prerequisites for Configuring DDL</h2>
<div>
<div class="section">
<p>Extract can capture DDL operations from a source Oracle Database through the use of a special DDL trigger or natively through the Oracle logmining server. Which of these methods you can use depends on the Extract capture mode and the version of the source Oracle Database. This section describes the available support in each capture mode, see <a href="choosing-capture-and-apply-modes.htm#GUID-46EEC8E7-F1A3-41F6-ABEE-706B48DC338F" title="This chapter contains information that helps you determine the appropriate capture and apply modes for your database environment.">Choosing Capture and Apply Modes</a>.</p>
</div>
<!-- class="section" --></div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-6C1798EA-AE73-4B2C-858B-6DCF99017C10">Support for DDL Capture in Integrated Capture Mode</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-9B265A58-AC46-45F4-8F4F-77D1274D3BAD">Support for DDL Capture in Classic Capture Mode</a><br /></li>
</ul>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-6C1798EA-AE73-4B2C-858B-6DCF99017C10"></a>
<h3 id="GGODB-GUID-6C1798EA-AE73-4B2C-858B-6DCF99017C10" class="sect3"><span class="enumeration_section">12.1.1</span> Support for DDL Capture in Integrated Capture Mode</h3>
<div>
<div class="section">
<p>The integrated capture mode of Extract supports two DDL capture methods:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">Oracle 11.2.0.4 or later</span>: Oracle Databases that have the database <code class="codeph">COMPATIBLE</code> parameter set to 11.2.0.4 or higher support DDL capture through the database logmining server. This method is known as <span class="italic">native DDL capture</span> (also known as <span class="italic">triggerless DDL capture</span>). No trigger or installed supportive objects are required. Native DDL capture is the only supported method for capturing DDL from a multitenant container database. For downstream mining, the source database must also have database <code class="codeph">COMPATIBLE</code> set to 11.2.0.4 or higher to support DDL capture through the database logmining server.</p>
</li>
<li>
<p><span class="bold">Versions earlier than 11.2.0.4</span>: Oracle Databases that have the <code class="codeph">COMPATIBLE</code> parameter set to anything earlier than 11.2.0.4 require the use of the Oracle GoldenGate DDL trigger. To use trigger-based DDL capture, you must install the DDL trigger and supporting database objects before you configure Extract for DDL support.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-B73C7C8F-D270-4679-8C62-10A557B0418C">Prerequisites for Configuring DDL</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-9B265A58-AC46-45F4-8F4F-77D1274D3BAD"></a>
<h3 id="GGODB-GUID-9B265A58-AC46-45F4-8F4F-77D1274D3BAD" class="sect3"><span class="enumeration_section">12.1.2</span> Support for DDL Capture in Classic Capture Mode</h3>
<div>
<div class="section">
<p>Classic capture mode requires the use of the Oracle GoldenGate DDL trigger to capture DDL from an Oracle Database. Native DDL capture is not supported by classic capture mode.</p>
<p>DDL capture from a multitenant container database is not supported by classic capture mode.</p>
<p>When you are using Classic capture mode and replicating a <code class="codeph">CREATE USER</code> using the DDL trigger, the trigger owner and the Extract login user <span class="italic">must</span> match to avoid a privilege error when attempting to replicate the <code class="codeph">CREATE USER</code> command.</p>
<p>To use trigger-based DDL capture, you must install the DDL trigger and supporting database objects before you configure Extract for DDL support, see <a href="installing-trigger-based-ddl-capture-1.htm#GUID-70B1B422-2369-40BA-B845-7AE2F7D08A3E" title="This appendix contains instructions for installing the objects that support the trigger-based method of Oracle GoldenGate DDL support.">Installing Trigger-Based DDL Capture</a>.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-B73C7C8F-D270-4679-8C62-10A557B0418C">Prerequisites for Configuring DDL</a></p>
</div>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-F22CC022-1DEB-4985-84AC-8FC85161CD3B"></a>
<h2 id="GGODB-GUID-F22CC022-1DEB-4985-84AC-8FC85161CD3B" class="sect2"><span class="enumeration_section">12.2</span> Overview of DDL Synchronization</h2>
<div>
<p>Oracle GoldenGate supports the synchronization of DDL operations from one database to another. DDL synchronization can be active when:</p>
<ul style="list-style-type: disc;">
<li>
<p>business applications are actively accessing and updating the source and target objects.</p>
</li>
<li>
<p>Oracle GoldenGate transactional data synchronization is active.</p>
</li>
</ul>
<p>The components that support the replication of DDL and the replication of transactional data changes (DML) are independent of each other. Therefore, you can synchronize:</p>
<ul style="list-style-type: disc;">
<li>
<p>just DDL changes</p>
</li>
<li>
<p>just DML changes</p>
</li>
<li>
<p>both DDL and DML</p>
</li>
</ul>
<p>For a list of supported objects and operations for DDL support for Oracle, see <a href="1-understanding-whats-supported.htm#GUID-EC0BB78C-5417-4CAA-921E-7F4D094BE909">Supported Objects and Operations in Oracle DDL</a>.</p>
</div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-10A0DA4A-B6C5-4D5D-839E-7731B580D4A2"></a>
<h2 id="GGODB-GUID-10A0DA4A-B6C5-4D5D-839E-7731B580D4A2" class="sect2"><span class="enumeration_section">12.3</span> Limitations of Oracle GoldenGate DDL Support</h2>
<div>
<div class="section">
<p>This topic contains some limitations of the DDL feature. For any additional limitations that were found after this documentation was published, see the <a class="olink OGGRN" target="_blank" href="../OGGRN/toc.htm"><span class="italic"><span id="GUID-10A0DA4A-B6C5-4D5D-839E-7731B580D4A2__OGGRN"><cite>Release Notes for Oracle GoldenGate</cite></span></span></a>.</p>
</div>
<!-- class="section" --></div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-A24B14D7-6316-4E97-8266-D33B4BD69297">DDL Statement Length</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-BFE1B12A-7C17-4E62-A5E4-EC60907B7592">Supported Topologies</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-36B449F6-E589-45AE-9DD1-70080A19F41B">Filtering, Mapping, and Transformation</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-157BAE0A-A51C-4F72-88D5-53FD7369E28B">Renames</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-5FE7F12A-CDE6-40D2-880C-B9747AB03B52">Interactions Between Fetches from a Table and DDL</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-5805205B-7103-495A-AA3B-CE054CB9B580">Comments in SQL</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-23EF47CE-6A53-4EBD-9D58-3517ED616266">Compilation Errors</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-1BBD795E-48A3-4E14-B349-5252B7B0C1BD">Interval Partitioning</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-BEF92EFA-B6BC-415F-9BBE-CA9715154F93">DML or DDL Performed Inside a DDL Trigger</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-96F70D00-E3B7-49C9-BC8E-8662F9579EF1">LogMiner Data Dictionary Maintenance</a><br /></li>
</ul>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-A24B14D7-6316-4E97-8266-D33B4BD69297"></a>
<h3 id="GGODB-GUID-A24B14D7-6316-4E97-8266-D33B4BD69297" class="sect3"><span class="enumeration_section">12.3.1</span> DDL Statement Length</h3>
<div>
<div class="section">
<p>Oracle GoldenGate measures the length of a DDL statement in bytes, not in characters. The supported length is approximately 4 MB, allowing for some internal overhead that can vary in size depending on the name of the affected object and its DDL type, among other characteristics. If the DDL is longer than the supported size, Extract will issue a warning and ignore the DDL operation.</p>
<p>If Extract is capturing DDL by means of the DDL trigger, the ignored DDL is saved in the marker table. You can capture Oracle DDL statements that are ignored, as well as any other Oracle DDL statement, by using the <code class="codeph">ddl_ddl2file.sql</code> script, which saves the DDL operation to a text file in the <code class="codeph">USER_DUMP_DEST</code> directory of Oracle. The script prompts for the following input:</p>
<ul style="list-style-type: disc;">
<li>
<p>The name of the schema that contains the Oracle GoldenGate DDL objects, which is specified in the <code class="codeph">GLOBALS</code> file.</p>
</li>
<li>
<p>The Oracle GoldenGate marker sequence number, which is recorded in the Extract report file when <code class="codeph">DDLOPTIONS</code> with the <code class="codeph">REPORT</code> option is used in the Extract parameter file.</p>
</li>
<li>
<p>A name for the output file.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-10A0DA4A-B6C5-4D5D-839E-7731B580D4A2">Limitations of Oracle GoldenGate DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-BFE1B12A-7C17-4E62-A5E4-EC60907B7592"></a>
<h3 id="GGODB-GUID-BFE1B12A-7C17-4E62-A5E4-EC60907B7592" class="sect3"><span class="enumeration_section">12.3.2</span> Supported Topologies</h3>
<div>
<div class="section">
<p><span>Oracle GoldenGate</span> supports DDL synchronization only in a like-to-like configuration. The source and target object definitions must be identical.</p>
<p>DDL replication is only supported for Oracle to Oracle replication. It is not supported between different databases, like Oracle to Teradata, or SQL Server to Oracle.</p>
<p><span>Oracle GoldenGate</span>does not support DDL on a standby database.</p>
<p><span>Oracle GoldenGate</span> supports DDL replication in all supported unidirectional configurations, and in bidirectional configurations between two, and only two, systems. For special considerations in an Oracle active-active configuration, see <a href="configuring-ddl-support.htm#GUID-5B5F61D4-386D-43B9-B0E7-400663382226">Propagating DDL in Active-Active (Bidirectional) Configurations</a>.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-10A0DA4A-B6C5-4D5D-839E-7731B580D4A2">Limitations of Oracle GoldenGate DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-36B449F6-E589-45AE-9DD1-70080A19F41B"></a>
<h3 id="GGODB-GUID-36B449F6-E589-45AE-9DD1-70080A19F41B" class="sect3"><span class="enumeration_section">12.3.3</span> Filtering, Mapping, and Transformation</h3>
<div>
<div class="section">
<p>DDL operations cannot be transformed by any Oracle GoldenGate process. However, source DDL can be mapped and filtered to a different target object by a primary Extract or a Replicat process. Mapping or filtering of DDL by a data-pump Extract is not permitted, and the DDL is passed as it was received from the primary Extract.</p>
<p>For example, <code class="codeph">ALTER TABLE TableA</code> is processed by a data pump as <code class="codeph">ALTER TABLE TableA</code>. It cannot be mapped by that process as <code class="codeph">ALTER TABLE TableB</code>, regardless of any <code class="codeph">TABLE</code> statements that specify otherwise.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-10A0DA4A-B6C5-4D5D-839E-7731B580D4A2">Limitations of Oracle GoldenGate DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-157BAE0A-A51C-4F72-88D5-53FD7369E28B"></a>
<h3 id="GGODB-GUID-157BAE0A-A51C-4F72-88D5-53FD7369E28B" class="sect3"><span class="enumeration_section">12.3.4</span> Renames</h3>
<div>
<div class="section">
<p><code class="codeph">RENAME</code> operations on tables are converted to the equivalent <code class="codeph">ALTER TABLE RENAME</code> so that a schema name can be included in the target DDL statement. For example <code class="codeph">RENAME tab1 TO tab2</code> could be changed to <code class="codeph">ALTER TABLE schema.tab1 RENAME TO schema.tab2</code>. The conversion is reported in the Replicat process report file.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-10A0DA4A-B6C5-4D5D-839E-7731B580D4A2">Limitations of Oracle GoldenGate DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-5FE7F12A-CDE6-40D2-880C-B9747AB03B52"></a>
<h3 id="GGODB-GUID-5FE7F12A-CDE6-40D2-880C-B9747AB03B52" class="sect3"><span class="enumeration_section">12.3.5</span> Interactions Between Fetches from a Table and DDL</h3>
<div>
<div class="section">
<p>Oracle GoldenGate supports some data types by identifying the modified row from the redo stream and then querying the underlying table to fetch the changed columns. For instance, in classic capture, partial updates on LOBs (modifications done via <code class="codeph">dbms_lob package</code>) are supported by identifying the modified row and the LOB column from the redo log, and then querying for the LOB column value for the row from the base table. A similar technique is employed to support UDT (both in classic and integrated capture).</p>
<div class="infobox-note" id="GUID-5FE7F12A-CDE6-40D2-880C-B9747AB03B52__GUID-35DDA3D1-6CF8-4A03-BCD9-981ED1405E6B">
<p class="notep1">Note:</p>
<p>Integrated capture only requires fetch for UDT when <span class="italic">not</span> using native object support.</p>
</div>
<p>Such fetch-based support is implemented by issuing a flashback query to the database based on the SCN (System Change Number) at which the transaction committed. The flashback query feature has certain limitations. Certain DDL operations act as barriers such that flashback queries to get data prior to these DDLs do not succeed. Examples of such DDL are <code class="codeph">ALTER TABLE MODIFY COLUMN</code> and <code class="codeph">ALTER TABLE DROP COLUMN</code>.</p>
<p>Thus, in cases where there is Extract capture lag, an intervening DDL may cause fetch requests for data prior to the DDL to fail. In such cases, Extract falls back and fetches the current snapshot of the data for the modified column. There are several limitations to this approach: First, the DDL could have modified the column that Extract needs to fetch (for example, suppose the intervening DDL added a new attribute to the UDT that is being captured). Second, the DDL could have modified one of the columns that Extract uses as a logical row identifier. Third, the table could have been renamed before Extract had a chance to fetch the data.</p>
<p>To prevent fetch-related inconsistencies such as these, take the following precautions while modifying columns.</p>
<ol>
<li>
<p>Pause all DML to the table.</p>
</li>
<li>
<p>Wait for Extract to finish capturing all remaining redo, and wait for Replicat to finish processing the captured data from trail. To determine whether Replicat is finished, issue the following command in GGSCI until you see a message that there is no more data to process.</p>
<pre dir="ltr">
INFO REPLICAT <span class="italic">group</span>
</pre></li>
<li>
<p>Execute the DDL on the source.</p>
</li>
<li>
<p>Resume source DML operations.</p>
</li>
</ol>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-10A0DA4A-B6C5-4D5D-839E-7731B580D4A2">Limitations of Oracle GoldenGate DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-5805205B-7103-495A-AA3B-CE054CB9B580"></a>
<h3 id="GGODB-GUID-5805205B-7103-495A-AA3B-CE054CB9B580" class="sect3"><span class="enumeration_section">12.3.6</span> Comments in SQL</h3>
<div>
<div class="section">
<p>If a source DDL statement contains a comment in the middle of an object name, that comment will appear at the end of the object name in the target DDL statement. For example:</p>
<p><span class="bold">Source:</span></p>
<pre dir="ltr">
CREATE TABLE hr./*comment*/emp ...
</pre>
<p><span class="bold">Target:</span></p>
<pre dir="ltr">
CREATE TABLE hr.emp /*comment*/ ...
</pre>
<p>This does not affect the integrity of DDL synchronization. Comments in any other area of a DDL statement remain in place when replicated.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-10A0DA4A-B6C5-4D5D-839E-7731B580D4A2">Limitations of Oracle GoldenGate DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-23EF47CE-6A53-4EBD-9D58-3517ED616266"></a>
<h3 id="GGODB-GUID-23EF47CE-6A53-4EBD-9D58-3517ED616266" class="sect3"><span class="enumeration_section">12.3.7</span> Compilation Errors</h3>
<div>
<div class="section">
<p>If a <code class="codeph">CREATE</code> operation on a trigger, procedure, function, or package results in compilation errors, Oracle GoldenGate executes the DDL operation on the target anyway. Technically, the DDL operations themselves completed successfully and should be propagated to allow dependencies to be executed on the target, for example in recursive procedures.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-10A0DA4A-B6C5-4D5D-839E-7731B580D4A2">Limitations of Oracle GoldenGate DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-1BBD795E-48A3-4E14-B349-5252B7B0C1BD"></a>
<h3 id="GGODB-GUID-1BBD795E-48A3-4E14-B349-5252B7B0C1BD" class="sect3"><span class="enumeration_section">12.3.8</span> Interval Partitioning</h3>
<div>
<div class="section">
<p>DDL replication is unaffected by interval partitioning, because the DDL is implicit. However, this is system generated name so Replicat cannot convert this to the target.I believe this is expected behavior. You must drop the partition on the source. For example:</p>
<pre dir="ltr">
alter table t2 drop partition for (20); 
</pre></div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-10A0DA4A-B6C5-4D5D-839E-7731B580D4A2">Limitations of Oracle GoldenGate DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-BEF92EFA-B6BC-415F-9BBE-CA9715154F93"></a>
<h3 id="GGODB-GUID-BEF92EFA-B6BC-415F-9BBE-CA9715154F93" class="sect3"><span class="enumeration_section">12.3.9</span> DML or DDL Performed Inside a DDL Trigger</h3>
<div>
<div class="section">
<p>DML or DDL operations performed from within a DDL trigger are not captured.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-10A0DA4A-B6C5-4D5D-839E-7731B580D4A2">Limitations of Oracle GoldenGate DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-96F70D00-E3B7-49C9-BC8E-8662F9579EF1"></a>
<h3 id="GGODB-GUID-96F70D00-E3B7-49C9-BC8E-8662F9579EF1" class="sect3"><span class="enumeration_section">12.3.10</span> LogMiner Data Dictionary Maintenance</h3>
<div>
<div class="section">
<p>Oracle recommends that you gather dictionary statistics <span class="italic">after</span> the Extract is registered (logminer session) and the logminer dictionary is loaded, or after any significant DDL activity on the database.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-10A0DA4A-B6C5-4D5D-839E-7731B580D4A2">Limitations of Oracle GoldenGate DDL Support</a></p>
</div>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-A6826FBA-FF61-47FE-8E1D-B8B61DE91845"></a>
<h2 id="GGODB-GUID-A6826FBA-FF61-47FE-8E1D-B8B61DE91845" class="sect2"><span class="enumeration_section">12.4</span> Configuration Guidelines for DDL Support</h2>
<div>
<div class="section">
<p>The following are guidelines to take into account when configuring Oracle GoldenGate processes to support DDL replication.</p>
</div>
<!-- class="section" --></div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-134E0EEC-D719-40E1-A2E9-21C39AC7C83C">Database Privileges</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-A3A5D661-5F23-4259-AAB4-53A71313702D">Parallel Processing</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-92FD47B0-F3C1-46D0-A79E-B7464DFE2BF4">Object Names</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-181FF3D3-39DC-4E0E-8A06-145C67C38B3E">Data Definitions</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-2098EB1A-C74C-4D65-BAE1-093B178A3933">Truncates</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-5C772BEB-4821-43BA-8A7E-16EEEC78B510">Initial Synchronization</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-A79564D1-C7FA-4B63-82A3-961954009FDA">Data Continuity After CREATE or RENAME</a><br /></li>
</ul>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-134E0EEC-D719-40E1-A2E9-21C39AC7C83C"></a>
<h3 id="GGODB-GUID-134E0EEC-D719-40E1-A2E9-21C39AC7C83C" class="sect3"><span class="enumeration_section">12.4.1</span> Database Privileges</h3>
<div>
<div class="section">
<p>For database privileges that are required for Oracle GoldenGate to support DDL capture and replication, see <a href="establishing-oracle-goldengate-credentials.htm#GUID-E40B375A-5042-4195-B563-BE7EDC251880" title="Learn how to create database users for the processes that interacts with the database, assign the correct privileges, and secure the credentials from unauthorized use.">Establishing Oracle GoldenGate Credentials</a> .</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A6826FBA-FF61-47FE-8E1D-B8B61DE91845">Configuration Guidelines for DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-A3A5D661-5F23-4259-AAB4-53A71313702D"></a>
<h3 id="GGODB-GUID-A3A5D661-5F23-4259-AAB4-53A71313702D" class="sect3"><span class="enumeration_section">12.4.2</span> Parallel Processing</h3>
<div>
<div class="section">
<p>If using parallel Extract and/or Replicat processes, keep related DDL and DML together in the same process stream to ensure data integrity. Configure the processes so that:</p>
<ul style="list-style-type: disc;">
<li>
<p>all DDL and DML for any given object are processed by the same Extract group and by the same Replicat group.</p>
</li>
<li>
<p>all objects that are relational to one another are processed by the same process group.</p>
</li>
</ul>
<p>For example, if <code class="codeph">ReplicatA</code> processes DML for <code class="codeph">Table1</code>, then it should also process the DDL for <code class="codeph">Table1</code>. If <code class="codeph">Table2</code> has a foreign key to <code class="codeph">Table1</code>, then its DML and DDL operations also should be processed by <code class="codeph">ReplicatA</code>.</p>
<p>If an Extract group writes to multiple trails that are read by different Replicat groups, Extract sends all of the DDL to all of the trails. Use each Replicat group to filter the DDL by using the filter options of the <code class="codeph">DDL</code> parameter in the Replicat parameter file.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A6826FBA-FF61-47FE-8E1D-B8B61DE91845">Configuration Guidelines for DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-92FD47B0-F3C1-46D0-A79E-B7464DFE2BF4"></a>
<h3 id="GGODB-GUID-92FD47B0-F3C1-46D0-A79E-B7464DFE2BF4" class="sect3"><span class="enumeration_section">12.4.3</span> Object Names</h3>
<div>
<div class="section">
<p>Oracle GoldenGate preserves the database-defined object name, case, and character set. This support preserves single-byte and multibyte names, symbols, and accent characters at all levels of the database hierarchy.</p>
<p>Object names must be fully qualified with their two-part or three-part names when supplied as input to any parameters that support DDL synchronization. You can use the question mark (<span class="bold">?</span>) and asterisk (<span class="bold">*</span>) wildcards to specify object names in configuration parameters that support DDL synchronization, but the wildcard specification also must be fully qualified as a two-part or three-part name. For more information about support for wildcards, see <a class="olink GWUAD-GUID-629DFF70-F942-45A3-80ED-459C925E8879" target="_blank" href="../GWUAD/getting-started-oracle-goldengate-process-interfaces.htm#GWUAD-GUID-629DFF70-F942-45A3-80ED-459C925E8879"><span id="GUID-92FD47B0-F3C1-46D0-A79E-B7464DFE2BF4__GWUAD"><cite>Administering Oracle GoldenGate</cite></span></a>. To process wildcards correctly, the <code class="codeph">WILDCARDRESOLVE</code> parameter is set to <code class="codeph">DYNAMIC</code> by default. If <code class="codeph">WILDCARDRESOLVE</code> is set to anything else, the Oracle GoldenGate process that is processing DDL operations will abend and write the error to the process report.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A6826FBA-FF61-47FE-8E1D-B8B61DE91845">Configuration Guidelines for DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-181FF3D3-39DC-4E0E-8A06-145C67C38B3E"></a>
<h3 id="GGODB-GUID-181FF3D3-39DC-4E0E-8A06-145C67C38B3E" class="sect3"><span class="enumeration_section">12.4.4</span> Data Definitions</h3>
<div>
<div class="section">
<p>Because DDL support requires a like-to-like configuration, the <code class="codeph">ASSUMETARGETDEFS</code> parameter must be used in the Replicat parameter file. Replicat will abend if objects are configured for DDL support and the <code class="codeph">SOURCEDEFS</code> parameter is being used. For more information about <code class="codeph">ASSUMETARGETDEFS</code>, see <a class="olink GWURF401" target="_blank" href="../GWURF/assumetargetdefs.htm#GWURF401"><span class="italic"><span id="GUID-181FF3D3-39DC-4E0E-8A06-145C67C38B3E__GWURF"><cite>Reference for Oracle GoldenGate</cite></span></span></a>.</p>
<p>For more information about using a definitions file, see <a class="olink GWUAD-GUID-6CE0810E-A681-4CCA-9BC8-539E8A364FD3" target="_blank" href="../GWUAD/configuring-oracle-goldengate-maintain-live-standby-database.htm#GWUAD-GUID-6CE0810E-A681-4CCA-9BC8-539E8A364FD3"><span id="GUID-181FF3D3-39DC-4E0E-8A06-145C67C38B3E__GWUAD"><cite>Administering Oracle GoldenGate</cite></span></a>.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A6826FBA-FF61-47FE-8E1D-B8B61DE91845">Configuration Guidelines for DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-2098EB1A-C74C-4D65-BAE1-093B178A3933"></a>
<h3 id="GGODB-GUID-2098EB1A-C74C-4D65-BAE1-093B178A3933" class="sect3"><span class="enumeration_section">12.4.5</span> Truncates</h3>
<div>
<div class="section">
<p><code class="codeph">TRUNCATE</code> statements can be supported as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>As part of the Oracle GoldenGate full DDL support, which supports <code class="codeph">TRUNCATE TABLE</code>, <code class="codeph">ALTER TABLE TRUNCATE PARTITION</code>, and other DDL. This is controlled by the DDL parameter (see <a href="configuring-ddl-support.htm#GUID-44A7C9FC-446E-46D1-97BC-B63D866C3909">Enabling DDL Support</a>.)</p>
</li>
<li>
<p>As standalone <code class="codeph">TRUNCATE</code> support. This support enables you to replicate <code class="codeph">TRUNCATE TABLE</code>, but no other DDL. The <code class="codeph">GETTRUNCATES</code> parameter controls the standalone <code class="codeph">TRUNCATE</code> feature. For more information, see <a class="olink GWURF513" target="_blank" href="../GWURF/gettruncates-ignoretruncates.htm#GWURF513"><span class="italic"><span id="GUID-2098EB1A-C74C-4D65-BAE1-093B178A3933__GWURF"><cite>Reference for Oracle GoldenGate</cite></span></span></a>.</p>
</li>
</ul>
<p>To avoid errors from duplicate operations, only one of these features can be active at the same time.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A6826FBA-FF61-47FE-8E1D-B8B61DE91845">Configuration Guidelines for DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-5C772BEB-4821-43BA-8A7E-16EEEC78B510"></a>
<h3 id="GGODB-GUID-5C772BEB-4821-43BA-8A7E-16EEEC78B510" class="sect3"><span class="enumeration_section">12.4.6</span> Initial Synchronization</h3>
<div>
<div class="section">
<p>To configure DDL replication, start with a target database that is synchronized with the source database. DDL support is compatible with the Replicat initial load method.</p>
<p>Before executing an initial load, disable DDL extraction and replication. DDL processing is controlled by the DDL parameter in the Extract and Replicat parameter files.</p>
<p>After initial synchronization of the source and target data, use all of the source sequence values at least once with <code class="codeph">NEXTVAL</code> before you run the source applications. You can use a script that selects <code class="codeph">NEXTVAL</code> from every sequence in the system. This must be done while Extract is running.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A6826FBA-FF61-47FE-8E1D-B8B61DE91845">Configuration Guidelines for DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-A79564D1-C7FA-4B63-82A3-961954009FDA"></a>
<h3 id="GGODB-GUID-A79564D1-C7FA-4B63-82A3-961954009FDA" class="sect3"><span class="enumeration_section">12.4.7</span> Data Continuity After CREATE or RENAME</h3>
<div>
<div class="section">
<p>To replicate DML operations on new Oracle tables resulting from a <code class="codeph">CREATE</code> or <code class="codeph">RENAME</code> operation, the names of the new tables must be specified in <code class="codeph">TABLE</code> and <code class="codeph">MAP</code> statements in the parameter files. You can use wildcards to make certain that they are included.</p>
<p>To create a new user with <code class="codeph">CREATE USER</code> and then move new or renamed tables into that schema, the new user name must be specified in <code class="codeph">TABLE</code> and <code class="codeph">MAP</code> statements. To create a new user <code class="codeph">fin2</code> and move new or renamed tables into that schema, the parameter statements could look as follows, depending on whether you want the <code class="codeph">fin2</code> objects mapped to the same, or different, schema on the target:</p>
<p><span class="bold">Extract</span>:</p>
<pre dir="ltr">
TABLE fin2.*;
</pre>
<p><span class="bold">Replicat</span>:</p>
<pre dir="ltr">
MAP fin2.*, TARGET <span class="italic">different_schema</span>.*;
</pre></div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A6826FBA-FF61-47FE-8E1D-B8B61DE91845">Configuration Guidelines for DDL Support</a></p>
</div>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-48FAC36D-5BA2-4355-A4E3-9D4C1EDBE7AA"></a>
<h2 id="GGODB-GUID-48FAC36D-5BA2-4355-A4E3-9D4C1EDBE7AA" class="sect2"><span class="enumeration_section">12.5</span> Understanding DDL Scopes</h2>
<div>
<p>Database objects are classified into scopes. A scope is a category that defines how DDL operations on an object are handled by Oracle GoldenGate. The scopes are:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">MAPPED</code></p>
</li>
<li>
<p><code class="codeph">UNMAPPED</code></p>
</li>
<li>
<p><code class="codeph">OTHER</code></p>
</li>
</ul>
<p>The use of scopes enables granular control over the filtering of DDL operations, string substitutions, and error handling.</p>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-169084E5-460A-410D-BF20-838F4519BF94">Mapped Scope</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-166BB723-DB01-4CB0-8BD1-9C2FF0072D8A">Unmapped Scope</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-50F9AAEF-9BF6-478A-AD2B-9F4418F83FAC">Other Scope</a><br /></li>
</ul>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-169084E5-460A-410D-BF20-838F4519BF94"></a>
<h3 id="GGODB-GUID-169084E5-460A-410D-BF20-838F4519BF94" class="sect3"><span class="enumeration_section">12.5.1</span> Mapped Scope</h3>
<div>
<p>Objects that are specified in <code class="codeph">TABLE</code> and <code class="codeph">MAP</code> statements are of <code class="codeph">MAPPED</code> scope. Extraction and replication instructions in those statements apply to both data (DML) and DDL on the specified objects, unless override rules are applied.</p>
<p>For objects in <code class="codeph">TABLE</code> and <code class="codeph">MAP</code> statements, the DDL operations listed in the following table are supported.</p>
<div class="tblformal" id="GUID-169084E5-460A-410D-BF20-838F4519BF94__GUID-D7D0345E-1F9D-4A91-AE31-01D842AD4921">
<p class="titleintable">Table 12-1 Objects That Can be Mapped in MAP and TABLE Statements</p>
<table class="cellalignment495" title="Objects That Can be Mapped in MAP and TABLE Statements" summary="This table lists objects that can be mapped in MAP and TABLE statements.">
<thead>
<tr class="cellalignment483">
<th class="cellalignment496" id="d31873e1450">Operations</th>
<th class="cellalignment497" id="d31873e1453">On any of these Objects(1)</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment483">
<td class="cellalignment498" id="d31873e1472" headers="d31873e1450">
<p><code class="codeph">CREATE</code></p>
<p><code class="codeph">ALTER</code></p>
<p><code class="codeph">DROP</code></p>
<p><code class="codeph">RENAME</code></p>
<p><code class="codeph">COMMENT ON</code><a id="fn_2" href="#fn_2" onclick='footdisplay(2,"Applies to COMMENT ON TABLE, COMMENT ON COLUMN ")'><sup>Foot&nbsp;2</sup></a></p>
</td>
<td class="cellalignment499" headers="d31873e1472 d31873e1453">
<p><code class="codeph">TABLE</code><a id="fn_3" href="#fn_3" onclick='footdisplay(3,"Includes AS SELECT ")'><sup>Foot&nbsp;3</sup></a></p>
<p><code class="codeph">INDEX</code></p>
<p><code class="codeph">TRIGGER</code></p>
<p><code class="codeph">SEQUENCE</code></p>
<p><code class="codeph">MATERIALIZED VIEW</code></p>
<p><code class="codeph">VIEW</code></p>
<p><code class="codeph">FUNCTION</code></p>
<p><code class="codeph">PACKAGE</code></p>
<p><code class="codeph">PROCEDURE</code></p>
<p><code class="codeph">SYNONYM</code></p>
<p><code class="codeph">PUBLIC SYNONYM</code><a id="fn_4" href="#fn_4" onclick='footdisplay(4,"Table name must be qualified with schema name. ")'><sup>Foot&nbsp;4</sup></a></p>
</td>
</tr>
<tr class="cellalignment483">
<td class="cellalignment498" id="d31873e1541" headers="d31873e1450">
<p><code class="codeph">GRANT</code></p>
<p><code class="codeph">REVOKE</code></p>
</td>
<td class="cellalignment499" headers="d31873e1541 d31873e1453">
<p><code class="codeph">TABLE</code></p>
<p><code class="codeph">SEQUENCE</code></p>
<p><code class="codeph">MATERIALIZED VIEW</code></p>
</td>
</tr>
<tr class="cellalignment483">
<td class="cellalignment498" id="d31873e1559" headers="d31873e1450">
<p><code class="codeph">ANALYZE</code></p>
</td>
<td class="cellalignment499" headers="d31873e1559 d31873e1453">
<p><code class="codeph">TABLE</code></p>
<p><code class="codeph">INDEX</code></p>
<p><code class="codeph">CLUSTER</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;1</sup> TABLE and MAP do not support some special characters that could be used in an object name affected by these operations. Objects with non-supported special characters are supported by the scopes of UNMAPPED and OTHER.</p>
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;2</sup></p>
<p>Applies to <code class="codeph">COMMENT ON TABLE</code>, <code class="codeph">COMMENT ON COLUMN</code></p>
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;3</sup></p>
<p>Includes <code class="codeph">AS SELECT</code></p>
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;4</sup></p>
<p>Table name must be qualified with schema name.</p>
<p>For Extract, <code class="codeph">MAPPED</code> scope marks an object for DDL capture according to the instructions in the <code class="codeph">TABLE</code> statement. For Replicat, <code class="codeph">MAPPED</code> scope marks DDL for replication and maps it to the object specified by the schema and name in the <code class="codeph">TARGET</code> clause of the <code class="codeph">MAP</code> statement. To perform this mapping, Replicat issues <code class="codeph">ALTER SESSION</code> to set the schema of the Replicat session to the schema that is specified in the <code class="codeph">TARGET</code> clause. If the DDL contains unqualified objects, the schema that is assigned on the target depends on circumstances described in <a href="configuring-ddl-support.htm#GUID-48FAC36D-5BA2-4355-A4E3-9D4C1EDBE7AA">Understanding DDL Scopes</a>.</p>
<p>Assume the following <code class="codeph">TABLE</code> and <code class="codeph">MAP</code> statements:</p>
<p><span class="bold">Extract (source)</span></p>
<pre dir="ltr">
TABLE fin.expen;
TABLE hr.tab*;
</pre>
<p><span class="bold">Replicat (target)</span></p>
<pre dir="ltr">
MAP fin.expen, TARGET fin2.expen2;
MAP hr.tab*, TARGET hrBackup.bak_*;
</pre>
<p>Also assume a source DDL statement of:</p>
<pre dir="ltr">
ALTER TABLE fin.expen ADD notes varchar2(100);
</pre>
<p>In this example, because the source table <code class="codeph">fin.expen</code> is in a <code class="codeph">MAP</code> statement with a <code class="codeph">TARGET</code> clause that maps to a different schema and table name, the target DDL statement becomes:</p>
<pre dir="ltr">
ALTER TABLE fin2.expen2 ADD notes varchar2(100);
</pre>
<p>Likewise, the following source and target DDL statements are possible for the second set of <code class="codeph">TABLE</code> and <code class="codeph">MAP</code> statements in the example:</p>
<p><span class="bold">Source</span>:</p>
<pre dir="ltr">
CREATE TABLE hr.tabPayables ... ;
</pre>
<p><span class="bold">Target</span>:</p>
<pre dir="ltr">
CREATE TABLE hrBackup.bak_tabPayables ...;
</pre>
<p>When objects are of <code class="codeph">MAPPED</code> scope, you can omit their names from the DDL configuration parameters, unless you want to refine their DDL support further. If you ever need to change the object names in <code class="codeph">TABLE</code> and <code class="codeph">MAP</code> statements, the changes will apply automatically to the DDL on those objects.</p>
<p>If you include an object in a <code class="codeph">TABLE</code> statement, but not in a <code class="codeph">MAP</code> statement, the DDL for that object is <code class="codeph">MAPPED</code> in scope on the source but <code class="codeph">UNMAPPED</code> in scope on the target.</p>
</div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-48FAC36D-5BA2-4355-A4E3-9D4C1EDBE7AA">Understanding DDL Scopes</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-166BB723-DB01-4CB0-8BD1-9C2FF0072D8A"></a>
<h3 id="GGODB-GUID-166BB723-DB01-4CB0-8BD1-9C2FF0072D8A" class="sect3"><span class="enumeration_section">12.5.2</span> Unmapped Scope</h3>
<div>
<div class="section">
<p>If a DDL operation is supported for use in a <code class="codeph">TABLE</code> or <code class="codeph">MAP</code> statement, but its base object name is not included in one of those parameters, it is of <code class="codeph">UNMAPPED</code> scope.</p>
<p>An object name can be of <code class="codeph">UNMAPPED</code> scope on the source (not in an Extract <code class="codeph">TABLE</code> statement), but of <code class="codeph">MAPPED</code> scope on the target (in a Replicat <code class="codeph">MAP</code> statement), or the other way around. When Oracle DDL is of <code class="codeph">UNMAPPED</code> scope in the Replicat configuration, Replicat will by default do the following:</p>
</div>
<!-- class="section" -->
<ol>
<li><span>Set the current schema of the Replicat session to the schema of the source DDL object.</span></li>
<li><span>Execute the DDL as that schema.</span></li>
<li><span>Restore Replicat as the current schema of the Replicat session.</span></li>
</ol>
<div class="section">
<p>See <a href="configuring-ddl-support.htm#GUID-48FAC36D-5BA2-4355-A4E3-9D4C1EDBE7AA">Understanding DDL Scopes</a>.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-48FAC36D-5BA2-4355-A4E3-9D4C1EDBE7AA">Understanding DDL Scopes</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-50F9AAEF-9BF6-478A-AD2B-9F4418F83FAC"></a>
<h3 id="GGODB-GUID-50F9AAEF-9BF6-478A-AD2B-9F4418F83FAC" class="sect3"><span class="enumeration_section">12.5.3</span> Other Scope</h3>
<div>
<div class="section">
<p>DDL operations that cannot be mapped are of <code class="codeph">OTHER</code> scope. When DDL is of <code class="codeph">OTHER</code> scope in the Replicat configuration, it is applied to the target with the same schema and object name as in the source DDL.</p>
<p>An example of <code class="codeph">OTHER</code> scope is a DDL operation that makes a system-specific reference, such as DDL that operates on data file names.</p>
<p>Some other examples of <code class="codeph">OTHER</code> scope:</p>
<pre dir="ltr">
CREATE USER joe IDENTIFIED by joe;
CREATE ROLE ggs_gguser_role IDENTIFIED GLOBALLY;
ALTER TABLESPACE gg_user TABLESPACE GROUP gg_grp_user;
</pre>
<p>See <a href="configuring-ddl-support.htm#GUID-48FAC36D-5BA2-4355-A4E3-9D4C1EDBE7AA">Understanding DDL Scopes</a>.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-48FAC36D-5BA2-4355-A4E3-9D4C1EDBE7AA">Understanding DDL Scopes</a></p>
</div>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-A29FD45D-736B-4D18-9319-F16DAEF9C9A6"></a>
<h2 id="GGODB-GUID-A29FD45D-736B-4D18-9319-F16DAEF9C9A6" class="sect2"><span class="enumeration_section">12.6</span> Correctly Identifying Unqualified Object Names in DDL</h2>
<div>
<div class="section">
<p>Extract captures the current schema (also called session schema) that is in effect when a DDL operation is executed. The current container is also captured if the source is a multitenant container database. The container and schema are used to resolve unqualified object names in the DDL.</p>
<p>Consider the following example:</p>
<pre dir="ltr">
CONNECT SCOTT/TIGER
CREATE TABLE TAB1 (X NUMBER);
CREATE TABLE SRC1.TAB2(X NUMBER) AS SELECT * FROM TAB1;
</pre>
<p>In both of those DDL statements, the unqualified table <code class="codeph">TAB1</code> is resolved as <code class="codeph">SCOTT.TAB1</code> based on the current schema <code class="codeph">SCOTT</code> that is in effect during the DDL execution.</p>
<p>There is another way of setting the current schema, which is to set the <code class="codeph">current_schema</code> for the session, as in the following example:</p>
<pre dir="ltr">
CONNECT SCOTT/TIGER
ALTER SESSION SET CURRENT_SCHEMA=SRC;
CREATE TABLE TAB1 (X NUMBER);
CREATE TABLE SRC1.TAB2(X NUMBER) AS SELECT * FROM TAB1;
</pre>
<p>In both of those DDL statements, the unqualified table <code class="codeph">TAB1</code> is resolved as <code class="codeph">SRC.TAB1</code> based on the current schema <code class="codeph">SRC</code> that is in effect during the DDL execution.</p>
<p>In both classic and integrated capture modes, Extract captures the current schema that is in effect during DDL execution, and it resolves the unqualified object names (if any) by using the current schema. As a result, <code class="codeph">MAP</code> statements specified for Replicat work correctly for DDL with unqualified object names.</p>
<p>You can also map a source session schema to a different target session schema, if that is required for the DDL to succeed on the target. This mapping is global and overrides any other mappings that involve the same schema names. To map session schemas, use the <code class="codeph">DDLOPTIONS</code> parameter with the <code class="codeph">MAPSESSIONSCHEMA</code> option. For more information, see <a class="olink GWURF451" target="_blank" href="../GWURF/ddloptions.htm#GWURF451"><span class="italic"><span id="GUID-A29FD45D-736B-4D18-9319-F16DAEF9C9A6__GWURF"><cite>Reference for Oracle GoldenGate</cite></span></span></a>.</p>
<p>If the default or mapped session schema mapping fails, you can handle the error with the following <code class="codeph">DDLERROR</code> parameter statement, where error 1435 means that the schema does not exist.</p>
<pre dir="ltr">
DDLERROR 1435 IGNORE INCLUDE OPTYPE ALTER OBJTYPE SESSION
</pre></div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-44A7C9FC-446E-46D1-97BC-B63D866C3909"></a>
<h2 id="GGODB-GUID-44A7C9FC-446E-46D1-97BC-B63D866C3909" class="sect2"><span class="enumeration_section">12.7</span> Enabling DDL Support</h2>
<div>
<div class="section">
<p>By default, the status of DDL replication support is as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>On the source, Oracle GoldenGate DDL support is disabled by default. You must configure Extract to capture DDL by using the <code class="codeph">DDL</code> parameter.</p>
</li>
<li>
<p>On the target, DDL support is enabled by default, to maintain the integrity of transactional data that is replicated. By default, Replicat will process all DDL operations that the trail contains. If needed, you can use the <code class="codeph">DDL</code> parameter to configure Replicat to ignore or filter DDL operations.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-D6165D41-5CDA-4B73-A545-B196A7AD57B9"></a>
<h2 id="GGODB-GUID-D6165D41-5CDA-4B73-A545-B196A7AD57B9" class="sect2"><span class="enumeration_section">12.8</span> Filtering DDL Replication</h2>
<div>
<div class="section">
<p>You can use the following methods to filter DDL operations so that specific (or all) DDL is applied to the target database according to your requirements. By default, all DDL is passed to Extract.</p>
<ul style="list-style-type: disc;">
<li>
<p>Filtering with PL/SQL Code: Valid only for trigger-based DDL capture. This method makes use of an Oracle function that is called by the DDL trigger when a DDL operation occurs, to compute whether or not to send the DDL to Extract. Filtering with PL/SQL code should only be used to improve the performance of the source database when the DDL trigger is in use. It can be combined with built-in rules and DDL parameter filtering (see the following). Any DDL that is passed to Extract after it is filtered by the DDL trigger or filter rules can be filtered further with the <code class="codeph">DDL</code> parameter to meet specific needs.</p>
</li>
<li>
<p>Filtering with Built-In Filter Rules: Valid only for trigger-based DDL capture. This method makes use of some procedures that you run to build filter rules into the Oracle GoldenGate trigger logic. This method allows discreet control over the types of objects that are sent to Extract, and it allows the ordering of rule evaluation. This method should only be used to improve the performance of the source database when the DDL trigger is in use. You can combine built-in rules with PL/SQL and DDL parameter filtering. Any DDL that is passed to Extract after it is filtered by the DDL trigger or filter rules can be filtered further with the <code class="codeph">DDL</code> parameter to meet specific needs.</p>
<div class="infobox-note" id="GUID-D6165D41-5CDA-4B73-A545-B196A7AD57B9__GUID-5BBF8A1E-2ACC-425F-ACFF-BCCCFE659A07">
<p class="notep1">Note:</p>
<p>Filtering with PL/SQL or built-in filter rules is unnecessary for an Extract that operates in integrated-capture mode. If Extract must operate in classic mode and you use these filtering methods, the same filtering must happen for any transactional data (DML) that is associated with the filtered objects. For example, if you filter out the DDL that creates a table named <code class="codeph">ACCOUNTS</code>, make certain the <code class="codeph">ACCOUNTS</code> table is not specified in any <code class="codeph">TABLE</code> or <code class="codeph">MAP</code> statements, or use the appropriate exclusion parameter to exclude it from wildcard resolution. See <a class="olink GWURF978" target="_blank" href="../GWURF/summary-oracle-goldengate-parameters.htm#GWURF978"><span class="italic"><span id="GUID-D6165D41-5CDA-4B73-A545-B196A7AD57B9__GWURF"><cite>Reference for Oracle GoldenGate</cite></span></span></a> for a list of wildcard exclusion parameters.</p>
</div>
</li>
<li>
<p>Filtering with DDL Parameter:Valid for both trigger-based and native DDL capture. This is the preferred method of filtering and is performed within Oracle GoldenGate, and both Extract and Replicat can execute filter criteria. Extract can perform filtering, or it can send all of the DDL to a trail, and then Replicat can perform the filtering. Alternatively, you can filter in a combination of different locations. The <code class="codeph">DDL</code> parameter gives you control over where the filtering is performed, and it also offers more filtering options than the trigger method, including the ability to filter collectively based on the DDL scope (for example, include all <code class="codeph">MAPPED</code> scope).</p>
<div class="infobox-note" id="GUID-D6165D41-5CDA-4B73-A545-B196A7AD57B9__GUID-42FB1227-8366-4A41-93D8-A7C98CDB04E2">
<p class="notep1">Note:</p>
<p>If a DDL operation fails in the middle of a <code class="codeph">TRANSACTION</code>, it forces a commit, which means that the transaction spanning the DDL is split into two. The first half is committed and the second half can be restarted. If a recovery occurs, the second half of the transaction cannot be filtered since the information contained in the header of the transaction is no longer there.</p>
</div>
</li>
</ul>
</div>
<!-- class="section" --></div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-F8614E3A-30B4-4E54-961B-B63DA16C79B6">Filtering with PL/SQL Code</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-C158D0AB-81DE-42C3-968A-74C4584045B3">Filtering With Built-in Filter Rules</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-95F2F993-CE15-474F-A1C8-E568D0268111">Filtering with the DDL Parameter</a><br /></li>
</ul>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-F8614E3A-30B4-4E54-961B-B63DA16C79B6"></a>
<h3 id="GGODB-GUID-F8614E3A-30B4-4E54-961B-B63DA16C79B6" class="sect3"><span class="enumeration_section">12.8.1</span> Filtering with PL/SQL Code</h3>
<div>
<div class="section">
<p>This method is only valid for trigger-based capture.</p>
<p>You can write PL/SQL code to pass information about the DDL to a function that computes whether or not the DDL is passed to Extract. By sending fewer DDL operations to Extract, you can improve capture performance.</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Copy the <code class="codeph">ddl_filter.sql</code> file that is in the Oracle GoldenGate installation directory to a test machine where you can test the code that you will be writing.</span></li>
<li class="stepexpand"><span>Open the file for editing. It contains a PL/SQL function named <code class="codeph">filterDDL</code>, which you can modify to specify <code class="codeph">if/then</code> filter criteria. The information that is passed to this function includes:</span>
<div>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">ora_owner</code>: the schema of the DDL object</p>
</li>
<li>
<p><code class="codeph">ora_name</code>: the defined name of the object</p>
</li>
<li>
<p><code class="codeph">ora_objtype</code>: the type of object, such as <code class="codeph">TABLE</code> or <code class="codeph">INDEX</code></p>
</li>
<li>
<p><code class="codeph">ora_optype</code>: the operation type, such as <code class="codeph">CREATE</code> or <code class="codeph">ALTER</code></p>
</li>
<li>
<p><code class="codeph">ora_login_user</code>: The user that executed the DDL</p>
</li>
<li>
<p><code class="codeph">retVal</code>: can be either <code class="codeph">INCLUDE</code> to include the DDL, or <code class="codeph">EXCLUDE</code> to exclude the DDL from Extract processing.</p>
</li>
</ul>
<p>In the location after the <code class="codeph">'compute retVal here'</code> comment, write filter code for each type of DDL that you want to be filtered. The following is an example:</p>
<pre dir="ltr">
if ora_owner='SYS' then
retVal:='EXCLUDE';
end if;
if ora_objtype='USER' and ora_optype ='DROP' then
retVal:='EXCLUDE';
end if;
if ora_owner='JOE' and ora_name like 'TEMP%' then
retVal:='EXCLUDE';
end if;
</pre>
<p>In this example, the following DDL is excluded from being processed by the DDL trigger:</p>
<ul style="list-style-type: disc;">
<li>
<p>DDL for objects owned by <code class="codeph">SYS</code></p>
</li>
<li>
<p>any <code class="codeph">DROP USER</code></p>
</li>
<li>
<p>any DDL on <code class="codeph">JOE.TEMP%</code></p>
</li>
</ul>
</div>
</li>
<li class="stepexpand"><span>(Optional) To trace the filtering, you can add the following syntax to each <code class="codeph">if/then</code> statement in the PL/SQL:</span>
<div>
<pre dir="ltr">
if ora_owner='JOE' and ora_name like 'TEMP%' then
retVal:='EXCLUDE';
if "&amp;gg_user" .DDLReplication.trace_level &gt;= 1 then
"&amp;gg_user" .trace_put_line ('DDLFILTER', 'excluded JOE.TEMP%');
end if;
 
</pre>
<p>Where:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">&amp;gg_user</code> is the schema of the Oracle GoldenGate DDL support objects.</p>
</li>
<li>
<p><code class="codeph">.DDLReplication.trace_level</code> is the level of DDL tracing. To use trigger tracing, the <code class="codeph">TRACE</code> or <code class="codeph">TRACE2</code> parameter must be used with the <code class="codeph">DDL</code> or <code class="codeph">DDLONLY</code> option in the Extract parameter file. The <code class="codeph">.DDLReplication.trace_level</code> parameter must be set to <code class="codeph">&gt;=1</code>.</p>
</li>
<li>
<p><code class="codeph">trace_put_line</code> is a user-defined text string that Extract writes to the trace file that represents the type of DDL that was filtered.</p>
</li>
</ul>
</div>
</li>
<li class="stepexpand"><span>Save the code.</span></li>
<li class="stepexpand"><span>Stop DDL activity on the test system.</span></li>
<li class="stepexpand"><span>In SQL*Plus, compile the <code class="codeph">ddl_filter.sql</code> file as follows, where <code class="codeph">schema_name</code> is the schema where the Oracle GoldenGate DDL objects are installed.</span>
<div>
<pre dir="ltr">
@ddl_filter schema_name
</pre></div>
</li>
<li class="stepexpand"><span>Test in the test environment to make certain that the filtering works. It is important to perform this testing, because any errors in the code could cause source and target DDL to become out of synchronization.</span></li>
<li class="stepexpand"><span>After a successful test, copy the file to the Oracle GoldenGate installation directory on the source production system.</span></li>
<li class="stepexpand"><span>Stop DDL activity on the source system.</span></li>
<li class="stepexpand"><span>Compile the <code class="codeph">ddl_filter.sql</code> file as you did before.</span>
<div>
<pre dir="ltr">
@ddl_filter schema_name
</pre></div>
</li>
<li class="stepexpand"><span>Resume DDL activity on the source system.</span></li>
</ol>
</div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-D6165D41-5CDA-4B73-A545-B196A7AD57B9">Filtering DDL Replication</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-C158D0AB-81DE-42C3-968A-74C4584045B3"></a>
<h3 id="GGODB-GUID-C158D0AB-81DE-42C3-968A-74C4584045B3" class="sect3"><span class="enumeration_section">12.8.2</span> Filtering With Built-in Filter Rules</h3>
<div>
<div class="section">
<p>This method is only valid for trigger-based capture.</p>
<p>You can add inclusion and exclusion rules to control the DDL operations that are sent to Extract by the DDL trigger. By storing rules and sending fewer DDL operations to Extract, you can improve capture performance.</p>
</div>
<!-- class="section" -->
<ol>
<li><span>Use the <code class="codeph">DDLAUX.addRule()</code> function to define your rules according to the following instructions. This function is installed in the Oracle GoldenGate DDL schema after the DDL objects are installed with the <code class="codeph">ddl_setup.sql</code> script.</span></li>
<li><span>To activate the rules, execute the function in SQL*Plus or enter a collection of rules in a SQL file and execute that file in SQL*Plus.</span></li>
</ol>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-1C679DFB-00AC-4AD6-98D4-B28A6D55D34D">DDLAUX.addRule() Function Definition</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-49BC2E1B-409C-4E46-8F1F-BBE06895FF9D">Parameters for DDLAUX.addRule()</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-B50AEDC6-4878-4D5B-A133-2B953D3C8DA2">Valid DDL Components for DDLAUX.addRule()</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-E5AD717D-0236-4C90-88C5-12D0B1CF3E29">Examples of Rule-based Trigger Filtering</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-26E15518-B773-49A2-8D1C-9DC7F544DE12">Dropping Filter Rules</a><br /></li>
</ul>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-D6165D41-5CDA-4B73-A545-B196A7AD57B9">Filtering DDL Replication</a></p>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-1C679DFB-00AC-4AD6-98D4-B28A6D55D34D"></a>
<h4 id="GGODB-GUID-1C679DFB-00AC-4AD6-98D4-B28A6D55D34D" class="sect4"><span class="enumeration_section">12.8.2.1</span> <code class="codeph">DDLAUX.addRule()</code> Function Definition</h4>
<div>
<div class="section">
<pre dir="ltr">
FUNCTION addRule( obj_name IN VARCHAR2 DEFAULT NULL,
base_obj_name IN VARCHAR2 DEFAULT NULL,
owner_name IN VARCHAR2 DEFAULT NULL,
base_owner_name IN VARCHAR2 DEFAULT NULL,
base_obj_property IN NUMBER DEFAULT NULL,
obj_type IN NUMBER DEFAULT NULL,
command IN VARCHAR2 DEFAULT NULL,
inclusion IN boolean DEFAULT NULL ,
sno IN NUMBER DEFAULT NULL)
RETURN NUMBER;
</pre></div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-C158D0AB-81DE-42C3-968A-74C4584045B3">Filtering With Built-in Filter Rules</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-49BC2E1B-409C-4E46-8F1F-BBE06895FF9D"></a>
<h4 id="GGODB-GUID-49BC2E1B-409C-4E46-8F1F-BBE06895FF9D" class="sect4"><span class="enumeration_section">12.8.2.2</span> Parameters for <code class="codeph">DDLAUX.addRule()</code></h4>
<div>
<div class="section">
<p>The information passed to this function are the following parameters, which correlate to the attributes of an object. All parameters are optional, and more than one parameter can be specified.</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">sno</code>: Specifies a serial number that identifies the rule. The order of evaluation of rules is from the lowest serial number to the highest serial number, until a match is found. The <code class="codeph">sno</code> can be used to place inclusion rules ahead of an exclusion rule, so as to make an exception to the exclusion rule. Because this is a function and not a procedure, it returns the serial number of the rule, which should be used for the drop rule specified with <code class="codeph">DDLAUX.dropRule()</code>. The serial number is generated automatically unless you specify one with this statement at the beginning of your code: <code class="codeph">DECLARE sno NUMBER; BEGIN sno :=</code></p>
<p>For example:</p>
<pre dir="ltr">
DECLARE 
  sno NUMBER; 
BEGIN 
  sno := tkggadmin..DDLAUX.ADDRULE(obj_name =&gt; 'GGS%' , 
                                   obj_type =&gt; TYPE_TABLE); 
END;
/
</pre></li>
<li>
<p><code class="codeph">obj_name</code>: Specifies the object name. If the name is case-sensitive, enclose it within double quotes.</p>
</li>
<li>
<p><code class="codeph">owner_name</code>: Specifies the name of the object schema</p>
</li>
<li>
<p><code class="codeph">base_obj_name</code>: Specifies the base object name of the DDL object (such as the base table if the object is an index). If the name is case-sensitive, enclose it within double quotes.</p>
</li>
<li>
<p><code class="codeph">base_owner_name</code>: Specifies the base object schema name.</p>
</li>
<li>
<p><code class="codeph">base_obj_property</code>: Specifies the base object property.</p>
</li>
<li>
<p><code class="codeph">obj_type</code>: Specifies the object type.</p>
</li>
<li>
<p><code class="codeph">command</code>: Specifies the command.</p>
</li>
<li>
<p><code class="codeph">inclusion = TRUE</code>: Indicates that the specified objects are to be captured by the DDL trigger. If this parameter is not specified, the rule becomes an exclusion rule, and the specified objects are not captured. You can specify both an exclusion rule and an inclusion rule. If a DDL does not match any of the rules, it is included (passed to Extract) by default. Calling <code class="codeph">DDLAUX.addRule()</code> without any parameters generates an <span class="italic">empty rule</span> that excludes all DDL on all the objects.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-C158D0AB-81DE-42C3-968A-74C4584045B3">Filtering With Built-in Filter Rules</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-B50AEDC6-4878-4D5B-A133-2B953D3C8DA2"></a>
<h4 id="GGODB-GUID-B50AEDC6-4878-4D5B-A133-2B953D3C8DA2" class="sect4"><span class="enumeration_section">12.8.2.3</span> Valid DDL Components for DDLAUX.addRule()</h4>
<div>
<div class="section">
<p>The following are the defined DDL object types, base object properties, and DDL commands that can be specified in the function code.</p>
<p>Valid object types are:</p>
<ul class="simple" style="list-style-type: none;padding-left:0;">
<li><code class="codeph">TYPE_INDEX</code></li>
<li><code class="codeph">TYPE_TABLE</code></li>
<li><code class="codeph">TYPE_VIEW</code></li>
<li><code class="codeph">TYPE_SYNONYM</code></li>
<li><code class="codeph">TYPE_SEQUENCE</code></li>
<li><code class="codeph">TYPE_PROCEDURE</code></li>
<li><code class="codeph">TYPE_FUNCTION</code></li>
<li><code class="codeph">TYPE_PACKAGE</code></li>
<li><code class="codeph">TYPE_TRIGGER</code></li>
</ul>
<p>Valid base object properties are:</p>
<ul class="simple" style="list-style-type: none;padding-left:0;">
<li><code class="codeph">TB_IOT</code></li>
<li><code class="codeph">TB_CLUSTER</code></li>
<li><code class="codeph">TB_NESTED</code></li>
<li><code class="codeph">TB_TEMP</code></li>
<li><code class="codeph">TB_EXTERNAL</code></li>
</ul>
<p>Valid commands are:</p>
<ul class="simple" style="list-style-type: none;padding-left:0;">
<li><code class="codeph">CMD_CREATE</code></li>
<li><code class="codeph">CMD_DROP</code></li>
<li><code class="codeph">CMD_TRUNCATE</code></li>
<li><code class="codeph">CMD_ALTER</code></li>
</ul>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-C158D0AB-81DE-42C3-968A-74C4584045B3">Filtering With Built-in Filter Rules</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-E5AD717D-0236-4C90-88C5-12D0B1CF3E29"></a>
<h4 id="GGODB-GUID-E5AD717D-0236-4C90-88C5-12D0B1CF3E29" class="sect4"><span class="enumeration_section">12.8.2.4</span> Examples of Rule-based Trigger Filtering</h4>
<div>
<div class="section">
<p>The following example excludes all temporary tables, except tables with names that start with <code class="codeph">IMPTEMP</code>.</p>
<pre dir="ltr">
1. DDLAUX.ADDRULE(obj_name =&gt; 'IMPTEMP%', base_obj_property =&gt; TB_TEMP, obj_type =&gt; TYPE_TABLE, INCLUSION =&gt; TRUE);
2. DDLAUX.ADDRULE(base_obj_property =&gt; TB_TEMP, obj_type =&gt; TYPE_TABLE); 
</pre>
<div class="infobox-note" id="GUID-E5AD717D-0236-4C90-88C5-12D0B1CF3E29__GUID-4AA0D643-BC52-4383-A3E8-49C3DF720A99">
<p class="notep1">Note:</p>
<p>Since the <code class="codeph">IMPTEMP%</code> tables must be included, that rule should come first.</p>
</div>
<p>The following example excludes all tables with name '<code class="codeph">GGS%</code>'</p>
<pre dir="ltr">
DECLARE sno NUMBER; BEGIN sno := DDLAUX.ADDRULE(obj_name =&gt; 'GGS%' , obj_type =&gt; TYPE_TABLE); END 
</pre>
<p>The following example excludes all temporary tables.</p>
<pre dir="ltr">
DDLAUX.ADDRULE(base_obj_property =&gt; TB_TEMP, obj_type =&gt; TYPE_TABLE); 
</pre>
<p>The following example excludes all indexes on <code class="codeph">TEMP</code> tables.</p>
<pre dir="ltr">
DDLAUX.ADDRULE(base_obj_property =&gt; TB_TEMP, obj_type =&gt; TYPE_INDEX); 
</pre>
<p>The following example excludes all objects in schema <code class="codeph">TKGGADMIN</code>.</p>
<pre dir="ltr">
DDLAUX.ADDRULE(owner_name =&gt; 'TKGGADMIN'); 
</pre>
<p>The following example excludes all objects in <code class="codeph">TRUNCATE</code> operations made to <code class="codeph">TEMP</code> tables.</p>
<pre dir="ltr">
DDLAUX.ADDRULE(base_obj_property =&gt; TB_TEMP, obj_type =&gt; TYPE_TABLE, command =&gt; CMD_TRUNCATE)
</pre></div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-C158D0AB-81DE-42C3-968A-74C4584045B3">Filtering With Built-in Filter Rules</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-26E15518-B773-49A2-8D1C-9DC7F544DE12"></a>
<h4 id="GGODB-GUID-26E15518-B773-49A2-8D1C-9DC7F544DE12" class="sect4"><span class="enumeration_section">12.8.2.5</span> Dropping Filter Rules</h4>
<div>
<div class="section">
<p>Use the <code class="codeph">DDLAUX.dropRule()</code> function with the drop rule. This function is installed in the Oracle GoldenGate DDL schema after the DDL objects are installed with the <code class="codeph">ddl_setup.sql</code> script. As input, specify the serial number of the rule that you want to drop.</p>
<pre dir="ltr">
FUNCTION dropRule(sno IN NUMBER) RETURN BOOLEAN;
</pre></div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-C158D0AB-81DE-42C3-968A-74C4584045B3">Filtering With Built-in Filter Rules</a></p>
</div>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-95F2F993-CE15-474F-A1C8-E568D0268111"></a>
<h3 id="GGODB-GUID-95F2F993-CE15-474F-A1C8-E568D0268111" class="sect3"><span class="enumeration_section">12.8.3</span> Filtering with the DDL Parameter</h3>
<div>
<div class="section">
<p>This method is valid for trigger-based and integrated capture modes.</p>
<p>The <code class="codeph">DDL</code> parameter is the main Oracle GoldenGate parameter for filtering DDL within the Extract and Replicat processes.</p>
<p>When used without options, the <code class="codeph">DDL</code> parameter performs no filtering, and it causes all DDL operations to be propagated as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>As an Extract parameter, it captures all supported DDL operations that are generated on all supported database objects and sends them to the trail.</p>
</li>
<li>
<p>As a Replicat parameter, it replicates all DDL operations from the Oracle GoldenGate trail and applies them to the target. This is the same as the default behavior without this parameter.</p>
</li>
</ul>
<p>When used with options, the <code class="codeph">DDL</code> parameter acts as a filtering agent to include or exclude DDL operations based on:</p>
<ul style="list-style-type: disc;">
<li>
<p>scope</p>
</li>
<li>
<p>object type</p>
</li>
<li>
<p>operation type</p>
</li>
<li>
<p>object name</p>
</li>
<li>
<p>strings in the DDL command syntax or comments, or both</p>
</li>
</ul>
<p>Only one <code class="codeph">DDL</code> parameter can be used in a parameter file, but you can combine multiple inclusion and exclusion options, along with other options, to filter the DDL to the required level.</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DDL</code> filtering options are valid for a primary Extract that captures from the transaction source, but not for a data-pump Extract.</p>
</li>
<li>
<p>When combined, multiple filter option specifications are linked logically as <code class="codeph">AND</code> statements.</p>
</li>
<li>
<p>All filter criteria specified with multiple options must be satisfied for a DDL statement to be replicated.</p>
</li>
<li>
<p>When using complex DDL filtering criteria, it is recommended that you test your configuration in a test environment before using it in production.</p>
</li>
</ul>
<p>For <code class="codeph">DDL</code> parameter syntax and additional usage guidelines, see <a class="olink GWURF443" target="_blank" href="../GWURF/ddl.htm#GWURF443"><span class="italic"><span id="GUID-95F2F993-CE15-474F-A1C8-E568D0268111__GWURF"><cite>Reference for Oracle GoldenGate</cite></span></span></a>.</p>
<div class="infobox-note" id="GUID-95F2F993-CE15-474F-A1C8-E568D0268111__GUID-CAD16FDC-2432-4AF4-B5E4-6081D450A39F">
<p class="notep1">Note:</p>
<p>Before you configure DDL support, it might help to review <a href="configuring-ddl-support.htm#GUID-05DF9C4B-D6CD-4F87-AFB0-6F6ED8CC17E4">How DDL is Evaluated for Processing</a>.</p>
</div>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-D6165D41-5CDA-4B73-A545-B196A7AD57B9">Filtering DDL Replication</a></p>
</div>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-69F54227-17AB-437B-BB65-70C6E4F59FE2"></a>
<h2 id="GGODB-GUID-69F54227-17AB-437B-BB65-70C6E4F59FE2" class="sect2"><span class="enumeration_section">12.9</span> Special Filter Cases</h2>
<div>
<div class="section">
<p>The following are special cases that you should be aware of when creating your filter conditions.</p>
</div>
<!-- class="section" --></div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-C969A348-2879-468F-A778-7EC39407F327">DDL EXCLUDE ALL</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-77F0B952-3E90-4834-A322-FCA2DD34F330">Implicit DDL</a><br /></li>
</ul>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-C969A348-2879-468F-A778-7EC39407F327"></a>
<h3 id="GGODB-GUID-C969A348-2879-468F-A778-7EC39407F327" class="sect3"><span class="enumeration_section">12.9.1</span> DDL EXCLUDE ALL</h3>
<div>
<div class="section">
<p><code class="codeph">DDL EXCLUDE ALL</code> is a special processing option that is intended primarily for Extract when using trigger-based DDL capture. <code class="codeph">DDL EXCLUDE ALL</code> blocks the replication of DDL operations, but ensures that Oracle GoldenGate continues to keep the object metadata current. When Extract receives DDL directly from the logmining server (triggerless DDL capture mode), current metadata is always maintained.</p>
<p>You can use <code class="codeph">DDL EXCLUDE ALL</code> when using a method other than Oracle GoldenGate to apply DDL to the target and you want Oracle GoldenGate to replicate data changes to the target objects. It provides the current metadata to Oracle GoldenGate as objects change, thus preventing the need to stop and start the Oracle GoldenGate processes. The following special conditions apply to <code class="codeph">DDL EXCLUDE ALL</code>:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">DDL EXCLUDE ALL</code> does not require the use of an <code class="codeph">INCLUDE</code> clause.</p>
</li>
<li>
<p>When using <code class="codeph">DDL EXCLUDE ALL</code>, you can set the <code class="codeph">WILDCARDRESOLVE</code> parameter to <code class="codeph">IMMEDIATE</code> to allow immediate DML resolution if required. For more information, see <a class="olink GWURF741" target="_blank" href="../GWURF/wildcardresolve.htm#GWURF741"><span class="italic"><span id="GUID-C969A348-2879-468F-A778-7EC39407F327__GWURF"><cite>Reference for Oracle GoldenGate</cite></span></span></a>.</p>
</li>
</ul>
<p>To prevent all DDL metadata and operations from being replicated, omit the <code class="codeph">DDL</code> parameter entirely.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-69F54227-17AB-437B-BB65-70C6E4F59FE2">Special Filter Cases</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-77F0B952-3E90-4834-A322-FCA2DD34F330"></a>
<h3 id="GGODB-GUID-77F0B952-3E90-4834-A322-FCA2DD34F330" class="sect3"><span class="enumeration_section">12.9.2</span> Implicit DDL</h3>
<div>
<div class="section">
<p>User-generated DDL operations can generate implicit DDL operations. For example, the following statement generates two distinct DDL operations.</p>
<pre dir="ltr">
CREATE TABLE customers (custID number, name varchar2(50), address varchar2(75), address2 varchar2(75), city varchar2(50), state (varchar2(2), zip number, contact varchar2(50), areacode number(3), phone number(7), primary key (custID));
</pre>
<p>The first (explicit) DDL operation is the <code class="codeph">CREATE TABLE</code> statement itself.</p>
<p>The second DDL operation is an implicit <code class="codeph">CREATE UNIQUE INDEX</code> statement that creates the index for the primary key. This operation is generated by the database engine, not a user application.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead3">Guidelines for Filtering Implicit DDL</p>
</div>
<!-- class="section" -->
<div class="section">
<p>How to filter implicit DDL depends on the mechanism that you are using to filter DDL. See <a href="configuring-ddl-support.htm#GUID-D6165D41-5CDA-4B73-A545-B196A7AD57B9">Filtering DDL Replication</a> for more information.</p>
<ul style="list-style-type: disc;">
<li>
<p>When the <code class="codeph">DDL</code> parameter is used to filter DDL operations, Oracle GoldenGate filters out any implicit DDL by default, because the explicit DDL will generate the implicit DDL on the target. For example, the target database will create the appropriate index when the <code class="codeph">CREATE TABLE</code> statement in the preceding example is applied by Replicat.</p>
</li>
<li>
<p>When the DDL trigger is being used to filter DDL operations, you must handle the implicit DDL in your filter rules based on the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>If your filtering rules exclude the explicit DDL from being propagated, you must also create a rule to exclude the implicit DDL. For example, if you exclude the <code class="codeph">CREATE TABLE</code> statement in the following example, but do not exclude the implicit <code class="codeph">CREATE UNIQUE INDEX</code> statement, the target database will try to create the index on a non-existent table.</p>
<pre dir="ltr">
CREATE TABLE customers (custID number, name varchar2(50), address varchar2(75), address2 varchar2(75), city varchar2(50), state (varchar2(2), zip number, contact varchar2(50), areacode number(3), phone number(7), primary key (custID));
</pre></li>
<li>
<p>If your filtering rules permit the propagation of the explicit DDL, you do not need to exclude the implicit DDL. It will be handled correctly by Oracle GoldenGate and the target database.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-69F54227-17AB-437B-BB65-70C6E4F59FE2">Special Filter Cases</a></p>
</div>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-9EE9E693-2197-417C-9BB0-FA515DFF2F0F"></a>
<h2 id="GGODB-GUID-9EE9E693-2197-417C-9BB0-FA515DFF2F0F" class="sect2"><span class="enumeration_section">12.10</span> How Oracle GoldenGate Handles Derived Object Names</h2>
<div>
<div class="section">
<p>DDL operations can contain a <span class="italic">base object</span> name and also a <span class="italic">derived object</span> name. A base object is an object that contains data. A derived object is an object that inherits some attributes of the base object to perform a function related to that object. DDL statements that have both base and derived objects are:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">RENAME</code> and <code class="codeph">ALTER RENAME</code></p>
</li>
<li>
<p><code class="codeph">CREATE</code> and <code class="codeph">DROP</code> on an index, synonym, or trigger</p>
</li>
</ul>
<p>Consider the following DDL statement:</p>
<pre dir="ltr">
CREATE INDEX hr.indexPayrollDate ON TABLE hr.tabPayroll (payDate);
</pre>
<p>In this case, the table is the base object. Its name (<code class="codeph">hr.tabPayroll</code>) is the <span class="italic">base name</span> and is subject to mapping with <code class="codeph">TABLE</code> or <code class="codeph">MAP</code> under the <code class="codeph">MAPPED</code> scope. The derived object is the index, and its name (<code class="codeph">hr.indexPayrollDate</code>) is the <span class="italic">derived name</span>.</p>
<p>You can map a derived name in its own <code class="codeph">TABLE</code> or <code class="codeph">MAP</code> statement, separately from that of the base object. Or, you can use one <code class="codeph">MAP</code> statement to handle both. In the case of <code class="codeph">MAP</code>, the conversion of derived object names on the target works as follows.</p>
</div>
<!-- class="section" --></div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-2DF8505B-D720-4B93-AC2B-A5DA4B5F0AA2">MAP Exists for Base Object, But Not Derived Object</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-0C7CB341-95AF-4B96-AFC9-AC017D1ED6AB">MAP Exists for Base and Derived Objects</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-CF1CCCE1-958B-4965-983E-2618B9222011">MAP Exists for Derived Object, But Not Base Object</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-8F9F159E-BB74-4014-9366-BC8813EAF707">New Tables as Derived Objects</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-8B9CF5D4-ACCD-4EEE-AD5E-B40B9DEE7EBB">Disabling the Mapping of Derived Objects</a><br /></li>
</ul>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-2DF8505B-D720-4B93-AC2B-A5DA4B5F0AA2"></a>
<h3 id="GGODB-GUID-2DF8505B-D720-4B93-AC2B-A5DA4B5F0AA2" class="sect3"><span class="enumeration_section">12.10.1</span> MAP Exists for Base Object, But Not Derived Object</h3>
<div>
<div class="section">
<p>If there is a <code class="codeph">MAP</code> statement for the base object, but not for the derived object, the result is a schema based on the mapping that matches the derived object name. Derived objects are only mapped if the <code class="codeph">MAPDERIVED</code> option is enabled, which is also the default option.</p>
<p>For example, consider the following:</p>
<p><span class="bold">Extract (source)</span></p>
<pre dir="ltr">
Table hr.*;
</pre>
<p><span class="bold">Replicat (target)</span></p>
<pre dir="ltr">
MAP hr.*, TARGET hrBackup.*;
</pre>
<p>Assume the following source DDL statement:</p>
<pre dir="ltr">
CREATE INDEX hr.indexPayrollDate ON TABLE hr.Payroll (payDate);
</pre>
<p>The <code class="codeph">CREATE INDEX</code> statement is executed by Replicat on the target as follows:</p>
<pre dir="ltr">
CREATE INDEX hrBackup.indexPayrollDate ON TABLE hrBackup.Payroll (payDate);
</pre>
<p>In this example, the mapping is such that it matches the derived object name because of which the derived object schema is changed from <code class="codeph">hr</code> to <code class="codeph">hrBackup</code>.</p>
<p>Here&rsquo;s another example, where there is no mapping that matches the derived object name so the derived object name remains the same.</p>
<p><span class="bold">Extract (source)</span></p>
<p><code class="codeph">Table hr.tab*;</code></p>
<p><span class="bold">Replicat (target)</span></p>
<p><code class="codeph">MAP hr.tab*, TARGET hrBackup.*;</code></p>
<p>Assume the following source DDL statement:</p>
<p><code class="codeph">CREATE INDEX hr.indexPayrollDate ON TABLE hr.tabPayroll (payDate);</code></p>
<p>The <code class="codeph">CREATE INDEX</code> statement is executed by Replicat on the target as follows:</p>
<p><code class="codeph">CREATE INDEX hr.indexPayrollDate ON TABLE hrBackup.tabPayroll (payDate);</code></p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-9EE9E693-2197-417C-9BB0-FA515DFF2F0F">How Oracle GoldenGate Handles Derived Object Names</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-0C7CB341-95AF-4B96-AFC9-AC017D1ED6AB"></a>
<h3 id="GGODB-GUID-0C7CB341-95AF-4B96-AFC9-AC017D1ED6AB" class="sect3"><span class="enumeration_section">12.10.2</span> MAP Exists for Base and Derived Objects</h3>
<div>
<div class="section">
<p>If there is a <code class="codeph">MAP</code> statement for the base object and also one for the derived object, the result is an explicit mapping. Assuming the DDL statement includes <code class="codeph">MAPPED</code>, Replicat converts the schema and name of each object according to its own <code class="codeph">TARGET</code> clause. For example, assume the following:</p>
<p><span class="bold">Extract (source)</span></p>
<pre dir="ltr">
TABLE hr.tab*;  TABLE hr.index*;
</pre>
<p><span class="bold">Replicat (target)</span></p>
<pre dir="ltr">
MAP hr.tab*, TARGET hrBackup.*;MAP hr.index*, TARGET hrIndex.*;
</pre>
<p>Assume the following source DDL statement:</p>
<pre dir="ltr">
CREATE INDEX hr.indexPayrollDate ON TABLE hr.tabPayroll (payDate);
</pre>
<p>The <code class="codeph">CREATE INDEX</code> statement is executed by Replicat on the target as follows:</p>
<pre dir="ltr">
CREATE INDEX hrIndex.indexPayrollDate ON TABLE hrBackup.tabPayroll (payDate);
</pre>
<p>Use an explicit mapping when the index on the target must be owned by a different schema from that of the base object, or when the name on the target must be different from that of the source.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-9EE9E693-2197-417C-9BB0-FA515DFF2F0F">How Oracle GoldenGate Handles Derived Object Names</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-CF1CCCE1-958B-4965-983E-2618B9222011"></a>
<h3 id="GGODB-GUID-CF1CCCE1-958B-4965-983E-2618B9222011" class="sect3"><span class="enumeration_section">12.10.3</span> MAP Exists for Derived Object, But Not Base Object</h3>
<div>
<div class="section">
<p>If there is a <code class="codeph">MAP</code> statement for the derived object, but not for the base object, Replicat does not perform any name conversion for either object. The target DDL statement is the same as that of the source. To map a derived object, the choices are:</p>
<ul style="list-style-type: disc;">
<li>
<p>Use an explicit <code class="codeph">MAP</code> statement for the base object.</p>
</li>
<li>
<p>If names permit, map both base and derived objects in the same <code class="codeph">MAP</code> statement by means of a wildcard.</p>
</li>
<li>
<p>Create a <code class="codeph">MAP</code> statement for each object, depending on how you want the names converted.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-9EE9E693-2197-417C-9BB0-FA515DFF2F0F">How Oracle GoldenGate Handles Derived Object Names</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-8F9F159E-BB74-4014-9366-BC8813EAF707"></a>
<h3 id="GGODB-GUID-8F9F159E-BB74-4014-9366-BC8813EAF707" class="sect3"><span class="enumeration_section">12.10.4</span> New Tables as Derived Objects</h3>
<div>
<div class="section">
<p>The following explains how Oracle GoldenGate handles new tables that are created from:</p>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">RENAME</code> and <code class="codeph">ALTER RENAME</code></p>
</li>
<li>
<p><code class="codeph">CREATE TABLE AS SELECT</code></p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-E9260D44-73C8-43C9-AD75-227E5D407260">CREATE TABLE AS SELECT</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-AB4C6D59-0206-4B61-9895-EC4CD0E1F4B8">RENAME and ALTER TABLE RENAME</a><br /></li>
</ul>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-9EE9E693-2197-417C-9BB0-FA515DFF2F0F">How Oracle GoldenGate Handles Derived Object Names</a></p>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-E9260D44-73C8-43C9-AD75-227E5D407260"></a>
<h4 id="GGODB-GUID-E9260D44-73C8-43C9-AD75-227E5D407260" class="sect4"><span class="enumeration_section">12.10.4.1</span> CREATE TABLE AS SELECT</h4>
<div>
<div class="section">
<p>The <code class="codeph">CREATE TABLE AS SELECT</code> (CTAS) statements include <code class="codeph">SELECT</code> statements and <code class="codeph">INSERT</code> statements that reference any number of underlying objects. By default, Oracle GoldenGate obtains the data for the <code class="codeph">AS SELECT</code> clause from the target database. You can force the CTAS operation to preserve the original inserts using this parameter.</p>
<div class="infobox-note" id="GUID-E9260D44-73C8-43C9-AD75-227E5D407260__GUID-CDD9B158-6C68-4BE5-893F-44DCEC098DC4">
<p class="notep1">Note:</p>
<p>For this reason, Oracle <code class="codeph">XMLType</code> tables created from a <code class="codeph">CTAS</code> (<code class="codeph">CREATE TABLE AS SELECT</code>) statement cannot be supported. For <code class="codeph">XMLType</code> tables, the row object IDs must match between source and target, which cannot be maintained in this scenario. <code class="codeph">XMLType</code> tables created by an empty <code class="codeph">CTAS</code> statement (that does not insert data in the new table) can be maintained correctly.</p>
<p>In addition, you could use the <code class="codeph">GETCTASDML</code> parameter that allows CTAS to replay the inserts of the CTAS thus preserving OIDs during replication. This parameter is only supported with Integrated Dictionary and any downstream Replicat must be 12.1.2.1 or greater to consume the trail otherwise, there may be divergence.</p>
</div>
<p>The objects in the <code class="codeph">AS SELECT</code> clause must exist in the target database, and their names must be identical to the ones on the source.</p>
<p>In a <code class="codeph">MAP</code> statement, Oracle GoldenGate only maps the name of the new table (<code class="codeph">CREATE TABLE name</code>) to the <code class="codeph">TARGET</code> specification, but does not map the names of the underlying objects from the <code class="codeph">AS</code> <code class="codeph">SELECT</code> clause. There could be dependencies on those objects that could cause data inconsistencies if the names were converted to the <code class="codeph">TARGET</code> specification.</p>
<p>The following shows an example of a <code class="codeph">CREATE TABLE AS SELECT</code> statement on the source and how it would be replicated to the target by Oracle GoldenGate.</p>
<pre dir="ltr">
CREATE TABLE a.tab1 AS SELECT * FROM a.tab2;
</pre>
<p>The <code class="codeph">MAP</code> statement for Replicat is as follows:</p>
<pre dir="ltr">
MAP a.tab*, TARGET a.x*;
</pre>
<p>The target DDL statement that is applied by Replicat is the following:</p>
<pre dir="ltr">
CREATE TABLE a.xtab1 AS SELECT * FROM a.tab2;
</pre>
<p>The name of the table in the <code class="codeph">AS SELECT * FROM</code> clause remains as it was on the source: <code class="codeph">tab2</code> (rather than <code class="codeph">xtab2</code>).</p>
<p>To keep the data in the underlying objects consistent on source and target, you can configure them for data replication by Oracle GoldenGate. In the preceding example, you could use the following statements to accommodate this requirement:</p>
<p><span class="bold">Source</span></p>
<pre dir="ltr">
TABLE a.tab*;
</pre>
<p><span class="bold">Target</span></p>
<pre dir="ltr">
MAPEXCLUDE a.tab2
MAP a.tab*, TARGET a.x*;
MAP a.tab2, TARGET a.tab2;
</pre>
<p>See <a href="configuring-ddl-support.htm#GUID-A29FD45D-736B-4D18-9319-F16DAEF9C9A6">Correctly Identifying Unqualified Object Names in DDL</a>.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-8F9F159E-BB74-4014-9366-BC8813EAF707">New Tables as Derived Objects</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-AB4C6D59-0206-4B61-9895-EC4CD0E1F4B8"></a>
<h4 id="GGODB-GUID-AB4C6D59-0206-4B61-9895-EC4CD0E1F4B8" class="sect4"><span class="enumeration_section">12.10.4.2</span> RENAME and ALTER TABLE RENAME</h4>
<div>
<div class="section">
<p>In <code class="codeph">RENAME</code> and <code class="codeph">ALTER TABLE RENAME</code> operations, the base object is always the new table name. In the following example, the base object name is considered to be <code class="codeph">index_paydate</code>.</p>
<pre dir="ltr">
ALTER TABLE hr.indexPayrollDate RENAME TO index_paydate;
</pre>
<p>or...</p>
<pre dir="ltr">
RENAME hr.indexPayrollDate TO index_paydate;
</pre>
<p>The derived object name is <code class="codeph">hr.indexPayrollDate</code>.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-8F9F159E-BB74-4014-9366-BC8813EAF707">New Tables as Derived Objects</a></p>
</div>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-8B9CF5D4-ACCD-4EEE-AD5E-B40B9DEE7EBB"></a>
<h3 id="GGODB-GUID-8B9CF5D4-ACCD-4EEE-AD5E-B40B9DEE7EBB" class="sect3"><span class="enumeration_section">12.10.5</span> Disabling the Mapping of Derived Objects</h3>
<div>
<div class="section">
<p>Use the <code class="codeph">DDLOPTIONS</code> parameter with the <code class="codeph">NOMAPDERIVED</code> option to prevent the conversion of the name of a derived object according to a <code class="codeph">TARGET</code> clause of a <code class="codeph">MAP</code> statement that includes it. <code class="codeph">NOMAPDERIVED</code> overrides any explicit <code class="codeph">MAP</code> statements that contain the name of the base or derived object. Source DDL that contains derived objects is replicated to the target with the same schema and object names as on the source.</p>
<p>The following table shows the results of <code class="codeph">MAPDERIVED</code> compared to <code class="codeph">NOMAPDERIVED</code>, based on whether there is a <code class="codeph">MAP</code> statement just for the base object, just for the derived object, or for both.</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-8B9CF5D4-ACCD-4EEE-AD5E-B40B9DEE7EBB__GUID-D58DB2E8-E22F-441F-988D-45FCEC6BB349">
<p class="titleintable">Table 12-2 [NO]MAPDERIVED Results on Target Based on Mapping Configuration</p>
<table class="cellalignment500" title="[NO]MAPDERIVED Results on Target Based on Mapping Configuration" summary="This table lists the [NO]MAPDERIVED results on target based on mapping configuration.">
<thead>
<tr class="cellalignment483">
<th class="cellalignment501" id="d31873e3620">Base Object</th>
<th class="cellalignment501" id="d31873e3623">Derived Object</th>
<th class="cellalignment501" id="d31873e3626">MAP/NOMAP DERIVED?</th>
<th class="cellalignment502" id="d31873e3629">Derived object converted per a MAP?</th>
<th class="cellalignment502" id="d31873e3632">Derived object gets schema of base object?</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment483">
<td class="cellalignment503" id="d31873e3637" headers="d31873e3620">
<p>mapped<a id="fn_5" href="#fn_5" onclick='footdisplay(5,"Mapped means included in a MAP statement. ")'><sup>Foot&nbsp;5</sup></a></p>
</td>
<td class="cellalignment503" headers="d31873e3637 d31873e3623">
<p>mapped</p>
</td>
<td class="cellalignment503" headers="d31873e3637 d31873e3626">
<p><code class="codeph">MAPDERIVED</code></p>
</td>
<td class="cellalignment504" headers="d31873e3637 d31873e3629">
<p>yes</p>
</td>
<td class="cellalignment504" headers="d31873e3637 d31873e3632">
<p>no</p>
</td>
</tr>
<tr class="cellalignment483">
<td class="cellalignment503" id="d31873e3660" headers="d31873e3620">
<p>mapped</p>
</td>
<td class="cellalignment503" headers="d31873e3660 d31873e3623">
<p>not mapped</p>
</td>
<td class="cellalignment503" headers="d31873e3660 d31873e3626">
<p><code class="codeph">MAPDERIVED</code></p>
</td>
<td class="cellalignment504" headers="d31873e3660 d31873e3629">
<p>no</p>
</td>
<td class="cellalignment504" headers="d31873e3660 d31873e3632">
<p>yes</p>
</td>
</tr>
<tr class="cellalignment483">
<td class="cellalignment503" id="d31873e3677" headers="d31873e3620">
<p>not mapped</p>
</td>
<td class="cellalignment503" headers="d31873e3677 d31873e3623">
<p>mapped</p>
</td>
<td class="cellalignment503" headers="d31873e3677 d31873e3626">
<p><code class="codeph">MAPDERIVED</code></p>
</td>
<td class="cellalignment504" headers="d31873e3677 d31873e3629">
<p>no</p>
</td>
<td class="cellalignment504" headers="d31873e3677 d31873e3632">
<p>no</p>
</td>
</tr>
<tr class="cellalignment483">
<td class="cellalignment503" id="d31873e3694" headers="d31873e3620">
<p>not mapped</p>
</td>
<td class="cellalignment503" headers="d31873e3694 d31873e3623">
<p>not mapped</p>
</td>
<td class="cellalignment503" headers="d31873e3694 d31873e3626">
<p><code class="codeph">MAPDERIVED</code></p>
</td>
<td class="cellalignment504" headers="d31873e3694 d31873e3629">
<p>no</p>
</td>
<td class="cellalignment504" headers="d31873e3694 d31873e3632">
<p>no</p>
</td>
</tr>
<tr class="cellalignment483">
<td class="cellalignment503" id="d31873e3711" headers="d31873e3620">
<p>mapped</p>
</td>
<td class="cellalignment503" headers="d31873e3711 d31873e3623">
<p>mapped</p>
</td>
<td class="cellalignment503" headers="d31873e3711 d31873e3626">
<p><code class="codeph">NOMAPDERIVED</code></p>
</td>
<td class="cellalignment504" headers="d31873e3711 d31873e3629">
<p>no</p>
</td>
<td class="cellalignment504" headers="d31873e3711 d31873e3632">
<p>no</p>
</td>
</tr>
<tr class="cellalignment483">
<td class="cellalignment503" id="d31873e3728" headers="d31873e3620">
<p>mapped</p>
</td>
<td class="cellalignment503" headers="d31873e3728 d31873e3623">
<p>not mapped</p>
</td>
<td class="cellalignment503" headers="d31873e3728 d31873e3626">
<p><code class="codeph">NOMAPDERIVED</code></p>
</td>
<td class="cellalignment504" headers="d31873e3728 d31873e3629">
<p>no</p>
</td>
<td class="cellalignment504" headers="d31873e3728 d31873e3632">
<p>no</p>
</td>
</tr>
<tr class="cellalignment483">
<td class="cellalignment503" id="d31873e3745" headers="d31873e3620">
<p>not mapped</p>
</td>
<td class="cellalignment503" headers="d31873e3745 d31873e3623">
<p>mapped</p>
</td>
<td class="cellalignment503" headers="d31873e3745 d31873e3626">
<p><code class="codeph">NOMAPDERIVED</code></p>
</td>
<td class="cellalignment504" headers="d31873e3745 d31873e3629">
<p>no</p>
</td>
<td class="cellalignment504" headers="d31873e3745 d31873e3632">
<p>no</p>
</td>
</tr>
<tr class="cellalignment483">
<td class="cellalignment503" id="d31873e3762" headers="d31873e3620">
<p>not mapped</p>
</td>
<td class="cellalignment503" headers="d31873e3762 d31873e3623">
<p>not mapped</p>
</td>
<td class="cellalignment503" headers="d31873e3762 d31873e3626">
<p><code class="codeph">NOMAPDERIVED</code></p>
</td>
<td class="cellalignment504" headers="d31873e3762 d31873e3629">
<p>no</p>
</td>
<td class="cellalignment504" headers="d31873e3762 d31873e3632">
<p>no</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;5</sup></p>
<p>Mapped means included in a <code class="codeph">MAP</code> statement.</p>
<div class="section">
<p>The following examples illustrate the results of <code class="codeph">MAPDERIVED</code> as compared to <code class="codeph">NOMAPDERIVED</code>.In <a href="configuring-ddl-support.htm#GUID-8B9CF5D4-ACCD-4EEE-AD5E-B40B9DEE7EBB__BABBADCG" title="This table shows the default mapping of derived object names (MAPDERIVED).">Table 12-3</a>, both trigger and table are owned by <code class="codeph">rpt</code> on the target because both base and derived names are converted by means of <code class="codeph">MAPDERIVED</code>.</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-8B9CF5D4-ACCD-4EEE-AD5E-B40B9DEE7EBB__BABBADCG">
<p class="titleintable">Table 12-3 Default Mapping of Derived Object Names (MAPDERIVED)</p>
<table class="cellalignment500" title="Default Mapping of Derived Object Names (MAPDERIVED)" summary="This table shows the default mapping of derived object names (MAPDERIVED).">
<thead>
<tr class="cellalignment483">
<th class="cellalignment505" id="d31873e3809">MAP statement</th>
<th class="cellalignment505" id="d31873e3812">Source DDL statement captured by Extract</th>
<th class="cellalignment505" id="d31873e3817">Target DDL statement applied by Replicat</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment483">
<td class="cellalignment506" id="d31873e3824" headers="d31873e3809">
<p><code class="codeph">MAP fin.*, TARGET rpt.*;</code></p>
</td>
<td class="cellalignment506" headers="d31873e3824 d31873e3812">
<p><code class="codeph">CREATE TRIGGER fin.act_trig ON fin.acct;</code></p>
</td>
<td class="cellalignment506" headers="d31873e3824 d31873e3817">
<p><code class="codeph">CREATE TRIGGER rpt.act_trig ON rpt.acct;</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<p>In <a href="configuring-ddl-support.htm#GUID-8B9CF5D4-ACCD-4EEE-AD5E-B40B9DEE7EBB__BABEAJEA" title="This table lists the default mapping of derived object names (MAPDERIVED).">Table 12-4</a>, the trigger is owned by <code class="codeph">fin</code>, because conversion is prevented by means of <code class="codeph">NOMAPDERIVED</code>.</p>
</div>
<!-- class="section" -->
<div class="tblformalwide" id="GUID-8B9CF5D4-ACCD-4EEE-AD5E-B40B9DEE7EBB__BABEAJEA">
<p class="titleintable">Table 12-4 Mapping of derived object names when using NOMAPDERIVED</p>
<table class="cellalignment500" title="Mapping of derived object names when using NOMAPDERIVED" summary="This table lists the default mapping of derived object names (MAPDERIVED).">
<thead>
<tr class="cellalignment483">
<th class="cellalignment505" id="d31873e3861">MAP statement</th>
<th class="cellalignment505" id="d31873e3864">Source DDL statement captured by Extract</th>
<th class="cellalignment505" id="d31873e3869">Target DDL statement applied by Replicat</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment483">
<td class="cellalignment506" id="d31873e3876" headers="d31873e3861">
<p><code class="codeph">MAP fin.*, TARGET rpt.*;</code></p>
</td>
<td class="cellalignment506" headers="d31873e3876 d31873e3864">
<p><code class="codeph">CREATE TRIGGER fin.act_trig ON fin.acct;</code></p>
</td>
<td class="cellalignment506" headers="d31873e3876 d31873e3869">
<p><code class="codeph">CREATE TRIGGER fin.act_trig ON rpt.acct;</code></p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<div class="section">
<div class="infobox-note" id="GUID-8B9CF5D4-ACCD-4EEE-AD5E-B40B9DEE7EBB__GUID-879A9888-DFC9-41F6-AAAA-A3E708EEC091">
<p class="notep1">Note:</p>
<p>In the case of a <code class="codeph">RENAME</code> statement, the new table name is considered to be the base table name, and the old table name is considered to be the derived table name.</p>
</div>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-9EE9E693-2197-417C-9BB0-FA515DFF2F0F">How Oracle GoldenGate Handles Derived Object Names</a></p>
</div>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-741901ED-6318-47AB-BBAB-BDFF9C86092B"></a>
<h2 id="GGODB-GUID-741901ED-6318-47AB-BBAB-BDFF9C86092B" class="sect2"><span class="enumeration_section">12.11</span> Using DDL String Substitution</h2>
<div>
<div class="section">
<p>You can substitute strings within a DDL operation while it is being processed by Oracle GoldenGate. This feature provides a convenience for changing and mapping directory names, comments, and other things that are not directly related to data structures. For example, you could substitute one tablespace name for another, or substitute a string within comments. String substitution is controlled by the <code class="codeph">DDLSUBST</code> parameter. For more information, see <a class="olink GWURF454" target="_blank" href="../GWURF/ddlsubst.htm#GWURF454"><span class="italic"><span id="GUID-741901ED-6318-47AB-BBAB-BDFF9C86092B__GWURF"><cite>Reference for Oracle GoldenGate</cite></span></span></a>.</p>
<div class="infobox-note" id="GUID-741901ED-6318-47AB-BBAB-BDFF9C86092B__GUID-FEF05B0B-2CAD-49AA-BF98-4DA7ACBFD2D6">
<p class="notep1">Note:</p>
<p>Before you create a <code class="codeph">DDLSUBST</code> parameter statement, it might help to review <a href="configuring-ddl-support.htm#GUID-05DF9C4B-D6CD-4F87-AFB0-6F6ED8CC17E4">How DDL is Evaluated for Processing</a> in this chapter.</p>
</div>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-F1F3B4C8-8A93-4C80-87EA-5B74EA35E370"></a>
<h2 id="GGODB-GUID-F1F3B4C8-8A93-4C80-87EA-5B74EA35E370" class="sect2"><span class="enumeration_section">12.12</span> Controlling the Propagation of DDL to Support Different Topologies</h2>
<div>
<div class="section">
<p>To support bidirectional and cascading replication configurations, it is important for Extract to be able to identify the DDL that is performed by Oracle GoldenGate and by other applications, such as the local business applications. Depending on the configuration that you want to deploy, it might be appropriate to capture one or both of these sources of DDL on the local system.</p>
<div class="infobox-note" id="GUID-F1F3B4C8-8A93-4C80-87EA-5B74EA35E370__GUID-E80629E9-C6BE-47DE-A34F-C6B0151CD768">
<p class="notep1">Note:</p>
<p>Oracle GoldenGate DDL consists of <code class="codeph">ALTER TABLE</code> statements performed by Extract to create log groups and the DDL that is performed by Replicat to replicate source DDL changes.</p>
</div>
<p>The following options of the <code class="codeph">DDLOPTIONS</code> parameter control whether DDL on the local system is captured by Extract and then sent to a remote system, assuming Oracle GoldenGate DDL support is configured and enabled:</p>
<ul style="list-style-type: disc;">
<li>
<p>The <code class="codeph">GETREPLICATES</code> and <code class="codeph">IGNOREREPLICATES</code> options control whether Extract captures or ignores the DDL that is generated by Oracle GoldenGate. The default is <code class="codeph">IGNOREREPLICATES</code>, which does not propagate the DDL that is generated by Oracle GoldenGate. To identify the DDL operations that are performed by Oracle GoldenGate, the following comment is part of each Extract and Replicat DDL statement:</p>
<pre dir="ltr">
/* GOLDENGATE_DDL_REPLICATION */
</pre></li>
<li>
<p>The <code class="codeph">GETAPPLOPS</code> and <code class="codeph">IGNOREAPPLOPS</code> options control whether Extract captures or ignores the DDL that is generated by applications other than Oracle GoldenGate. The default is <code class="codeph">GETAPPLOPS</code>, which propagates the DDL from local applications (other than Oracle GoldenGate).</p>
</li>
</ul>
<p>The result of these default settings is that Extract ignores its own DDL and the DDL that is applied to the local database by a local Replicat, so that the DDL is not sent back to its source, and Extract captures all other DDL that is configured for replication. The following is the default <code class="codeph">DDLOPTIONS</code> configuration.</p>
<pre dir="ltr">
DDLOPTIONS GETAPPLOPS, IGNOREREPLICATES
</pre>
<p>This behavior can be modified. See the following topics:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="configuring-ddl-support.htm#GUID-5B5F61D4-386D-43B9-B0E7-400663382226">Propagating DDL in Active-Active (Bidirectional) Configurations</a></p>
</li>
<li>
<p><a href="configuring-ddl-support.htm#GUID-15D9CDD4-D6C4-4431-913A-47F8A242259D">Propagating DDL in a Cascading Configuration</a></p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-5B5F61D4-386D-43B9-B0E7-400663382226">Propagating DDL in Active-Active (Bidirectional) Configurations</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-15D9CDD4-D6C4-4431-913A-47F8A242259D">Propagating DDL in a Cascading Configuration</a><br /></li>
</ul>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-5B5F61D4-386D-43B9-B0E7-400663382226"></a>
<h3 id="GGODB-GUID-5B5F61D4-386D-43B9-B0E7-400663382226" class="sect3"><span class="enumeration_section">12.12.1</span> Propagating DDL in Active-Active (Bidirectional) Configurations</h3>
<div>
<div class="section">
<p>Oracle GoldenGate supports active-active DDL replication between two systems. For an active-active bidirectional replication, the following must be configured in the Oracle GoldenGate processes:</p>
<ol>
<li>
<p>DDL that is performed by a business application on one system must be replicated to the other system to maintain synchronization. To satisfy this requirement, include the <code class="codeph">GETAPPLOPS</code> option in the <code class="codeph">DDLOPTIONS</code> statement in the Extract parameter files on both systems.</p>
</li>
<li>
<p>DDL that is applied by Replicat on one system must be captured by the local Extract and sent back to the other system. To satisfy this requirement, use the <code class="codeph">GETREPLICATES</code> option in the <code class="codeph">DDLOPTIONS</code> statement in the Extract parameter files on both systems.</p>
<div class="infobox-note" id="GUID-5B5F61D4-386D-43B9-B0E7-400663382226__GUID-6918C893-6B14-47C6-B7EF-90A8D2BC448F">
<p class="notep1">Note:</p>
<p>An internal Oracle GoldenGate token will cause the actual Replicat DDL statement itself to be ignored to prevent loopback. The purpose of propagating Replicat DDL back to the original system is so that the Replicat on that system can update its object metadata cache, in preparation to receive incoming DML, which will have the new metadata. See <a href="configuring-ddl-support.htm#GUID-5B5F61D4-386D-43B9-B0E7-400663382226__BABJCEFD">Figure 12-1</a>.</p>
</div>
</li>
<li>
<p>Each Replicat must be configured to update its object metadata cache whenever the remote Extract sends over a captured Replicat DDL statement. To satisfy this requirement, use the <code class="codeph">UPDATEMETADATA</code> option in the <code class="codeph">DDLOPTIONS</code> statement in the Replicat parameter files on both systems.</p>
</li>
</ol>
<p>The resultant <code class="codeph">DDLOPTIONS</code> statements should look as follows:</p>
<p><span class="bold">Extract (primary and secondary)</span></p>
<pre dir="ltr">
DDLOPTIONS GETREPLICATES, GETAPPLOPS 
</pre>
<p><span class="bold">Replicat (primary and secondary)</span></p>
<pre dir="ltr">
DDLOPTIONS UPDATEMETADATA
</pre>
<div class="infoboxnotewarn" id="GUID-5B5F61D4-386D-43B9-B0E7-400663382226__GUID-DFDAA222-33AE-4B2C-B00D-0093C4DEAF84">
<p class="notep1">WARNING:</p>
<p>Before you allow new DDL or DML to be issued for the same object(s) as the original DDL, allow time for the original DDL to be replicated to the remote system and then captured again by the Extract on that system. This will ensure that the operations arrive in correct order to the Replicat on the original system, to prevent DML errors caused by metadata inconsistencies. See <a href="configuring-ddl-support.htm#GUID-5B5F61D4-386D-43B9-B0E7-400663382226__BABJCEFD">Figure 12-1</a> for more information.</p>
</div>
<div class="figure" id="GUID-5B5F61D4-386D-43B9-B0E7-400663382226__BABJCEFD">
<p class="titleinfigure">Figure 12-1 Path of DDL in Round Trip to Update Replicat Object Metadata Cache</p>
<img width="764" height="374" src="img/ddl_update_metadata.png" alt="Description of Figure 12-1 follows" title="Description of Figure 12-1 follows" /><br />
<a href="img_text/ddl_update_metadata.htm">Description of "Figure 12-1 Path of DDL in Round Trip to Update Replicat Object Metadata Cache"</a></div>
<!-- class="figure" -->
<p>The labels in the diagrams imply the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>1: ALTER TABLE Customer ADD Birth_Date date</p>
</li>
<li>
<p>2; New metadata: First_Name varchar2(50), Last_Name varchar2(50), Address varchar2(50), City varchar2(50), Country varchar2(25), Birth_Date date</p>
</li>
<li>
<p>3: ALTER TABLE</p>
</li>
<li>
<p>4: New metadata: First_Name varchar2(50), Last_Name varchar2(50), Address varchar2(50), City varchar2(50), Country varchar2(25), Birth_Date date</p>
</li>
<li>
<p>5: ALTER TABLE</p>
</li>
<li>
<p>6: DDLOPTIONS UPDATEMETADATA New metadata: First_Name varchar2(50), Last_Name varchar2(50), Address varchar2(50), City varchar2(50), Country varchar2(25), Birth_Date date</p>
</li>
</ul>
<p>For more information about <code class="codeph">DDLOPTIONS</code>, see <a class="olink GWURF451" target="_blank" href="../GWURF/ddloptions.htm#GWURF451"><span class="italic"><span id="GUID-5B5F61D4-386D-43B9-B0E7-400663382226__GWURF"><cite>Reference for Oracle GoldenGate</cite></span></span></a>.</p>
<p>For more information about configuring a bidirectional configuration, see <a class="olink GWUAD-GUID-5CEB29BE-671C-40C4-A3FB-E3D8B7A18A43" target="_blank" href="../GWUAD/configuring-oracle-goldengate-active-active-high-availability.htm#GWUAD-GUID-5CEB29BE-671C-40C4-A3FB-E3D8B7A18A43"><span id="GUID-5B5F61D4-386D-43B9-B0E7-400663382226__GWUAD"><cite>Administering Oracle GoldenGate</cite></span></a>.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-F1F3B4C8-8A93-4C80-87EA-5B74EA35E370">Controlling the Propagation of DDL to Support Different Topologies</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-15D9CDD4-D6C4-4431-913A-47F8A242259D"></a>
<h3 id="GGODB-GUID-15D9CDD4-D6C4-4431-913A-47F8A242259D" class="sect3"><span class="enumeration_section">12.12.2</span> Propagating DDL in a Cascading Configuration</h3>
<div>
<div class="section">
<p>In a cascading configuration, use the following setting for <code class="codeph">DDLOPTIONS</code> in the Extract parameter file on each intermediary system. This configuration forces Extract to capture the DDL from Replicat on an intermediary system and cascade it to the next system downstream.</p>
<pre dir="ltr">
DDLOPTIONS GETREPLICATES, IGNOREAPPLOPS
</pre>
<p>For more information about <code class="codeph">DDLOPTIONS</code>, see <a class="olink GWURF451" target="_blank" href="../GWURF/ddloptions.htm#GWURF451"><span class="italic"><span id="GUID-15D9CDD4-D6C4-4431-913A-47F8A242259D__GWURF"><cite>Reference for Oracle GoldenGate</cite></span></span></a></p>
<p>For more information about configuring a cascading configuration, see <a class="olink GWUAD-GUID-4C93821B-1A25-4A20-94F1-5DADB3766538" target="_blank" href="../GWUAD/using-oracle-goldengate-live-reporting.htm#GWUAD-GUID-4C93821B-1A25-4A20-94F1-5DADB3766538">Administering Oracle GoldenGate for Windows and UNIX</a>.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-F1F3B4C8-8A93-4C80-87EA-5B74EA35E370">Controlling the Propagation of DDL to Support Different Topologies</a></p>
</div>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-EFAFF255-FFD1-4C8B-9CA8-F15266E2BEA6"></a>
<h2 id="GGODB-GUID-EFAFF255-FFD1-4C8B-9CA8-F15266E2BEA6" class="sect2"><span class="enumeration_section">12.13</span> Adding Supplemental Log Groups Automatically</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">DDLOPTIONS</code> parameter with the <code class="codeph">ADDTRANDATA</code> option to do the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>enable Oracle's supplemental logging automatically for new tables created with a <code class="codeph">CREATE TABLE</code>.</p>
</li>
<li>
<p>update Oracle's supplemental logging for tables affected by an <code class="codeph">ALTER TABLE</code> to add or drop columns.</p>
</li>
<li>
<p>update Oracle's supplemental logging for tables that are renamed.</p>
</li>
<li>
<p>update Oracle's supplemental logging for tables where unique or primary keys are added or dropped.</p>
</li>
</ul>
<p>To use <code class="codeph">DDLOPTIONS ADDSCHEMATRANDATA</code>, the <code class="codeph">ADD SCHEMATRANDATA</code> command must be issued in GGSCI to enable schema-level supplemental logging.</p>
<p>By default, the <code class="codeph">ALTER TABLE</code> that adds the supplemental logging is not replicated to the target unless the <code class="codeph">GETREPLICATES</code> parameter is in use.</p>
<p><code class="codeph">DDLOPTIONS ADDTRANDATA</code> is not supported for multitenant container databases, see <a href="preparing-database-oracle-goldengate.htm#GUID-9FFB0F47-A681-4EC8-8E2E-4A03B451D916">Configuring Logging Properties</a> for more information.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-5228B712-1279-4109-9667-D09E222A4F5B"></a>
<h2 id="GGODB-GUID-5228B712-1279-4109-9667-D09E222A4F5B" class="sect2"><span class="enumeration_section">12.14</span> Removing Comments from Replicated DDL</h2>
<div>
<div class="section">
<p>You can use the <code class="codeph">DDLOPTIONS</code> parameter with the <code class="codeph">REMOVECOMMENTS BEFORE</code> and <code class="codeph">REMOVECOMMENTS AFTER</code> options to prevent comments that were used in the source DDL from being included in the target DDL. By default, comments are not removed, so that they can be used for string substitution.</p>
<p>For more information about <code class="codeph">DDLOPTIONS</code>, see <a class="olink GWURF451" target="_blank" href="../GWURF/ddloptions.htm#GWURF451"><span class="italic"><span id="GUID-5228B712-1279-4109-9667-D09E222A4F5B__GWURF"><cite>Reference for Oracle GoldenGate</cite></span></span></a>.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-49EEAD0F-5817-433E-AF9C-A32136EDAB37"></a>
<h2 id="GGODB-GUID-49EEAD0F-5817-433E-AF9C-A32136EDAB37" class="sect2"><span class="enumeration_section">12.15</span> Replicating an IDENTIFIED BY Password</h2>
<div>
<div class="section">
<p>Use the <code class="codeph">DDLOPTIONS</code> parameter with the <code class="codeph">DEFAULTUSERPASSWORDALIAS</code> and <code class="codeph">REPLICATEPASSWORD | NOREPLICATEPASSWORD</code> options to control how the password of a replicated <code class="codeph">{CREATE | ALTER} USER</code> <span class="italic"><code class="codeph">name</code></span> <code class="codeph">IDENTIFIED BY</code> <span class="italic"><code class="codeph">password</code></span> statement is handled. These options must be used together.</p>
<p>See the <code class="codeph">USEPASSWORDVERIFIERLEVEL</code> option of <code class="codeph">DDLOPTIONS</code> for important information about specifying the password verifier when Replicat operates against an Oracle 10<span class="italic">g</span> or 11<span class="italic">g</span> database.</p>
<p>For more information about <code class="codeph">DDLOPTIONS</code>, see <a class="olink GWURF451" target="_blank" href="../GWURF/ddloptions.htm#GWURF451"><span class="italic"><span id="GUID-49EEAD0F-5817-433E-AF9C-A32136EDAB37__GWURF"><cite>Reference for Oracle GoldenGate</cite></span></span></a>.</p>
<div class="infobox-note" id="GUID-49EEAD0F-5817-433E-AF9C-A32136EDAB37__GUID-2B099041-29CC-4020-BB0F-CC808F5F0F7D">
<p class="notep1">Note:</p>
Replication of CREATE | ALTER PROFILE will fail as the profile/password verification function must exist in the SYS schema. To replicate these DDLs successfully, password verification function must be created manually on both source/target(s) since DDL to SYS schema is excluded.</div>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-05DF9C4B-D6CD-4F87-AFB0-6F6ED8CC17E4"></a>
<h2 id="GGODB-GUID-05DF9C4B-D6CD-4F87-AFB0-6F6ED8CC17E4" class="sect2"><span class="enumeration_section">12.16</span> How DDL is Evaluated for Processing</h2>
<div>
<div class="section">
<p>The following explains how Oracle GoldenGate processes DDL statements on the source and target systems. It shows the order in which different criteria in the Oracle GoldenGate parameters are processed, and it explains the differences between how Extract and Replicat each process the DDL.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Extract</p>
<ol>
<li>
<p>Extract captures a DDL statement.</p>
</li>
<li>
<p>Extract separates comments, if any, from the main statement.</p>
</li>
<li>
<p>Extract searches for the <code class="codeph">DDL</code> parameter. (This example assumes it exists.)</p>
</li>
<li>
<p>Extract searches for the <code class="codeph">IGNOREREPLICATES</code> parameter. If it is present, and if Replicat produced this DDL on this system, Extract ignores the DDL statement. (This example assumes no Replicat operations on this system.)</p>
</li>
<li>
<p>Extract determines whether the DDL statement is a <code class="codeph">RENAME</code>. If so, the rename is flagged internally.</p>
</li>
<li>
<p>Extract gets the base object name and, if present, the derived object name.</p>
</li>
<li>
<p>If the statement is a <code class="codeph">RENAME</code>, Extract changes it to <code class="codeph">ALTER TABLE RENAME</code>.</p>
</li>
<li>
<p>Extract searches for the <code class="codeph">DDLOPTIONS REMOVECOMMENTS BEFORE</code> parameter. If it is present, Extract removes the comments from the DDL statement, but stores them in case there is a <code class="codeph">DDL INCLUDE</code> or <code class="codeph">DDL EXCLUDE</code> clause that uses <code class="codeph">INSTR</code> or <code class="codeph">INSTRCOMMENTS</code>.</p>
</li>
<li>
<p>Extract determines the DDL scope: <code class="codeph">MAPPED</code>, <code class="codeph">UNMAPPED</code> or <code class="codeph">OTHER</code>:</p>
<ul style="list-style-type: disc;">
<li>
<p>It is <code class="codeph">MAPPED</code> if the operation and object types are supported for mapping, and the base object name and/or derived object name (if <code class="codeph">RENAME</code>) is in a <code class="codeph">TABLE</code> parameter.</p>
</li>
</ul>
<ul style="list-style-type: disc;">
<li>
<p>It is <code class="codeph">UNMAPPED</code> if the operation and object types are not supported for mapping, and the base object name and/or derived object name (if <code class="codeph">RENAME</code>) is not in a <code class="codeph">TABLE</code> parameter.</p>
</li>
<li>
<p>Otherwise the operation is identified as <code class="codeph">OTHER</code>.</p>
</li>
</ul>
</li>
<li>
<p>Extract checks the <code class="codeph">DDL</code> parameter for <code class="codeph">INCLUDE</code> and <code class="codeph">EXCLUDE</code> clauses, and it evaluates the <code class="codeph">DDL</code> parameter criteria in those clauses. All options must evaluate to <code class="codeph">TRUE</code> in order for the <code class="codeph">INCLUDE</code> or <code class="codeph">EXCLUDE</code> to evaluate to <code class="codeph">TRUE</code>. The following occurs:</p>
<ul style="list-style-type: disc;">
<li>
<p>If an <code class="codeph">EXCLUDE</code> clause evaluates to <code class="codeph">TRUE</code>, Extract discards the DDL statement and evaluates another DDL statement. In this case, the processing steps start over.</p>
</li>
<li>
<p>If an <code class="codeph">INCLUDE</code> clause evaluates to <code class="codeph">TRUE</code>, or if the <code class="codeph">DDL</code> parameter does not have any <code class="codeph">INCLUDE</code> or <code class="codeph">EXCLUDE</code> clauses, Extract includes the DDL statement, and the processing logic continues.</p>
</li>
</ul>
</li>
<li>
<p>Extract searches for a <code class="codeph">DDLSUBST</code> parameter and evaluates the <code class="codeph">INCLUDE</code> and <code class="codeph">EXCLUDE</code> clauses. If the criteria in those clauses add up to <code class="codeph">TRUE</code>, Extract performs string substitution. Extract evaluates the DDL statement against each <code class="codeph">DDLSUBST</code> parameter in the parameter file. For all true <code class="codeph">DDLSUBST</code> specifications, Extract performs string substitution in the order that the <code class="codeph">DDLSUBST</code> parameters are listed in the file.</p>
</li>
<li>
<p>Now that <code class="codeph">DDLSUBT</code> has been processed, Extract searches for the <code class="codeph">REMOVECOMMENTS AFTER</code> parameter. If it is present, Extract removes the comments from the DDL statement.</p>
</li>
<li>
<p>Extract searches for <code class="codeph">DDLOPTIONS ADDTRANDATA</code>. If it is present, and if the operation is <code class="codeph">CREATE TABLE</code>, Extract issues the <code class="codeph">ALTER TABLE</code> <span class="italic"><code class="codeph">name</code></span> <code class="codeph">ADD SUPPLEMENTAL LOG GROUP</code> command on the table.</p>
</li>
<li>
<p>Extract writes the DDL statement to the trail.</p>
</li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Replicat</p>
<ol>
<li>
<p>Replicat reads the DDL statement from the trail.</p>
</li>
<li>
<p>Replicat separates comments, if any, from the main statement.</p>
</li>
<li>
<p>Replicat searches for <code class="codeph">DDLOPTIONS REMOVECOMMENTS BEFORE</code>. If it is present, Replicat removes the comments from the DDL statement.</p>
</li>
<li>
<p>Replicat evaluates the DDL synchronization scope to determine if the DDL qualifies for name mapping. Anything else is of <code class="codeph">OTHER</code> scope.</p>
</li>
<li>
<p>Replicat evaluates the <code class="codeph">MAP</code> statements in the parameter file. If the source base object name for this DDL (as read from the trail) appears in any of the <code class="codeph">MAP</code> statements, the operation is marked as <code class="codeph">MAPPED</code> in scope. Otherwise it is marked as <code class="codeph">UNMAPPED</code> in scope.</p>
</li>
<li>
<p>Replicat replaces the source base object name with the base object name that is specified in the <code class="codeph">TARGET</code> clause of the <code class="codeph">MAP</code> statement.</p>
</li>
<li>
<p>If there is a derived object, Replicat searches for <code class="codeph">DDLOPTIONS MAPDERIVED</code>. If it is present, Replicat replaces the source derived name with the target derived name from the <code class="codeph">MAP</code> statement.</p>
</li>
<li>
<p>Replicat checks the <code class="codeph">DDL</code> parameter for <code class="codeph">INCLUDE</code> and <code class="codeph">EXCLUDE</code> clauses, and it evaluates the <code class="codeph">DDL</code> parameter criteria contained in them. All options must evaluate to <code class="codeph">TRUE</code> in order for the <code class="codeph">INCLUDE</code> or <code class="codeph">EXCLUDE</code> to evaluate to <code class="codeph">TRUE</code>. The following occurs:</p>
<ul style="list-style-type: disc;">
<li>
<p>If any <code class="codeph">EXCLUDE</code> clause evaluates to <code class="codeph">TRUE</code>, Replicat discards the DDL statement and starts evaluating another DDL statement. In this case, the processing steps start over.</p>
</li>
<li>
<p>If any <code class="codeph">INCLUDE</code> clause evaluates to <code class="codeph">TRUE</code>, or if the <code class="codeph">DDL</code> parameter does not have any <code class="codeph">INCLUDE</code> or <code class="codeph">EXCLUDE</code> clauses, Replicat includes the DDL statement, and the processing logic continues.</p>
</li>
</ul>
</li>
<li>
<p>Replicat searches for the <code class="codeph">DDLSUBST</code> parameter and evaluates the <code class="codeph">INCLUDE</code> and <code class="codeph">EXCLUDE</code> clauses. If the options in those clauses add up to <code class="codeph">TRUE</code>, Replicat performs string substitution. Replicat evaluates the DDL statement against each <code class="codeph">DDLSUBST</code> parameter in the parameter file. For all true <code class="codeph">DDLSUBST</code> specifications, Replicat performs string substitution in the order that the <code class="codeph">DDLSUBST</code> parameters are listed in the file.</p>
</li>
<li>
<p>Now that <code class="codeph">DDLSUBT</code> has been processed, Replicat searches for the <code class="codeph">REMOVECOMMENTS AFTER</code> parameter. If it is present, Replicat removes the comments from the DDL statement.</p>
</li>
<li>
<p>Replicat executes the DDL statement on the target database.</p>
</li>
<li>
<p>If there are no errors, Replicat processes the next DDL statement. If there are errors, Replicat performs the following steps.</p>
</li>
<li>
<p>Replicat analyzes the <code class="codeph">INCLUDE</code> and <code class="codeph">EXCLUDE</code> rules in the Replicat <code class="codeph">DDLERROR</code> parameters in the order that they appear in the parameter file. If Replicat finds a rule for the error code, it applies the specified error handling; otherwise, it applies <code class="codeph">DEFAULT</code> handling.</p>
</li>
<li>
<p>If the error handling does not enable the DDL statement to succeed, Replicat does one of the following: abends, ignores the operation, or discards it as specified in the rules.</p>
</li>
</ol>
</div>
<!-- class="section" -->
<div class="section">
<div class="infobox-note" id="GUID-05DF9C4B-D6CD-4F87-AFB0-6F6ED8CC17E4__GUID-249FC91A-7C20-4C1E-98B0-35649B32C40B">
<p class="notep1">Note:</p>
<p>If there are multiple targets for the same source in a <code class="codeph">MAP</code> statement, the processing logic executes for each one.</p>
</div>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-0F1E9E0F-DD57-4663-9381-1CD40712BECC"></a>
<h2 id="GGODB-GUID-0F1E9E0F-DD57-4663-9381-1CD40712BECC" class="sect2"><span class="enumeration_section">12.17</span> Viewing DDL Report Information</h2>
<div>
<div class="section">
<p>By default, Oracle GoldenGate shows basic statistics about DDL at the end of the Extract and Replicat reports. To enable expanded DDL reporting, use the <code class="codeph">DDLOPTIONS</code> parameter with the <code class="codeph">REPORT</code> option. Expanded reporting includes the following information about DDL processing:</p>
<ul style="list-style-type: disc;">
<li>
<p>A step-by-step history of the DDL operations that were processed by Oracle GoldenGate.</p>
</li>
<li>
<p>The DDL filtering and processing parameters that are being used.</p>
</li>
</ul>
<p>Expanded DDL report information increases the size of the report file, but it might be useful in certain situations, such as for troubleshooting or to determine when an <code class="codeph">ADDTRANDATA</code> to add supplemental logging was applied.</p>
<p>To view a report, use the <code class="codeph">VIEW REPORT</code> command in GGSCI.</p>
<pre dir="ltr">
VIEW REPORT <span class="italic">group</span>
</pre></div>
<!-- class="section" --></div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-7F8F4FA3-087B-4125-BEF3-36C786C20DE1">Viewing DDL Reporting in Replicat</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-9559E43A-B720-4F36-897A-9E80DF69DB56">Viewing DDL Reporting in Extract</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-1F198765-0664-412B-BBFB-6536490B7BB7">Statistics in the Process Reports</a><br /></li>
</ul>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-7F8F4FA3-087B-4125-BEF3-36C786C20DE1"></a>
<h3 id="GGODB-GUID-7F8F4FA3-087B-4125-BEF3-36C786C20DE1" class="sect3"><span class="enumeration_section">12.17.1</span> Viewing DDL Reporting in Replicat</h3>
<div>
<div class="section">
<p>The Replicat report lists:</p>
<ul style="list-style-type: disc;">
<li>
<p>The entire syntax and source Oracle GoldenGate SCN of each DDL operation that Replicat processed from the trail. You can use the source SCN for tracking purposes, especially when there are restores from backup and Replicat is positioned backward in the trail.</p>
</li>
<li>
<p>A subsequent entry that shows the scope of the operation (<code class="codeph">MAPPED</code>, <code class="codeph">UNMAPPED</code>, <code class="codeph">OTHER</code>) and how object names were mapped in the target DDL statement, if applicable.</p>
</li>
<li>
<p>Another entry that shows how processing criteria was applied.</p>
</li>
<li>
<p>Additional entries that show whether the operation succeeded or failed, and whether or not Replicat applied error handling rules.</p>
</li>
</ul>
<p>The following excerpt from a Replicat report illustrates a sequence of steps, including error handling:</p>
<pre dir="ltr">
2011-01-20 15:11:45  GGS INFO     2104  DDL found, operation [drop table myTableTemp ], Source SCN [1186713.0].
 2011-01-20 15:11:45  GGS INFO     2100  DDL is of mapped scope, after mapping new operation [drop table "QATEST2"."MYTABLETEMP" ].
 2011-01-20 15:11:45  GGS INFO     2100  DDL operation included [include objname myTable*], optype [DROP], objtype [TABLE], objname [QATEST2.MYTABLETEMP].
 2011-01-20 15:11:45  GGS INFO     2100  Executing DDL operation.
 2011-01-20 15:11:48  GGS INFO     2105  DDL error ignored for next retry: error code [942], filter [include objname myTableTemp], error text [ORA-00942: table or view does not exist], retry [1].
 2011-01-20 15:11:48  GGS INFO     2100  Executing DDL operation , trying again due to RETRYOP parameter.
 2011-01-20 15:11:51  GGS INFO     2105  DDL error ignored for next retry: error code [942], filter [include objname myTableTemp], error text [ORA-00942: table or view does not exist], retry [2].
 2011-01-20 15:11:51  GGS INFO     2100  Executing DDL operation, trying again due to RETRYOP parameter.
 2011-01-20 15:11:54  GGS INFO     2105  DDL error ignored for next retry: error code [942], filter [include objname myTableTemp], error text [ORA-00942: table or view does not exist], retry [3].
 2011-01-20 15:11:54  GGS INFO     2100  Executing DDL operation, trying again due to RETRYOP parameter.
 2011-01-20 15:11:54  GGS INFO     2105  DDL error ignored: error code [942], filter [include objname myTableTemp], error text [ORA-00942: table or view does not exist].
</pre></div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-0F1E9E0F-DD57-4663-9381-1CD40712BECC">Viewing DDL Report Information</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-9559E43A-B720-4F36-897A-9E80DF69DB56"></a>
<h3 id="GGODB-GUID-9559E43A-B720-4F36-897A-9E80DF69DB56" class="sect3"><span class="enumeration_section">12.17.2</span> Viewing DDL Reporting in Extract</h3>
<div>
<div class="section">
<p>The Extract report lists the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>The entire syntax of each captured DDL operation, the start and end SCN, the Oracle instance, the DDL sequence number (from the <code class="codeph">SEQNO</code> column of the history table), and the size of the operation in bytes.</p>
</li>
<li>
<p>A subsequent entry that shows how processing criteria was applied to the operation, for example string substitution or <code class="codeph">INCLUDE</code> and <code class="codeph">EXCLUDE</code> filtering.</p>
</li>
<li>
<p>Another entry showing whether the operation was written to the trail or excluded.</p>
</li>
</ul>
<p>The following, taken from an Extract report, shows an included operation and an excluded operation. There is a report message for the included operation, but not for the excluded one.</p>
<pre dir="ltr">
2011-01-20 15:11:41  GGS INFO     2100  DDL found, operation [create table myTable (
    myId number (10) not null,
    myNumber number,
    myString varchar2(100),
    myDate date,
    primary key (myId)
) ], start SCN [1186754], commit SCN [1186772] instance [test11g (1)], DDL seqno [4134].
 
2011-01-20 15:11:41  GGS INFO     2100  DDL operation included [INCLUDE OBJNAME myTable*], optype [CREATE], objtype [TABLE], objname [QATEST1.MYTABLE].
 
2011-01-20 15:11:41  GGS INFO     2100  DDL operation written to extract trail file.
 
2011-01-20 15:11:42  GGS INFO     2100  Successfully added TRAN DATA for table with the key, table [QATEST1.MYTABLE], operation [ALTER TABLE "QATEST1"."MYTABLE" ADD SUPPLEMENTAL LOG GROUP "GGS_MYTABLE_53475" (MYID) ALWAYS  /* GOLDENGATE_DDL_REPLICATION */ ].
 
2011-01-20 15:11:43  GGS INFO     2100  DDL found, operation [create table myTableTemp (
    vid varchar2(100),
    someDate date,
    primary key (vid)
) ], start SCN [1186777], commit SCN [1186795] instance [test11g (1)], DDL seqno [4137].
 
2011-01-20 15:11:43  GGS INFO     2100  DDL operation excluded [EXCLUDE OBJNAME myTableTemp OPTYPE CREATE], optype [CREATE], objtype [TABLE], objname [QATEST1.MYTABLETEMP].
</pre></div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-0F1E9E0F-DD57-4663-9381-1CD40712BECC">Viewing DDL Report Information</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-1F198765-0664-412B-BBFB-6536490B7BB7"></a>
<h3 id="GGODB-GUID-1F198765-0664-412B-BBFB-6536490B7BB7" class="sect3"><span class="enumeration_section">12.17.3</span> Statistics in the Process Reports</h3>
<div>
<div class="section">
<p>You can send current statistics for DDL processing to the Extract and Replicat reports by using the <code class="codeph">SEND</code> command in GGSCI.</p>
<pre dir="ltr">
SEND {EXTRACT | REPLICAT} <span class="italic">group</span> REPORT
</pre>
<p>The statistics show totals for:</p>
<ul style="list-style-type: disc;">
<li>
<p>All DDL operations</p>
</li>
<li>
<p>Operations that are <code class="codeph">MAPPED</code> in scope</p>
</li>
<li>
<p>Operations that are <code class="codeph">UNMAPPED</code> in scope</p>
</li>
<li>
<p>Operations that are <code class="codeph">OTHER</code> in scope</p>
</li>
<li>
<p>Operations that were excluded (number of operations minus included ones)</p>
</li>
<li>
<p>Errors (Replicat only)</p>
</li>
<li>
<p>Retried errors (Replicat only)</p>
</li>
<li>
<p>Discarded errors (Replicat only)</p>
</li>
<li>
<p>Ignored operations (Replicat only)</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-0F1E9E0F-DD57-4663-9381-1CD40712BECC">Viewing DDL Report Information</a></p>
</div>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-0E1690FD-27E4-4EF7-A818-6F1FBCA96CFE"></a>
<h2 id="GGODB-GUID-0E1690FD-27E4-4EF7-A818-6F1FBCA96CFE" class="sect2"><span class="enumeration_section">12.18</span> Tracing DDL Processing</h2>
<div>
<div class="section">
<p>If you open a support case with Oracle GoldenGate Technical Support, you might be asked to turn on tracing. <code class="codeph">TRACE</code> and <code class="codeph">TRACE2</code> control DDL tracing. See <a class="olink GWURF703" target="_blank" href="../GWURF/trace-trace2.htm#GWURF703"><span class="italic"><span id="GUID-0E1690FD-27E4-4EF7-A818-6F1FBCA96CFE__GWURF"><cite>Reference for Oracle GoldenGate</cite></span></span></a>.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-FE395ADD-39B2-4E38-AF82-70C84304716D"></a>
<h2 id="GGODB-GUID-FE395ADD-39B2-4E38-AF82-70C84304716D" class="sect2"><span class="enumeration_section">12.19</span> Using Tools that Support Trigger-Based DDL Capture</h2>
<div>
<div class="section">
<p>This section documents the additional tools available to support trigger-based capture.</p>
</div>
<!-- class="section" --></div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-AB91CF0F-1316-4687-9DAB-85BA4C9842EE">Tracing the DDL Trigger</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-373AEF3C-A0A4-4C79-9FB0-78C3244D62F4">Viewing Metadata in the DDL History Table</a><br /></li>
<li class="ulchildlink"><a href="configuring-ddl-support.htm#GUID-856079A9-1B24-4502-B1BA-6A9A0745DFF7">Handling DDL Trigger Errors</a><br /></li>
</ul>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-AB91CF0F-1316-4687-9DAB-85BA4C9842EE"></a>
<h3 id="GGODB-GUID-AB91CF0F-1316-4687-9DAB-85BA4C9842EE" class="sect3"><span class="enumeration_section">12.19.1</span> Tracing the DDL Trigger</h3>
<div>
<div class="section">
<p>To trace the activity of the Oracle GoldenGate DDL trigger, use the following tools.</p>
</div>
<!-- class="section" -->
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">ggs_ddl_trace.log</code> trace file: Oracle GoldenGate creates a trace file in the <code class="codeph">USER_DUMP_DEST</code> directory of Oracle. On RAC, each node has its own trace file that captures DDL tracing for that node. You can query the trace file as follows:</p>
<pre dir="ltr">
select value from sys.v_$parameter where name = 'user_dump_dest';
</pre></li>
<li>
<p><code class="codeph">ddl_tracelevel</code> script: Edit and run this script to set the trace level. A value of <code class="codeph">None</code> generates no DDL tracing, except for fatal errors and installation logging. The default value of <code class="codeph">0</code> generates minimal tracing information. A value of <code class="codeph">1</code> or <code class="codeph">2</code> generates a much larger amount of information in the trace file. Do not use <code class="codeph">1</code> or <code class="codeph">2</code> unless requested to do so by a Oracle GoldenGate Technical Support analyst as part of a support case.</p>
</li>
<li>
<p><code class="codeph">ddl_cleartrace</code> script: Run this script on a regular schedule to prevent the trace file from consuming excessive disk space as it expands. It deletes the file, but Oracle GoldenGate will create another one. The DDL trigger stops writing to the trace file when the Oracle directory gets low on space, and then resumes writing when space is available again. This script is in the Oracle GoldenGate directory. Back up the trace file before running the script.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-FE395ADD-39B2-4E38-AF82-70C84304716D">Using Tools that Support Trigger-Based DDL Capture</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-373AEF3C-A0A4-4C79-9FB0-78C3244D62F4"></a>
<h3 id="GGODB-GUID-373AEF3C-A0A4-4C79-9FB0-78C3244D62F4" class="sect3"><span class="enumeration_section">12.19.2</span> Viewing Metadata in the DDL History Table</h3>
<div>
<div class="section">
<p>Use the <code class="codeph">DUMPDDL</code> command in GGSCI to view the information that is contained in the DDL history table. This information is stored in proprietary format, but you can export it in human-readable form to the screen or to a series of SQL tables that you can query. The information in the DDL history table is the same as that used by the Extract process.</p>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-FE395ADD-39B2-4E38-AF82-70C84304716D">Using Tools that Support Trigger-Based DDL Capture</a></p>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-856079A9-1B24-4502-B1BA-6A9A0745DFF7"></a>
<h3 id="GGODB-GUID-856079A9-1B24-4502-B1BA-6A9A0745DFF7" class="sect3"><span class="enumeration_section">12.19.3</span> Handling DDL Trigger Errors</h3>
<div>
<div class="section">
<p>Use the <code class="codeph">params.sql</code> non-executable script to handle failures of the Oracle GoldenGate DDL trigger in relation to whether the source DDL fails or succeeds. The <code class="codeph">params.sql script</code> is in the root Oracle GoldenGate directory. The parameters to use are the following:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold"><code class="codeph">ddl_fire_error_in_trigger</code></span>: If set to <code class="codeph">TRUE</code>, failures of the Oracle GoldenGate DDL trigger are raised with a Oracle GoldenGate error message and a database error message to the source end-user application. The source operations fails.</p>
<p>If set to <code class="codeph">FALSE</code>, no errors are raised, and a message is written to the trigger trace file in the Oracle GoldenGate directory. The source operation succeeds, but no DDL is replicated. The target application will eventually fail if subsequent data changes do not match the old target object structure. The default is <code class="codeph">FALSE</code>.</p>
</li>
<li>
<p><span class="bold"><code class="codeph">ddl_cause_error</code></span>: If set to <code class="codeph">TRUE</code>, tests the error response of the trigger by deliberately causing an error. To generate the error, Oracle GoldenGate attempts to <code class="codeph">SELECT</code> zero rows without exception handling. Revert this flag to the default of <code class="codeph">FALSE</code> after testing is done.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-FE395ADD-39B2-4E38-AF82-70C84304716D">Using Tools that Support Trigger-Based DDL Capture</a></p>
</div>
</div>
</div>
</div>
</div>
<div class="props_rev_3"><a id="GUID-DCD48579-8E16-413B-95DC-33999D26C1D2"></a>
<h2 id="GGODB-GUID-DCD48579-8E16-413B-95DC-33999D26C1D2" class="sect2"><span class="enumeration_section">12.20</span> Using Edition-Based Redefinition</h2>
<div>
<div class="section">
<p>Oracle GoldenGate supports the use of Edition-based Redefinition (EBR) with Oracle Databases enabling you to upgrade the database component of an application while it is in use, thereby minimizing or eliminating down time.</p>
<p>Editions are non-schema objects that Editioned objects belong to. Editions can be thought of as owning editioned objects or as a namespace. Every database starts with one edition named, <code class="codeph">ORA$BASE</code>; this includes upgraded databases. More than one edition can exist in a database and each can only have one child. For example, if you create three editions in succession, edition1, edition2, edition3, then edition1 is the parent of edition2 which is the parent of edition3. This is irrespective of the user or database session that creates them or which edition was current when the new one is created. When you create an edition, it inherits all the editioned objects of its parent. To use editions with Oracle GoldenGate, you must create them. For more information about creating and managing editions, see <a class="olink ADMIN" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E81615-01&amp;id=ADMIN"><span class="italic"><span><cite>Oracle Database Administrator&rsquo;s Guide</cite></span></span></a> .</p>
<p>An object is considered editioned if it is an editionable type, it is created with the <code class="codeph">EDITIONABLE</code> attribute, and the schema is enabled for editioning of that object type. When you create, alter, or drop an editioned object, the redo log will contain the name of the edition in which it belongs. In a container database, editions belong to the container and each container has its own default edition.</p>
<p>The <code class="codeph">CREATE | DROP EDITION</code> DDLs are captured for all Extract configurations. They fall into the <code class="codeph">OTHER</code> category and assigned an <code class="codeph">OBJTYPE</code> option value of <code class="codeph">EDITION</code>. The <code class="codeph">OBJTYPE</code> option can be used for filtering, for example:</p>
<pre dir="ltr">
DDL EXCLUDE OBJTYPE EDITION
DDL EXCLUDE OBJTYPE EDITION OPTYPE CREATE
DDL EXCLUDE OBJTYPE EDITION OPTYPE DROP
DDL EXCLUDE OBJTYPE EDITION OPTYPE DROP ALLOWEMPTYOWNER OBJNAME <span class="italic">edition_name</span>
</pre>
<p>You must use the following syntax to exclude an edition from Extract or Replicat:</p>
<pre dir="ltr">
EXCLUDE OBJTYPE EDITION, ALLOWEMPTYOWNER OBJNAME <span class="italic">edition_name</span>
</pre>
<p>Editions fall into the <code class="codeph">OTHER</code> category so no mapping is performed on the edition name. When applied, the <code class="codeph">USE</code> permission is automatically granted to the Replicat user. Replicat will also perform a <code class="codeph">grant use on edition</code> <span class="italic"><code class="codeph">name</code></span> <code class="codeph">with grant option</code> to the original creating user if that user exists on the target database. Because editions are not mappable operations, they do not have owners so the standard <code class="codeph">EXCLUDE</code> statement does not work.</p>
<p>The DDLs used to create or alter editions does not actually enable the user for editions, rather they enable the schema for editions. This is an important distinction because it means that the Replicat user does not need to be enabled for editions to apply DDLs to editioned objects. When Replicat applies a <code class="codeph">CREATE EDITION</code> DDL, it grants the original creating user permission to <code class="codeph">USE</code> it if the original user exists on the target database. For any unreplicated <code class="codeph">CREATE EDITION</code> statements, you must issue a <code class="codeph">USE WITH GRANT OPTION</code> grant to the Replicat user.</p>
<p>Whether or not an editionable objects becomes editioned is controlled by the schema it is applied in. Replicat switches its current session Edition before applying a DDL if the edition name attribute exists in the trail file and it is not empty.</p>
<p>Container database environments are supported for both Extract and Replicat. No additional configuration is necessary. The Replicat user's schema can not be enabled for editions if it is a common user. The Replicat user's schema does not need to be enabled for editions when applying DDLs to editioned objects in other schemas.</p>
<div class="infobox-note" id="GUID-DCD48579-8E16-413B-95DC-33999D26C1D2__GUID-F8AE1B08-8224-45C0-B5B7-9A985B4E78C1">
<p class="notep1">Note:</p>
<p>EBR support is limited to Integrated Dictionary; it is not supported when using a DDL trigger.</p>
</div>
</div>
<!-- class="section" --></div>
<div>
<div class="familylinks">
<div class="parentlink">
<p><strong>Parent topic:</strong> <a href="configuring-ddl-support.htm#GUID-A2997164-CBDF-4E9B-B2B0-2CE6889BC2DF" title="This chapter contains information to help you understand and configure DDL support in Oracle GoldenGate.">Configuring DDL Support</a></p>
</div>
</div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment482">
<tr>
<td class="cellalignment492">
<table class="cellalignment487">
<tr>
<td class="cellalignment486"><a href="additional-configuration-steps-using-nonintegrated-replicat.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment486"><a href="creating-process-groups.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2010, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment494">
<table class="cellalignment485">
<tr>
<td class="cellalignment486"><a href="http://docs.oracle.com/goldengate/c1230/gg-winux/index.html"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment486"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment486"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
</body>
</html>
