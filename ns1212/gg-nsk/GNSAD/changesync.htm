<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Configuring Change Synchronization</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="description" content="Online change synchronization extracts data and transmits it to a target. This chapter shows you how to prepare Extract, Replicat, and Logger, and how to work with parameter files, which control Extract, Replicat and Logger activities." />
<meta name="dcterms.created" content="2014-08-06T9:43:49Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="GoldenGate for Mainframe Administering Oracle GoldenGate for HP NonStop (Guardian)" />
<meta name="dcterms.identifier" content="E28904-01" />
<meta name="dcterms.isVersionOf" content="GNSAD" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1995, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="managerandcollector.htm" title="Previous" type="text/html" />
<link rel="Next" href="customops.htm" title="Next" type="text/html" />
<link rel="alternate" href="E28904-01.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/fonts.css">
<link rel="stylesheet" href="../dcommon/css/foundation.css">
<link rel="stylesheet" href="../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">10/17</span> <!-- End Header --><a id="BCGJGAJC"></a><a id="GNSAD294"></a>
<h1 class="chapter"><span class="secnum">7</span> Configuring Change Synchronization</h1>
<p><a id="GNSAD295"></a>Online change synchronization extracts data and transmits it to a target. This chapter shows you how to prepare Extract, Replicat, and Logger, and how to work with parameter files, which control Extract, Replicat and Logger activities.</p>
<p>This chapter contains the following sections:</p>
<ul>
<li>
<p><a href="#i934318">Section 7.1, "Introduction"</a></p>
</li>
<li>
<p><a href="#A998852">Section 7.2, "Change Synchronization for TMF Applications"</a></p>
</li>
<li>
<p><a href="#i934391">Section 7.3, "Change Synchronization for Non-TMF Applications"</a></p>
</li>
<li>
<p><a href="#i951994">Section 7.4, "Working with Parameter Files"</a></p>
</li>
</ul>
<a id="i934318"></a><a id="GNSAD296"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">7.1</span> Introduction</h2>
<p>If your application is TMF-protected, perform change synchronization using Extract and Replicat. Non-TMF applications use Logger and Replicat to perform the same functions. You can configure Oracle GoldenGate to process changes from the following sources:</p>
<ul>
<li>
<p>A TMF audit trail</p>
</li>
<li>
<p>An intermediate Oracle GoldenGate trail, created either by Logger or Extract</p>
</li>
<li>
<p>Directly from entry-sequenced files, or from BASE24, <code>TLF</code> or <code>PTLF</code> files.</p>
</li>
<li>
<p>Oracle GoldenGate logs generated from non-TMF applications</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="A998852"></a><a id="GNSAD297"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">7.2</span> Change Synchronization for TMF Applications</h2>
<p>TMF application change synchronization requires at least one Extract group, one trail, and one Replicat group.</p>
<a id="i934321"></a><a id="GNSAD298"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">7.2.1</span> Configuring Extract</h3>
<p>To configure and run Extract, you must create an Extract group and an Extract parameter file.</p>
<ol>
<li>
<p>Start GGSCI:</p>
<pre>
TACL&gt; RUN GGSCI
</pre></li>
<li>
<p>Add an Extract group. Specify CPU and priority:</p>
<pre>
GGSCI&gt; ADD EXTRACT EXTORD, BEGIN NOW, CPU 1, PRI 160
</pre></li>
<li>
<p>Create the Extract parameter file:</p>
<pre>
GGSCI&gt; EDIT PARAMS EXTORD
</pre></li>
</ol>
<p>The name of the parameter file is usually the same as the process group name. For more information on parameter guidelines, see <a href="#i951994">"Working with Parameter Files"</a>.</p>
<div class="example">
<p class="titleinexample"><a id="GNSAD299"></a><a id="sthref129"></a>Example 7-1 Sample Extract Parameter File</p>
<pre>
-- Extract parameter file for
-- TCUSTMER and TCUSTORD changes
EXTRACT EXTORD
GETROLLBACKS
EXTTRAIL \LA.$DATA03.JDSDAT.ET
TABLE $DATA11.JDSSOU.TCUSTMER;
TABLE $DATA11.JDSSOU.TCUSTORD;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="GNSAD300"></a>
<div class="sect2"><a id="sthref130"></a>
<h3 class="sect2"><span class="secnum">7.2.2</span> Configuring Trails</h3>
<p>Based on considerations such as performance, hard disk constraints, and data throughput speed, you can specify where you want your trails to reside. For example, if you are concerned about disk space in your Extract environment, you may choose to create your trails on the system where Replicat is installed.</p>
<p>To configure your trail, you must create an empty trail using GGSCI, then start its associated process. You can test the trail by checking to see data is being written to it. If an <code>INFO ALL</code> command shows data being written to your trail, it is configured correctly.</p>
<p class="orderedlisttitle">To add an Oracle GoldenGate trail:&nbsp;</p>
<ol>
<li>
<p>Determine if your trail will run locally or remotely. Base this decision on performance considerations vs. data throughput speed.</p>
</li>
<li>
<p>If you are not at the GGSCI prompt, start GGSCI.</p>
<pre>
TACL&gt; RUN GGSCI
</pre></li>
<li>
<p>Add your trail using the following commands:</p>
<pre>
GGSCI&gt; ADD EXTTRAIL <span class="variable">trail_path</span>, EXTRACT <span class="variable">extract_group</span>, <span class="variable">[trail_size_limit]</span>, <span class="variable">[limit_of_files_waiting_to_be_written]</span>
GGSCI&gt; ADD RMTTRAIL <span class="variable">trail_path</span>, EXTRACT <span class="variable">extract_group</span>, <span class="variable">[trail_size_limit]</span>
</pre>
<p>For example, a local trail would read:</p>
<pre>
GGSCI&gt; ADD EXTTRAIL \LA.$DATA03.JDSDAT.ET, EXTRACT EXTORD, MEGABYTES 5, MAXFILES 10
</pre></li>
</ol>
<p class="orderedlisttitle">To test a trail:&nbsp;</p>
<ol>
<li>
<p>Issue the GGSCI command <code>INFO ALL</code>.</p>
</li>
<li>
<p>Check to make sure Extract and Replicat are both running, and checkpoint sizes show relative byte addresses.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="i934359"></a><a id="GNSAD301"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">7.2.3</span> Configuring Replicat</h3>
<p>Replicat gathers data from your trail and delivers it to your target. A Replicat group contains the named Replicat itself, a Replicat parameter file, and checkpoint groups, as desired.</p>
<p class="orderedlisttitle">To configure Replicat:&nbsp;</p>
<ol>
<li>
<p>From GGSCI, create a Replicat group:</p>
<pre>
GGSCI&gt; ADD REPLICAT <span class="variable">group_name</span>, EXTTRAIL <span class="variable">trail_name</span>
</pre>
<p>For example:</p>
<pre>
GGSCI&gt; ADD REPLICAT REPORD, EXTTRAIL $DATA03.JDSDAT.ET
</pre></li>
<li>
<p>Launch a NonStop text editor to create a Replicat parameter file (or use GGSCI):</p>
<pre>
TACL&gt; TEDIT PARAMS REPORD
</pre></li>
<li>
<p>Enter your parameters as desired.</p>
<p>The name of the parameter file is usually the same as the process group name. For more information on parameter guidelines, see <a href="#i951994">"Working with Parameter Files"</a>. Following is a sample Replicat parameter file.</p>
<pre>
-- Replicat parameter file for replicating
-- TCUSTMER and TCUSTORD changes
REPLICAT REPORD
HANDLECOLLISIONS
PURGEOLDEXTRACTS
ASSUMETARGETDEFS
DISCARDFILE \LA.$DATA11.GGSDISC.REPORD, PURGE
MAP \LA.$DATA11.GGSSOU.TCUSTORD,
TARGET \NY.$DATA03.GGSTAR.TCUSTORD;
MAP \LA.$DATA11.GGSSOU.TCUSTMER,TARGET \NY.$DATA03.GGSTAR.TCUSTMER;
</pre></li>
<li>
<p>Start GGSCI, then start the Replicat you just configured.</p>
<pre>
GGSCI&gt; START REPLICAT REPORD
</pre></li>
<li>
<p>Verify that Replicat is working and receiving data from Extract.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i934391"></a><a id="GNSAD302"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">7.3</span> Change Synchronization for Non-TMF Applications</h2>
<p><a id="i934395"></a>The Logger program, with the GGSLIB run-time library, extracts changed records from files that are not protected by TMF. A Logger process records database updates in a log trail, which feeds data to Replicat. Each Logger process in a set is named <code>$GGLnn</code>, where <code>nn</code> is a sequenced identifier beginning with <code>00</code>. For example, if you configure two Logger processes, they are named <code>$GGL00</code> and <code>$GGL01</code>. Each Logger group has one or more Logger process, a parameter file, one or more log trails, and file extraction lists.</p>
<p>Log trails are sets of files, written to disk, that hold data extracted and sent to a particular Logger. Each log trail is owned by one Logger process. The parameter file holds specific volume locations and the number and size of each log file.</p>
<p>A log trail's name is comprised of the volume and subvolume where Oracle GoldenGate Logger is installed, the process prefix, and a series of letters and numbers that grow depending on the number of log trails. For example, <code>$DATA1.GLOGGGL.AA000000</code> means Oracle GoldenGate Logger is installed on volume <code>Data1</code>, subvolume <code>GLOG</code>, the process prefix is <code>GGL</code>, and the trail itself is called <code>AA000000</code>.</p>
<p>To configure and run change synchronization for non-TMF applications, you must:</p>
<a id="i934401"></a>
<ol>
<li>
<p>Create the <code>LOGPARM</code> parameter file.</p>
</li>
<li>
<p>Configure Logger and GGSLIB with the <code>ADD LOGGER</code> command.</p>
</li>
<li>
<p>Start Logger.</p>
</li>
<li>
<p>Bind GGSLIB to the non-TMF application.</p>
</li>
</ol>
<a id="GNSAD303"></a>
<div class="sect2"><a id="sthref134"></a>
<h3 class="sect2"><span class="secnum">7.3.1</span> Creating the LOGPARM File</h3>
<p>Just as Extract and Replicat are controlled by parameter files, so is Logger. Unlike either Extract or Replicat, you must create the <code>LOGPARM</code> before you add your Logger to Oracle GoldenGate Manager.</p>
<p>To create a Logger parameter file:</p>
<ol>
<li>
<p>Start GGSCI.</p>
<pre>
TACL&gt; VOLUME <span class="variable">Oracle_GoldenGate_installation_location</span>
TACL&gt; RUN GGSCI
</pre></li>
<li>
<p>Enter Logger and GGSLIB parameters into the <code>LOGPARM</code> file.</p>
<pre>
GGSCI&gt; TEDIT PARAMS LOGPARM
</pre></li>
<li>
<p>Add required parameters, including:</p>
<ul>
<li>
<p><code>LOG</code> entries, where each entry describes both a process and a log trail in which the process records database updates. Each log process writes to exactly one log trail.</p>
</li>
<li>
<p><code>FILE</code> parameters, which specify one or more files to be extracted by the current log process (The current log is the first log entry preceding the <code>FILE</code> entry.) The <code>FILE</code> entry may be a wildcard. In addition, <code>FILE</code> may specify compression of update records.</p>
</li>
<li>
<p><code>EXCLUDEFILE</code> parameters, which specifically exclude a file from a list for a particular log if it has been included with <code>FILE</code>.</p>
</li>
<li>
<p>The primary and backup CPUs in which the particular log process will run.</p>
</li>
<li>
<p>The priority at which the Logger process will run (<code>PRIORITY</code>).</p>
</li>
</ul>
</li>
</ol>
<p>Logger parameters are detailed in <span class="italic"><span class="italic">Reference for Oracle GoldenGate on HP NonStop Guardian</span></span>. The following section outlines a sample Logger parameter file.</p>
<a id="GNSAD304"></a>
<div class="sect3"><a id="sthref135"></a>
<h4 class="sect3"><span class="secnum">7.3.1.1</span> Sample LOGPARM File</h4>
<p>This sample parameter file configures two log processes <code>$GGL00</code> and <code>$GGL01.</code> These process names have been explicitly set with the <code>PROCESS</code> parameter, but when not set the names default to <code>$GGLnn.</code> The system will increment nn from <code>00</code> so the default will generate the same process names in this instance.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>Parameter position is important. As soon as a log entry is specified with the log parameter, it becomes the current log. Parameters entered below the current log parameter apply only to the current log. For instance, in the following example, all parameters after the <code>LOG $D3.GGSLOG.AA</code> and before the <code>LOG $D15.GGSLOG.BB</code> entry apply to <code>LOG $D3.GGSLOG.AA</code>.</p>
</div>
<div class="example">
<p class="titleinexample"><a id="GNSAD305"></a><a id="sthref136"></a>Example 7-2 Sample Logger Parameter File</p>
<pre>
-- Logger configuration for two Loggers
LOG $D3.GGSLOG.AA, PROCESS $GGL00, MEGABYTES 500, NUMFILES 10, SECURE "NUUU"
CPU 9,4
FILE $DATA4.*.*
FILE $DATA5.*.*
EXCLUDEFILE $DATA4.REPORTS.*
EXCLUDEFILE $DATA4.DAT.TRANSFL
LOG $D15.GGSLOG.BB, PROCESS $GGL01, MEGABYTES 100, NUMFILES 10, SECURE "NUUU"
CPU 3,2
FILE $*.*.*
EXCLUDEFILE $DATA4.REPORTS.*
</pre>
<p><span class="bold">Logger GGL00:</span></p>
</div>
<!-- class="example" -->
<ul>
<li>
<p>Creates a log trail <code>$D3.GGSLOG.AA</code> that contains <code>10</code> files each sized at <code>500</code> megabytes (for a total of 5,000 megabytes). The file names will be <code>AA000000,</code> <code>AA000001</code>, through <code>AA000009</code>. As new files are required, the oldest one is recycled and takes the next sequence number; in this case, <code>AA000000</code> will become <code>AA000010</code>. File space is pre-allocated by the GGSCI and Manager processes.</p>
</li>
<li>
<p>Configures <code>$GGL00</code> to run on <code>CPU 9</code>, with backup <code>CPU 4</code>.</p>
</li>
<li>
<p>Specifies that data written by the application in <code>$DATA4</code> will be logged to the log trail <code>$D3.GGSLOG.AA</code>.</p>
</li>
<li>
<p>Specifies that data written by the application in <code>$DATA5</code> will be logged to the log trail <code>$D3.GGSLOG.AA</code>.</p>
</li>
<li>
<p>Excludes <code>$DATA4.REPORTS.*</code> from being logged to <code>AA</code>.</p>
</li>
<li>
<p>Excludes <code>$DATA4.DAT.TRANSFL</code> from being logged to <code>AA</code>.</p>
</li>
</ul>
<p><span class="bold">Logger GGL01:</span></p>
<ul>
<li>
<p>Creates a log trail <code>$D15.GGSLOG.BB</code> that contains <code>100</code> files each sized at <code>10</code> megabytes (for a total of 1,000 megabytes). The file names will be <code>BB000000</code>, <code>BB000001</code>, through <code>BB000009</code>. These files are recycled when needed.</p>
</li>
<li>
<p>Configures <code>$GGL01</code> to run in <code>CPU 3,</code> with backup <code>CPU 2</code>.</p>
</li>
<li>
<p>Specifies that data written by the application to files in any location should be written to the <code>BB</code> log trail, except <code>$DATA4.REPORTS.*</code> and any data already captured by <code>$GGL00</code> (in this case, <code>$DATA4.*.*</code> and <code>$DATA5.*.*</code>). <code>$DATA4.DAT.TRANSFL</code> will be captured in <code>BB</code> since it was implicitly included in $*.*.* and excluded nowhere for this logger.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="GNSAD306"></a>
<div class="sect2"><a id="sthref137"></a>
<h3 class="sect2"><span class="secnum">7.3.2</span> Configuring Logger and GGSLIB</h3>
<p>Run the <code>ADD LOGGER</code> command to process the configuration in <code>LOGPARM</code>. This step establishes a configuration for both Logger and GGSLIB and pre-allocates disk files for each Logger process to use for logging database updates.</p>
<p>Before starting Logger, Oracle GoldenGate must process and store its configuration. This step pre-allocates file space for each log trail to ensure extracted records can be stored.</p>
<p>To process the Logger configuration, enter the following command.</p>
<pre>
GGSCI&gt; ADD LOGGER
</pre></div>
<!-- class="sect2" -->
<a id="i934466"></a><a id="GNSAD307"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">7.3.3</span> Starting Logger</h3>
<p>To start Logger:</p>
<ol>
<li>
<p>Start GGSCI.</p>
</li>
<li>
<p>Enter <code>START LOGGER</code>.</p>
<pre>
GGSCI&gt; START LOGGER
</pre>
<p>By default, this command starts the logger group <code>$GGLnn</code>. If, for example, you have three <code>LOG</code> entries in the <code>LOGPARM</code> file, <code>START LOGGER</code> starts three processes, named <code>$GGL00</code>, <code>$GGL01</code> and <code>$GGL02</code>.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="i934476"></a><a id="GNSAD308"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">7.3.4</span> Using Macros to Bind GGSLIB to a Non-TMF Application</h3>
<p>Use the GGSCI <code>BIND PROGRAMS</code> command to bind the GGSLIB library to your non-TMF application. This step also binds GGSLIB to existing user libraries the application calls.</p>
<pre>
TACL &gt; RUN GGSCI
GGSCI&gt; BIND PROGRAMS
</pre>
<p><code>BIND PROGRAMS</code> prompts for a list of programs to bind with GGSLIB. GGSCI analyzes this list to see which files are already bound and which ones it must bind.</p>
<p>In this context, bound means that GGSLIB runs as a user library in the application program (<code>BIND CHANGE LIBRARY GGSLIB</code> in <span class="variable">program_name</span> is performed). GGSLIB is not literally bound with the application program. If a program already calls a user library, that library is literally bound with GGSLIB to create a new library. The library will have the same name as the old user library.</p>
<a id="i934485"></a><a id="GNSAD309"></a>
<div class="sect3">
<h4 class="sect3"><span class="secnum">7.3.4.1</span> Building GGSLIB</h4>
<p>GGSLIB, built as part of installation, contains the BASELIB module that intercepts Guardian function calls made by the application. GGSLIB also contains C, CRE and COBOL run-time libraries that call Guardian functions. When bound to GGSLIB, these libraries attempt to call the operating system function, but actually call the Oracle GoldenGate function instead. GGSLIB in turn calls the intended operating system function transparently to the application. GGSLIB uses a shared extended memory segment for efficient configuration storage, and maintains a private memory segment for working storage variables.</p>
<p>Without the presence of these libraries, the C and COBOL run-time libraries would be called at the operating system level and would bypass Oracle GoldenGate intercept functions.</p>
<p>Therefore, build these libraries carefully. Keep the following libraries up-to-date with your latest operating system release and related IPMs. Not all of these libraries are required in the GGSLIB build if your application does not run COBOL74, COBOL85 or C routines. It is recommended, however, to bind each of these components that exist on your system into GGSLIB.</p>
<div class="inftblhruleinformal">
<table class="cellalignment32" title="GGSLIB Libraries and Functions" summary="This table lists the GGSLIB libraries and the functions called by each." dir="ltr">
<thead>
<tr class="cellalignment26">
<th class="cellalignment33" id="r1c1-t3">Library</th>
<th class="cellalignment33" id="r1c2-t3">Function</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment26">
<td class="cellalignment34" id="r2c1-t3" headers="r1c1-t3">
<pre>
$SYSTEM.ZCOBOLRT.CLIBOBJ
</pre></td>
<td class="cellalignment34" headers="r2c1-t3 r1c2-t3">
<p>COBOL74 routines</p>
</td>
</tr>
<tr class="cellalignment26">
<td class="cellalignment34" id="r3c1-t3" headers="r1c1-t3">
<pre>
$SYSTEM.ZCOB85RT.C8LIB
</pre></td>
<td class="cellalignment34" headers="r3c1-t3 r1c2-t3">
<p>COBOL85 routines</p>
</td>
</tr>
<tr class="cellalignment26">
<td class="cellalignment34" id="r4c1-t3" headers="r1c1-t3">
<pre>
$SYSTEM.ZCRERTL.CFELIB
</pre></td>
<td class="cellalignment34" headers="r4c1-t3 r1c2-t3">
<p>Common Run-time Environment</p>
</td>
</tr>
<tr class="cellalignment26">
<td class="cellalignment34" id="r5c1-t3" headers="r1c1-t3">
<pre>
$SYSTEM.SYSTEM.CRELIB
</pre></td>
<td class="cellalignment34" headers="r5c1-t3 r1c2-t3">
<p>Common Run-time Environment</p>
</td>
</tr>
<tr class="cellalignment26">
<td class="cellalignment34" id="r6c1-t3" headers="r1c1-t3">
<pre>
$SYSTEM.SYSTEM.COBOLLIB
</pre></td>
<td class="cellalignment34" headers="r6c1-t3 r1c2-t3">
<p>More COBOL85 routines</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblhruleinformal" -->
<p>To build a new version of GGSLIB, issue the following command from TACL.</p>
<pre>
&gt; RUN BUILDMAC
</pre>
<p>In some Guardian releases there are insignificant conflicts between functions that appear in more than one of the above libraries. You can safely ignore the resultant <code>BIND</code> warnings during the build.</p>
</div>
<!-- class="sect3" -->
<a id="GNSAD310"></a>
<div class="sect3"><a id="sthref138"></a>
<h4 class="sect3"><span class="secnum">7.3.4.2</span> Private Memory and Stack Space</h4>
<p>GGSLIB routines minimize stack space requirements. By doing so, programs are ensured that typical activities will have enough stack room left for themselves.</p>
<p>For its own working space, GGSLIB allocates a small private memory segment to handle in-transit I/O buffers and keep its own state variables.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="GNSAD311"></a>
<div class="sect2"><a id="sthref139"></a>
<h3 class="sect2"><span class="secnum">7.3.5</span> Alternate Methods of Binding GGSLIB to an Application</h3>
<p>There are alternatives to using the Oracle GoldenGate macros (<code>NLDLIB</code> for example) to bind the Oracle GoldenGate intercept library to your application. These alternatives may vary depending on your NonStop environment.</p>
<p>For non-native mode systems, a type 100 object file is produced using the TAL, COBOL, or C language compilers. Native-mode S systems use PTAL, NMCOBOL, NMC compilers to create type 700 objects. Native mode Itanium systems use EPTAL, ECOBOL or CCOMP to compile type 800 objects.</p>
<a id="GNSAD312"></a>
<div class="sect3"><a id="sthref140"></a>
<h4 class="sect3"><span class="secnum">7.3.5.1</span> Using the ?Search Directive</h4>
<p>You can connect the application to the Oracle GoldenGate intercept library by using the <code>?SEARCH</code> directive in the compile. This copies the library into the application object file. The drawback to this method is that an upgrade to the Oracle GoldenGate application or the operating system will not be picked up by the built-in modules of these programs. A recompile is required to replace the modules.</p>
</div>
<!-- class="sect3" -->
<a id="GNSAD313"></a>
<div class="sect3"><a id="sthref141"></a>
<h4 class="sect3"><span class="secnum">7.3.5.2</span> Non-Native Environments</h4>
<p>You can bind the intercept library to application programs in non-native environments by using:</p>
<ul>
<li>
<p>The NonStop <code>BIND</code> utility</p>
<pre>
BIND CHANGE LIBRARY<span class="variable"> $vol.subvol.library</span> IN <span class="variable">application_object</span>
</pre></li>
<li>
<p>A <code>/LIB /</code> parameter in the run statement</p>
<pre>
RUN application_object/LIB <span class="variable">$vol.subvol.library</span>/
</pre></li>
<li>
<p><code>SET SERVER GUARDIAN-LIB</code> parameter if it is a Pathway server</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="GNSAD314"></a>
<div class="sect3"><a id="sthref142"></a>
<h4 class="sect3"><span class="secnum">7.3.5.3</span> Native Mode S Systems</h4>
<p>Application programs should not be compiled <code>RUNNABLE</code> for the native mode S environment. The programs build-in the operating system shared run-time modules during the <code>RUNNABLE</code> compile, leaving Oracle GoldenGate no opportunity to intercept I/O calls.</p>
<p>To enable the Oracle GoldenGate intercept library in this environment, operating system modules <code>ZCOBREL</code> and <code>ZCREREL</code> must be checked out from the Distributed Systems Management/Software Configuration Manager (DSM/SCM) and bound to the application. When the application program is compiled, it is run through a Native Link Editor (NLD) step to set the called addresses to functions within the intercept library instead of the operating system.</p>
<p>The steps are:</p>
<ol>
<li>
<p>Run the compile without the <code>RUNNABLE</code> option</p>
</li>
<li>
<p>Run the following command entering <span class="variable">temp_object</span> as the output from the compiler, <span class="variable">application_object</span> as the executable application program, and <span class="variable">$vol.svol.library</span> as the <code>GGSLIB</code> library object file.</p>
<pre>
NLD <span class="variable">temp_object</span> -o <span class="variable">application_objec</span>t -libname <span class="variable">$vol.svol.library</span>
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>The install macro must be run before the NLD step. It prompts for the locations of the <code>*REL</code> files and correctly builds the library.</p>
</div>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="GNSAD315"></a>
<div class="sect3"><a id="sthref143"></a>
<h4 class="sect3"><span class="secnum">7.3.5.4</span> Native Mode Itanium Systems</h4>
<p>The native mode Itanium system does not require any special steps. The intercept library can be bound to the application by any of the following.</p>
<ul>
<li>
<p>Using the TNS/E Link edit (ELD) utility change command</p>
<pre>
ELD -CHANGE LIBNAME '<span class="variable">$vol.svol.library</span>' <span class="variable">application_object</span>
</pre></li>
<li>
<p>A <code>/LIB /</code> parameter in the run statement</p>
<pre>
RUN <span class="variable">application_program</span>/LIB <span class="variable">Oracle_GoldenGate_library</span>/
</pre></li>
<li>
<p>Using the server parameter <code>GUARDIAN-LIB.</code></p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="GNSAD316"></a>
<div class="sect2"><a id="sthref144"></a>
<h3 class="sect2"><span class="secnum">7.3.6</span> Libraries for Native Applications</h3>
<p>If your NonStop environment is running in native mode, you may decide to use native mode libraries so processes run more efficiently. You must use native mode modules and libraries if you are using the encryption or compression capabilities of Oracle GoldenGate. Oracle GoldenGate provides a TACL macro, <code>NLDLIB</code>, for building the following native libraries:</p>
<ul>
<li>
<p><span class="bold">BASELIBR</span>: A relinkable, native version of <code>BASELIB</code>, a module that intercepts function calls made by the application.</p>
</li>
<li>
<p><span class="bold">GGSSRL</span>: A native version of <code>BASELIB</code> for use as a user shared run-time library (SRL) on G06 operating systems.</p>
</li>
<li>
<p><span class="bold">GGSDLL</span>: A native version of <code>BASELIB</code> for use as a dynamically linked library (<code>DLL</code>) on H06/J06 operating systems.</p>
</li>
<li>
<p><span class="bold">GGSLIBR</span>: A relinkable, native <code>BASELIB</code> containing CRE and COBOL SRLs.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>Applications running on H06/J06 that include native C, native COBOL, and pTAL require two intercept libraries. The one to be linked to the C and COBOL applications should reference the COBOL and CRE dynamic -link libraries, and the one for pTAL should not. This is due to the limitation that pTAL does not perform the necessary initialization of the run-time environment.</p>
</div>
</li>
</ul>
<a id="GNSAD317"></a>
<div class="sect3"><a id="sthref145"></a>
<h4 class="sect3"><span class="secnum">7.3.6.1</span> Running NLDLIB</h4>
<p>Running the NLDLIB macro lets you create these libraries and combine them with the native mode Oracle GoldenGate BASELIBN library and certain Guardian system libraries. You can run NLDLIB as part of your initial installation routine or on its own.</p>
<ol>
<li>
<p>Run the following:</p>
<pre>
TACL&gt; RUN NLDLIB
</pre></li>
<li>
<p>The NLDLIB macro runs, and you are asked if you want to include a user library. Reply either <span class="bold">Y</span> or <span class="bold">N</span>.</p>
<pre>
*** Running NLDLIB to build GGSLIBR &amp; GGSSRL ***
----------------------------------------------------------------
NLDLIB builds the native relinkable libraries GGSLIBR and GGSSRL
A Native mode GGSLIB needs the re-linkable versions of some
Tandem SRLs. ZCREREL and ZCOBREL. If Native cobol support is not
required then ZCOBREL may be omitted.
If Native Cobol support is required then you have to compile the
Cobol program and search in GGSLIBR
A Native mode GGSSRL will be built for a User Library for Dynamic
linking
Enter X at any prompt to EXIT
----------------------------------------------------------------
Do you want to include your own User Library (Y/N) : <span class="bold">N</span>
</pre></li>
<li>
<p>You are asked if you want to change the location of the <code>AUDCFG</code>.</p>
<pre>
Do you want to change the location for the AUDCFG segment(Y/N) : <span class="bold">N</span>
</pre>
<p>If you respond with yes, it prompts you for the new default location ($<span class="variable">vol.subvol</span>) of the <code>AUDCFG</code> segment.</p>
</li>
<li>
<p>You are asked if you want to include <code>ZCREREL</code>. It is recommended to enter <span class="bold">Y</span> to include it unless you know your applications do not use these libraries.</p>
<pre>
Do you want to include ZCREREL (Y/N) : <span class="bold">Y</span>
</pre>
<p><code>NLDLIB</code> searches for <code>ZCREREL</code> locations and displays them.</p>
<pre>
Looking for ZCREREL ..
$SYSTEM.SYS02.ZCREREL $SYSTEM.SYS03.ZCREREL $SYSTEM.SYS04.ZCREREL
$DATA09.R1269G09.ZCREREL $DATA09.R8431G09.ZCREREL
</pre></li>
<li>
<p>You are asked to enter the location of the <code>ZCREREL</code> to use.</p>
<pre>
Enter location of ZCREREL : <span class="bold">$SYSTEM.SYS03.ZCREREL</span>
</pre></li>
<li>
<p>You are asked if you want to include <code>ZCOBREL</code>. It is recommended to enter <span class="bold">Y</span> to include it unless you know your applications do not use these libraries.</p>
<pre>
Do you want to include ZCOBREL (Y/N) : <span class="bold">Y</span>
</pre>
<p><code>NLDLIB</code> searches for <code>ZCOBREL</code> locations and displays them.</p>
<pre>
Looking for ZCOBREL ..
$SYSTEM.SYS02.ZCOBREL $SYSTEM.SYS03.ZCOBREL $SYSTEM.SYS04.ZCOBREL
$DATA09.R8107G09.ZCOBREL $DATA09.R8108D46.ZCOBREL
</pre></li>
<li>
<p>You are asked to enter the location of the <code>ZCOBREL</code> to use. If you plan to use COBOL, enter a location; otherwise, you can press <span class="bold">Enter</span> to bypass this prompt.</p>
<pre>
Enter location of ZCOBREL :<span class="bold"> $SYSTEM.SYS03.ZCOBREL</span>
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>If you omit a <code>ZCOBREL</code> location, you are prompted to confirm your choice:</p>
<pre>
Omit ZCOBREL (y/n):Y
</pre></div>
<p><code>NLDLIB</code> builds the <code>GGSLIBR</code> and <code>GGSSRL</code> libraries, displaying a series of informational messages and the names of the files that were created.</p>
</li>
<li>
<p>When the libraries are built, add the new relinkable library to your program object using the <code>LINK PROGRAMS</code> command in GGSCI. You could also run the program as follows:</p>
<pre>
TACL&gt; RUN <span class="variable">your_program_name</span> /LIB <span class="variable">new_library_name</span>/
</pre></li>
</ol>
<p>You can also run the <code>NLDLIB</code> macro from the TACL prompt providing arguments in the command line. This is not recommended, however, as it may produce unexpected results. Interactive responses help ensure the appropriate options for your environment.</p>
</div>
<!-- class="sect3" -->
<a id="GNSAD318"></a>
<div class="sect3"><a id="sthref146"></a>
<h4 class="sect3"><span class="secnum">7.3.6.2</span> Removing a Library</h4>
<p>To remove the Oracle GoldenGate library from your application, run your program with an empty <code>LIB</code> parameter as follows:</p>
<pre>
TACL&gt; RUN <span class="variable">your_program_name</span> /LIB/
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="GNSAD319"></a>
<div class="sect2"><a id="sthref147"></a>
<h3 class="sect2"><span class="secnum">7.3.7</span> Activating Authorization of Bound Libraries</h3>
<p>You can add the Oracle GoldenGate SFGEXIT module to Safeguard to produce a warning for any program that opens non-audited files for update and does not have the Oracle GoldenGate intercept library bound to it. See <a href="configuring.htm#i945282">"Authentication for Bound Programs"</a> for more information.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>Opens on SQL tables, unstructured files, and TMF protected files are always ignored. Opens from processes on remote nodes are also ignored.</p>
</div>
<p>You can enable the authorization event and supply optional <code>PARAM</code>-<code>TEXT</code> arguments when the program is added.</p>
<p>The syntax for the <code>ADD</code> within Safecom is:</p>
<pre>
=ADD EVENT-EXIT-PROCESS OPENCHECK PROG <span class="variable">$vol.subvol.</span>SFGEXIT
[, PNAME <span class="variable">process_name</span>]
[, ENABLE-AUTHORIZATION-EVENT {ON | OFF}]
[, ENABLE {ON | OFF}]
[, PARAM-TEXT
[, DETAIL] |
[, OSOPENSUMMARY| OSOPENDETAIL | NOOSOPENS]
[, AUDCFG <span class="variable">filename</span> [REJECT]]
]
</pre>
<div class="inftblhruleinformal">
<table class="cellalignment32" summary="This table summarizes the options for adding authorization of bound libraries." dir="ltr">
<thead>
<tr class="cellalignment26">
<th class="cellalignment33" id="r1c1-t8">Option</th>
<th class="cellalignment33" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment26">
<td class="cellalignment34" id="r2c1-t8" headers="r1c1-t8">
<pre>
ENABLE-AUTHORIZATION-EVENT ON | OFF
</pre></td>
<td class="cellalignment34" headers="r2c1-t8 r1c2-t8">
<p>You can set the authorization event to <code>ON</code> during the <code>ADD</code> of the event. If it is not set, <code>ENABLE-AUTHORIZATION-EVENT</code> will default to <code>OFF.</code> You can set it to <code>ON</code> after the <code>ADD</code> by using an <code>ALTER</code> command.</p>
</td>
</tr>
<tr class="cellalignment26">
<td class="cellalignment34" id="r3c1-t8" headers="r1c1-t8">
<pre>
ENABLE ON | OFF
</pre></td>
<td class="cellalignment34" headers="r3c1-t8 r1c2-t8">
<p>You can also set <code>ENABLE</code> to <code>ON i</code>f <code>ENABLE-AUTHORIZATION-EVENT</code> is set to <code>ON</code> during the <code>ADD.</code> If not set, <code>ENABLE</code> will default to <code>OFF.</code> You can set <code>ENABLE</code> to <code>ON</code> using the <code>ALTER</code> command.</p>
</td>
</tr>
<tr class="cellalignment26">
<td class="cellalignment34" id="r4c1-t8" headers="r1c1-t8">
<pre>
PNAME <span class="variable">process_name</span>
</pre></td>
<td class="cellalignment34" headers="r4c1-t8 r1c2-t8">
<p>You can optionally enter a logical process name.</p>
</td>
</tr>
<tr class="cellalignment26">
<td class="cellalignment34" id="r5c1-t8" headers="r1c1-t8">
<pre>
PARAM-TEXT
</pre></td>
<td class="cellalignment34" headers="r5c1-t8 r1c2-t8">
<p><code>PARAM-TEXT</code> has the following options:</p>
<ul>
<li>
<p><code>DETAIL</code></p>
<p><code>DETAIL</code> specifies that a message should be logged to EMS every time a user application that is not bound to the Oracle GoldenGate library opens a file for update. The default is to display a message only the first time the application opens a file for update.</p>
<p><span class="bold">Note:</span> Use the <code>DETAIL</code> option with care. It may produce a large number of EMS messages due to <code>OPENS</code> for alternate key files and partitions.</p>
<p><code>OSOPENDETAIL | OSOPENSUMMARY | NOOSOPENS</code></p>
<p><code>OSOPENDETAIL</code> and <code>OSOPENSUMMARY</code> both specify that messages will be logged for OS processes (programs started from <code>$SYSTEM.SYSTEM</code> and <code>$SYSTEM.SYSnn</code>). <code>NOOSOPENS</code> will not log warnings for this type of process. The default is <code>NOOSOPENS.</code></p>
<p><code>OSOPENDETAIL</code> further specifies that messages should be logged to EMS every time a process that is not bound to the Oracle GoldenGate library opens a file for update. <code>OSOPENSUMMARY</code> displays a message only the first time the process opens a file for update.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment26">
<td class="cellalignment34" id="r6c1-t8" headers="r1c1-t8">
<p><code>AUDCFG</code> <span class="variable">filename</span> <code>[REJECT]</code></p>
</td>
<td class="cellalignment34" headers="r6c1-t8 r1c2-t8">
<p>Identifies the Logger audit configuration file as <span class="variable">filename</span>. When this option is used, only files matching an entry in the indicated <code>AUDCFG</code> file are acted upon. If a file not in the <code>AUDCFG</code> is opened for update, <code>SFGEXIT</code> replies <code>NO RECORD</code> without applying any processing.</p>
<p>If <code>REJECT</code> is specified, an open will be refused when a program does not have GGSLIB bound in and it tries to open a file listed in <code>AUDCFG</code>.</p>
<p><span class="bold">Note:</span> Using wildcards in the file list may generate an unexpected number 48 errors if it causes the tracking of files that the application would not typically open.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblhruleinformal" -->
<a id="GNSAD320"></a>
<div class="sect3"><a id="sthref148"></a>
<h4 class="sect3"><span class="secnum">7.3.7.1</span> Managing the Authorization Event</h4>
<p>Perform the following steps to manage the authorization event:</p>
</div>
<!-- class="sect3" -->
<a id="GNSAD321"></a>
<div class="sect3"><a id="sthref149"></a>
<h4 class="sect3"><span class="secnum">7.3.7.2</span> Adding and Verifying the Authorization Event</h4>
<p>The following steps show examples that add, set options, check the status, and remove the authorization event.</p>
<ol>
<li>
<p>To add the authorization program, access SAFECOM and enter the <code>ADD</code> statement as shown in the following example.</p>
<pre>
&gt;SAFECOM
=ADD EVENT-EXIT-PROCESS OPENCHECK PROG $DATA1.GGS.SFGEXIT, PNAME $ZSEEP, ENABLE-AUTHORIZATION-EVENT ON, ENABLE ON, PARAM-TEXT DETAIL
</pre></li>
<li>
<p>The <code>INFO</code> command can be used to verify the addition, check the location of the program, check the status of the event, and review the <code>PARAM-TEXT</code> options:</p>
<pre>
=INFO EVENT-EXIT-PROCESS OPENCHECK
EVENT-EXIT-PROCESSOPENCHECK
ENABLED = ON
RESPONSE-TIMEOUT =5 SECONDS
ENABLE-AUTHORIZATION-EVENT= ON
ENABLE-PASSWORD-EVENT = OFF
<span class="bold">PROG= $DATA1.GGS.SFGEXIT</span>
LIB = * NONE *
PNAME = $ZSEEP
SWAP= * NONE *
CPU =2
PRI =155
PARAM-TEXT = DETAIL
</pre></li>
<li>
<p>To remove the <code>OPENCHECK</code> event, you must first turn off the activation with the <code>ENABLE</code> <code>OFF</code>.</p>
<pre>
=ALTER EVENT-EXIT-PROCESS OPENCHECK, ENABLE OFF
=DELETE EVENT-EXIT-PROCESS OPENCHECK
</pre></li>
<li>
<p>To exit SAFECOM:</p>
<pre>
=EXIT
</pre></li>
</ol>
</div>
<!-- class="sect3" -->
<a id="GNSAD322"></a>
<div class="sect3"><a id="sthref150"></a>
<h4 class="sect3"><span class="secnum">7.3.7.3</span> Using Different PARAM-TEXT Options</h4>
<p>Other examples of setting options when adding the authorization event are shown below.</p>
<ol>
<li>
<p>The following adds an <code>OPENCHECK</code> event that will issue a warning each time the application opens a file that does not have the intercept library bound. It also issue warnings for each open for programs that are run from <code>$SYSTEM.SYSTEM</code> <code>and $SYSTEM.SYSnn</code>.</p>
<pre>
=ADD EVENT-EXIT-PROCESS OPENCHECK PROG $DATA1.GGS.SFGEXIT, PARAM-TEXT DETAIL, OSOPENSDETAIL
</pre></li>
<li>
<p>The following adds an <code>OPENCHECK</code> event that will issue only one warning for each file without an intercept library, evaluate only files listed in the audit configuration file <code>$DATA1.GGS.AUDCFG</code>, and not include programs that are run from $<code>SYSTEM</code>.<code>SYSTEM</code> and <code>$SYSTEM.SYSnn.</code></p>
<pre>
=ADD EVENT-EXIT-PROCESS OPENCHECK PROG $DATA1.GGS.SFGEXIT, PARAM-TEXT AUDCFG $DATA1.GGS.AUDCFG
</pre></li>
</ol>
</div>
<!-- class="sect3" -->
<a id="GNSAD323"></a>
<div class="sect3"><a id="sthref151"></a>
<h4 class="sect3"><span class="secnum">7.3.7.4</span> Getting the Current Status of the Authorization Event</h4>
<p>Additional examples of monitoring the process are shown below.</p>
<ol>
<li>
<p>The following <code>SEND</code> <span class="variable">process</span> <code>GETSTATS</code> command retrieves statistics from a running authorization event.</p>
<pre>
GGSCI (\NY) 2445&gt; SEND $ZSEEP, GETSTATS

\NY.$ZSEEP Stats at 2013-08-15 15:14:01.770337
Started 2013-08-15 15:07:47.444913 CPUTime 0:00:00.007707  (PerOp 31)
Audcfg \NY.$data01.zlogdat.audc  fgModtime 2013-08-05 12:10:00.845007
PoolGets            7    PoolPuts         0
GGSRequests        10    Other            0
  SFGRequests     205    Total          245
  Access          205    RemoteNode       0
  NonDisk          50    SQL              0
  Open            154    Readonly       129
  Audcfg Check      2    Found            2    Excluded      0
  Diskfiles       154    Unstruct         0
  TMF Audited       0    SQL Tables       0
  ProcessInfo       0    Cached           0    Errors        0
  FileInfo          2    Cached           0    Errors        2
  GGSProgs          0    SystemProgs      0
  Reported          0    OpensDenied      0
Hash Stats
  Buckets        7919
  Entries           2    Lookups          2
  Collisions        2    Depth            0
</pre></li>
<li>
<p>The following <code>SEND</code> <span class="variable">process</span> <code>PROCESSINFO</code> command retrieves information on the process.</p>
<pre>
GGSCI (\NY)&gt; SEND $zseep, PROCESSINFO 3,1192

3,1192 \NY.$QA01.BV95014.REPLICAT GGS Code Has Lib
</pre></li>
<li>
<p>The following example errors were retrieved by the <code>SEND</code> <span class="variable">process</span> <code>GETERRORLIST</code> command.</p>
<pre>
2013-08-15 15:12:49.911382
 FILE_GETINFOLISTBYNAME_ error 11 on \NY.$SYSTEM.SYS07.INSPLOG
2013-08-15 15:13:52.254180
 FILE_GETINFOLISTBYNAME_ error 11 on \NY.$DATA01.QA.TESTFILE
</pre></li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i951994"></a><a id="GNSAD324"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">7.4</span> Working with Parameter Files</h2>
<p>Parameters give you complete control over all aspects of Oracle GoldenGate, such as:</p>
<ul>
<li>
<p>Data selection, mapping, and transformation</p>
</li>
<li>
<p>Replication</p>
</li>
<li>
<p>Error resolution</p>
</li>
<li>
<p>Logging</p>
</li>
<li>
<p>Status and error reporting</p>
</li>
<li>
<p>System resource usage</p>
</li>
<li>
<p>Startup and run-time activities</p>
</li>
</ul>
<p>There can be only one active parameter file for each Manager, Extract, or Replicat. There are two types of parameters: global and file-specific.</p>
<ul>
<li>
<p>Global parameters apply to all tables specified in the parameter file for synchronization. Some global parameters affect processing while others affect such things as memory utilization.</p>
</li>
<li>
<p>File or table-specific parameters control processing for tables specified with a <code>FILE</code>, <code>TABLE</code> or <code>MAP</code> statement. Table-specific parameters enable you to designate one set of processing rules for some tables, while designating other rules for other tables. There are two implementations for file-specific parameters:</p>
<ul>
<li>
<p>Toggling the parameter on and off around one or more <code>FILE</code>, <code>TABLE</code> or <code>MAP</code> statements.</p>
</li>
<li>
<p>Adding the parameter within <code>MAP</code> statement so it applies only to that table or file.</p>
</li>
</ul>
</li>
</ul>
<p>Some parameters, such as <code>HANDLECOLLISIONS</code>/<code>NOHANDLECOLLISIONS</code> can be included in a <code>MAP</code> statement or toggled <code>ON</code> and <code>OFF</code>. Others can be implemented using only one of the methods. For further details, see <span class="italic"><span class="italic">Reference for Oracle GoldenGate on HP NonStop Guardian</span></span>.</p>
<p>The ordering of parameters in a parameter file can be important.</p>
<ul>
<li>
<p>A global parameter can appear anywhere in the parameter file, and it should only be listed in the file once. When listed more than once, only the <span class="italic">last</span> instance of the parameter is active. All other instances are ignored.</p>
</li>
<li>
<p>Table-specific parameters take effect in the order that each parameter is listed in the file.</p>
</li>
</ul>
<div class="tblhruleformal">
<p class="titleintable"><a id="GNSAD325"></a><a id="sthref152"></a><a id="sthref153"></a>Table 7-1 Basic Extract and Replicat Parameter Files</p>
<table class="cellalignment32" title="Basic Extract and Replicat Parameter Files " summary="This table lists sample Extract and Replicat parameter files." dir="ltr">
<thead>
<tr class="cellalignment26">
<th class="cellalignment33" id="r1c1-t9">Sample Extract parameter file</th>
<th class="cellalignment33" id="r1c2-t9">Sample Replicat parameter file</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment26">
<td class="cellalignment34" id="r2c1-t9" headers="r1c1-t9">
<pre>
EXTRACT NYTOLA
DISCARDFILE =DISCARD_FILE, PURGE
EXTTRAIL $DATA1.EXTDAT.XX
FILE $DATA2.FINANCE.ACCOUNTS;
</pre></td>
<td class="cellalignment34" headers="r2c1-t9 r1c2-t9">
<pre>
REPLICAT NYTOLA
DISCARDFILE =$DATA.GGSDISC.NYTOLA, PURGE
ASSUMETARGETDEFS
MAP $DATA2.FINANCE.ACCOUNT,
TARGET $BACK.FINANCE.ACCOUNTS;
</pre></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<a id="i951813"></a><a id="GNSAD326"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">7.4.1</span> Creating a Parameter File</h3>
<p>From the subvolume where Oracle GoldenGate is installed, create a parameter file using the NonStop text editor. The name of the parameter file is usually the same as the process group name. For example, if you created the Extract group <code>ADD EXTRACT NYTOLA</code>, you would create your parameter file by entering <code>TEDIT PARAMS NYTOLA</code>.</p>
<p class="orderedlisttitle">To create a parameter file through GGSCI&nbsp;</p>
<ol>
<li>
<p>From the Oracle GoldenGate installation location, run the GGSCI command-line user interface.</p>
</li>
<li>
<p>In GGSCI, issue the following command to open the default text editor.</p>
<pre>
GGSCI&gt; EDIT PARAMS <span class="variable">group_name</span>
</pre>
<p>Where:</p>
<p><span class="variable">group_name</span> is either <code>MGRPARM</code> (for the Manager process), <code>LOGPARM,</code> or the name of the Extract or Replicat group for which the file is being created. The name of an Extract or Replicat parameter file must match that of its process group.</p>
<p>Examples:</p>
<ul>
<li>
<p>The following creates or edits the parameter file for an Extract group named <code>EXTORA</code>.</p>
<pre>
GGSCI&gt; EDIT PARAMS EXTORA
</pre></li>
<li>
<p>The following creates or edits the parameter file for the Manager process.</p>
<pre>
GGSCI&gt; EDIT PARAMS MGRPARM
</pre></li>
<li>
<p>The following creates or edits the parameter file for the Manager process.</p>
<pre>
GGSCI&gt; EDIT PARAMS LOGPARM
</pre></li>
</ul>
</li>
<li>
<p>Using the editing functions of the editor, enter as many comment lines as you want to describe this file, making certain that each line is commented out by two hyphens (--). As an alternative, you can use the <code>COMMENT</code> parameter, which causes everything on the same line as the <code>COMMENT</code> parameter to be ignored. The syntax for <code>COMMENT</code> is:</p>
<pre>
COMMENT <span class="variable">comment_text</span>
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>Do not put a dash or pound symbol before the <code>COMMENT</code> keyword. Do not use <code>COMMENT</code> if any column names in the tables contain the word &rdquo;comment.&rdquo; Instead, use double hyphens (--).</p>
</div>
</li>
<li>
<p>On non-commented lines, enter the parameters for your synchronization configuration, starting a new line for each parameter statement.</p>
<p>For parameters that accept table names, you can use an asterisk (*) wildcard to match any number of characters.</p>
<p>Parameters have the following general syntax:</p>
<pre>
<span class="variable">parameter</span> <span class="variable">argument</span> [, <span class="variable">option</span>] [&amp;]
</pre>
<p>Where:</p>
<ul>
<li>
<p><span class="variable">parameter</span> is the parameter name.</p>
</li>
<li>
<p><span class="variable">argument</span> is a required argument for the parameter. Some parameters take arguments, while others do not. Separate all arguments with commas, as in the following example:</p>
<pre>
USERID ggs, PASSWORD ggs123
RMTHOST sysb, MGRPORT 8040
RMTFILE $DATA05.GGSDAT.C1, PURGE
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>Use a maximum of six characters to name any volume that identifies files or tables in parameter files. <code>$DATA05</code> is supported, but <code>$DATA011</code> is not.</p>
</div>
</li>
<li>
<p><span class="variable">option</span> is an optional argument.</p>
</li>
<li>
<p><code>&amp;</code> enables you to continue a parameter's arguments on another line. Place it at the end of the line to be continued.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>Ampersands (<code>&amp;</code>) are not always required to span more than one line, but it is a good practice to use ampersands when:</p>
<ul>
<li>
<p>A parameter is not terminated by a semicolon and the line extends beyond 79 characters</p>
</li>
<li>
<p>A line for any of the options used for the parameter extend beyond 79 characters.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Save and close the file.</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="i934613"></a><a id="GNSAD327"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">7.4.2</span> Storing Parameter Files</h3>
<p>By default, parameter files are stored in the <code>GGSPARM</code> subvolume. If you are not going to use the default location, create the new location before starting Oracle GoldenGate. You can change this default location using an <code>ADD DEFINE</code> parameter in the <code>GLOBALS</code> parameter file, such as the one in the following example.</p>
<pre>
TACL&gt; ADD DEFINE =GGS_PARAMS, CLASS DEFAULTS, VOLUME $VOL.SUBVOL
</pre>
<p>Once paired with a process, a parameter file must remain in its original location for Oracle GoldenGate to operate properly.</p>
</div>
<!-- class="sect2" -->
<a id="GNSAD328"></a>
<div class="sect2"><a id="sthref155"></a>
<h3 class="sect2"><span class="secnum">7.4.3</span> Viewing a Parameter File</h3>
<p>You can view a parameter file by issuing the GGSCI <code>VIEW PARAMS</code> command.</p>
<pre>
VIEW PARAMS <span class="variable">filename</span>
</pre>
<p><code>VIEW PARAMS</code> displays the file.</p>
<p><a href="#BCGIDGHD">Table 7-2</a> summarizes the various ways in which you can scroll through its contents.</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="GNSAD329"></a><a id="sthref156"></a><a id="BCGIDGHD"></a>Table 7-2 Parameter File Scrolling Commands</p>
<table class="cellalignment32" title="Parameter File Scrolling Commands " summary="This table lists the Scrolling commands and their descriptions." dir="ltr">
<thead>
<tr class="cellalignment26">
<th class="cellalignment33" id="r1c1-t13">Command</th>
<th class="cellalignment33" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment26">
<td class="cellalignment34" id="r2c1-t13" headers="r1c1-t13">
<pre>
<span class="variable">return</span>, n
</pre></td>
<td class="cellalignment34" headers="r2c1-t13 r1c2-t13">
<p>Next page</p>
</td>
</tr>
<tr class="cellalignment26">
<td class="cellalignment34" id="r3c1-t13" headers="r1c1-t13">
<pre>
/<span class="variable">string</span>
</pre></td>
<td class="cellalignment34" headers="r3c1-t13 r1c2-t13">
<p>Search for next occurrence of <span class="variable">string</span> in file</p>
</td>
</tr>
<tr class="cellalignment26">
<td class="cellalignment34" id="r4c1-t13" headers="r1c1-t13">
<pre>
<span class="variable">number</span>
</pre></td>
<td class="cellalignment34" headers="r4c1-t13 r1c2-t13">
<p>Go to line indicated by <span class="variable">number</span></p>
</td>
</tr>
<tr class="cellalignment26">
<td class="cellalignment34" id="r5c1-t13" headers="r1c1-t13">
<pre>
l
</pre></td>
<td class="cellalignment34" headers="r5c1-t13 r1c2-t13">
<p>Go to last page of file</p>
</td>
</tr>
<tr class="cellalignment26">
<td class="cellalignment34" id="r6c1-t13" headers="r1c1-t13">
<pre>
b
</pre></td>
<td class="cellalignment34" headers="r6c1-t13 r1c2-t13">
<p>Go backwards one page in file</p>
</td>
</tr>
<tr class="cellalignment26">
<td class="cellalignment34" id="r7c1-t13" headers="r1c1-t13">
<pre>
q
</pre></td>
<td class="cellalignment34" headers="r7c1-t13 r1c2-t13">
<p>Quit display</p>
</td>
</tr>
<tr class="cellalignment26">
<td class="cellalignment34" id="r8c1-t13" headers="r1c1-t13">
<pre>
h
</pre></td>
<td class="cellalignment34" headers="r8c1-t13 r1c2-t13">
<p>Help</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p><span class="italic"><span class="italic">Reference for Oracle GoldenGate on HP NonStop Guardian</span></span> has a complete list of commands.</p>
</div>
<!-- class="sect2" -->
<a id="GNSAD330"></a>
<div class="sect2"><a id="sthref157"></a>
<h3 class="sect2"><span class="secnum">7.4.4</span> Changing a Parameter File</h3>
<p>You make changes to an Oracle GoldenGate NonStop process parameter file by editing it using the NonStop text editor or some other compatible editor.</p>
<p>To ensure that all changes you make to the Manager parameter file are activated you must stop and restart the Manager process. To change an Extract or Replicat parameter file, make your changes, then verify them with the <code>CHECKPARAMS</code> parameter as described in <a href="#i934686">"Verifying a Parameter File"</a>.</p>
</div>
<!-- class="sect2" -->
<a id="i958680"></a><a id="GNSAD331"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">7.4.5</span> Using OBEY and Macros in Parameters</h3>
<p>You can leverage existing parameter files through the Oracle GoldenGate macros and the <code>OBEY</code> command. To simplify the process, you can use Oracle GoldenGate macros for a variety of operations, including implementing multiple uses of a statement, consolidating multiple commands, or invoking other macros. You also can use <code>OBEY</code> to direct Oracle GoldenGate to retrieve parameter settings from another parameter file. Upon encountering <code>OBEY</code>, Oracle GoldenGate processes the parameters from the other file and then returns to the current file to process any remaining instructions.</p>
<p>See <a href="customops.htm#i969738">"Configuring Custom Operations"</a> for more information about using macros and <code>OBEY</code> files.</p>
</div>
<!-- class="sect2" -->
<a id="i934686"></a><a id="GNSAD332"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">7.4.6</span> Verifying a Parameter File</h3>
<p>Use the following procedure to confirm that the syntax in an Extract or Replicat parameter file is correct:</p>
<ol>
<li>
<p>Include <code>CHECKPARAMS</code> in the parameter file.</p>
</li>
<li>
<p>Start the associated process.</p>
</li>
<li>
<p>Oracle GoldenGate audits the syntax and writes the results to the report file or screen. View the report by issuing the following:</p>
<pre>
GGSCI&gt; INFO <span class="variable">process_type</span> <span class="variable">group_name</span>
</pre>
<p>For example:</p>
<pre>
GGSCI&gt; INFO REPLICAT REPCUST
</pre>
<ul>
<li>
<p>If the syntax is correct, remove the <code>CHECKPARAMS</code> parameter and start the process again to begin processing.</p>
</li>
<li>
<p>If the syntax is wrong, edit the file to correct the syntax based on the report's findings, and then start the process again.</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="GNSAD333"></a>
<div class="sect2"><a id="sthref158"></a>
<h3 class="sect2"><span class="secnum">7.4.7</span> Substituting a Parameter</h3>
<p>It is possible to assign different values to a parameter within a parameter file. One-off change synchronization runs that require specific parameters can process with the same parameter file as your default change synchronization routine; any difference in parameter requirements is handled by parameter substitution. This minimizes your need for multiple parameter files.</p>
<p>To include a run-time parameter within the parameter file, precede any intended parameter name with a question mark. Then, before running the Extract process, use the <code>TACL PARAMS</code> command to pass the value.</p>
<div class="example">
<p class="titleinexample"><a id="GNSAD334"></a><a id="sthref159"></a>Example 7-3 Parameter File Contents</p>
<pre>
SOURCEISFILE
EXTFILE ?extfile
TABLE ?tabname, WHERE (REGION = "?region");
</pre></div>
<!-- class="example" -->
<p>When you are ready to run your special data run, specify the following from your TACL prompt:</p>
<pre>
TACL&gt; PARAM EXTFILE $DATA2.GGS.EXTFILE
TACL&gt; PARAM TABNAME $DATA3.MYDB.ACCOUNTS
TACL&gt; PARAM REGION EAST
TACL&gt; RUN EXTRACT /IN PARMFL/
</pre>
<p>Extract will interpret the parameter as follows:</p>
<pre>
SOURCEISFILE
EXTFILE $DATA2.GGS.EXTFILE
TABLE $DATA3.MYDB.ACCOUNTS, WHERE (REGION = "EAST");
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>A question mark can also be used as a wildcard so care should be exercised in using <code>PARAMS</code> and wildcards together. The program will process parameter substitutions first, before evaluating wildcards. It cannot distinguish, however, between <code>?DATA</code> as a parameter and <code>?DATA</code> as a wildcard, so it is important that the user selects parameter names that are never used as part of an actual file name.</p>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment25">
<tr>
<td class="cellalignment34">
<table class="cellalignment30">
<tr>
<td class="cellalignment29"><a href="managerandcollector.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment29"><a href="customops.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1995, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment36">
<table class="cellalignment28">
<tr>
<td class="cellalignment29"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment29"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
