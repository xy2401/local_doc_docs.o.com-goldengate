<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>GGSCI Commands</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="description" content="The Oracle GoldenGate Command Interface (GGSCI) is the command-line interface between users and Oracle GoldenGate functional components. This chapter describes the purpose and syntax for Oracle GoldenGate GGSCI commands used on the HP NonStop Guardian platform." />
<meta name="dcterms.created" content="2014-08-05T11:22:38Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="GoldenGate for Mainframe Reference Guide for HP NonStop (Guardian)" />
<meta name="dcterms.identifier" content="E28905-01" />
<meta name="dcterms.isVersionOf" content="GNSRF" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1995, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="preface.htm" title="Previous" type="text/html" />
<link rel="Next" href="gg_parameters.htm" title="Next" type="text/html" />
<link rel="alternate" href="E28905-01.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/fonts.css">
<link rel="stylesheet" href="../dcommon/css/foundation.css">
<link rel="stylesheet" href="../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">5/13</span> <!-- End Header --><a id="sthref11"></a>
<h1 class="chapter"><span class="secnum">1</span> GGSCI Commands</h1>
<p>The Oracle GoldenGate Command Interface (GGSCI) is the command-line interface between users and Oracle GoldenGate functional components. This chapter describes the purpose and syntax for Oracle GoldenGate <code>GGSCI</code> commands used on the HP NonStop Guardian platform.</p>
<p>The following table summarizes the functions that you can control with Oracle GoldenGate commands.</p>
<div class="inftblhruleinformal">
<table class="cellalignment20" title="Summary of functions controlled with Oracle GoldenGate commands" summary="This table gives a general description of the types of commands that control functions." dir="ltr">
<thead>
<tr class="cellalignment11">
<th class="cellalignment21" id="r1c1-t2">Command Group</th>
<th class="cellalignment21" id="r1c2-t2">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment11">
<td class="cellalignment17" id="r2c1-t2" headers="r1c1-t2">
<p><a href="#i1105171">Manager commands</a></p>
</td>
<td class="cellalignment17" headers="r2c1-t2 r1c2-t2">
<p>Start and stop the Manager program and determine whether it is running.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r3c1-t2" headers="r1c1-t2">
<p><a href="#i1127536">Extract commands</a></p>
</td>
<td class="cellalignment17" headers="r3c1-t2 r1c2-t2">
<p>Establish Extract checkpoints and manage and monitor Extract processing.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r4c1-t2" headers="r1c1-t2">
<p><a href="#i1105981">Replicat commands</a></p>
</td>
<td class="cellalignment17" headers="r4c1-t2 r1c2-t2">
<p>Establish Replicat checkpoints. Manage and monitor Replicat processing.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r5c1-t2" headers="r1c1-t2">
<p><a href="#i1108416">ER commands</a></p>
</td>
<td class="cellalignment17" headers="r5c1-t2 r1c2-t2">
<p>Allow you to manage Extract and Replicat groups as a unit with a single command. The commands you can use are the same <code>INFO</code>, <code>KILL</code>, <code>SEND</code>, <code>START</code>, <code>STAT</code>, and <code>STATUS</code> commands you would use for the Extract or Replicat.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r6c1-t2" headers="r1c1-t2">
<p><a href="#i1107063">Logger commands</a></p>
</td>
<td class="cellalignment17" headers="r6c1-t2 r1c2-t2">
<p>Add and alter Logger configuration and manage Logger processes.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r7c1-t2" headers="r1c1-t2">
<p><a href="#i1118511">Trail commands</a></p>
</td>
<td class="cellalignment17" headers="r7c1-t2 r1c2-t2">
<p>Create and manage Oracle GoldenGate trails.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r8c1-t2" headers="r1c1-t2">
<p><a href="#i1107921">Database commands</a></p>
</td>
<td class="cellalignment17" headers="r8c1-t2 r1c2-t2">
<p>Supply information about data definitions and tables and encrypt logon password.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r9c1-t2" headers="r1c1-t2">
<p><a href="#i1107835">Audit trail commands</a></p>
</td>
<td class="cellalignment17" headers="r9c1-t2 r1c2-t2">
<p>Determine audit trail management parameters and whether audit trail files are still required.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r10c1-t2" headers="r1c1-t2">
<p><a href="#i1123088">Remote checkpoint commands</a></p>
</td>
<td class="cellalignment17" headers="r10c1-t2 r1c2-t2">
<p>Establish remote checkpoints that Manager checks before purging data that is used by Replicat processes.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r11c1-t2" headers="r1c1-t2">
<p><a href="#i1110018">TMF commands</a></p>
</td>
<td class="cellalignment17" headers="r11c1-t2 r1c2-t2">
<p>Manage TMF dump information.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r12c1-t2" headers="r1c1-t2">
<p><a href="#i1109582">Coordinator commands</a></p>
</td>
<td class="cellalignment17" headers="r12c1-t2 r1c2-t2">
<p>Start and stop the Coordinator program, manage and monitor Coordinator processing.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r13c1-t2" headers="r1c1-t2">
<p><a href="#i1109262">Process commands</a></p>
</td>
<td class="cellalignment17" headers="r13c1-t2 r1c2-t2">
<p>Enable you to send commands to a process name instead of a group name.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r14c1-t2" headers="r1c1-t2">
<p><a href="#i1100196">Marker commands</a></p>
</td>
<td class="cellalignment17" headers="r14c1-t2 r1c2-t2">
<p>Enable you to insert application-specific markers into audit trails or Logger trails to identify critical points in Extract and Replicat processing.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r15c1-t2" headers="r1c1-t2">
<p><a href="#i1107743">Programs commands</a></p>
</td>
<td class="cellalignment17" headers="r15c1-t2 r1c2-t2">
<p>Bind <code>GGSLIB</code> intercept library into application programs for non-TMF audited database extraction.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r16c1-t2" headers="r1c1-t2">
<p><a href="#i1101589">Syncfile commands</a></p>
</td>
<td class="cellalignment17" headers="r16c1-t2 r1c2-t2">
<p>Set up and manage Syncfile processes for duplicating files from one location to another.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r17c1-t2" headers="r1c1-t2">
<p><a href="#i1109912">Report commands</a></p>
</td>
<td class="cellalignment17" headers="r17c1-t2 r1c2-t2">
<p>Allow you to scroll through Extract and Replicat processing reports.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r18c1-t2" headers="r1c1-t2">
<p><a href="#i1101833">Miscellaneous commands</a></p>
</td>
<td class="cellalignment17" headers="r18c1-t2 r1c2-t2">
<p>Control various other aspects of Oracle GoldenGate.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblhruleinformal" -->
<a id="i1105171"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">Manager commands</h2>
<p>The Manager module must be running for other Oracle GoldenGate components to operate. The process ensures proper startup, monitoring, and other activities. Once you start the Manager process, you can:</p>
<ul>
<li>
<p>Determine whether the Manager process is running</p>
</li>
<li>
<p>Retrieve information about the running Manager process</p>
</li>
<li>
<p>Stop the process</p>
</li>
</ul>
<p>The Manager process (<code>$GGMGR</code>), runs as a NonStop process pair that includes the process (<code>$GGMGR</code>) and a child process (<code>$GGMGX</code>).</p>
<p>You can change the default process name from <code>$GGMGR</code> to another name. To change this and other default settings, see <a class="olink GNSAD" href="../GNSAD/toc.htm"><span class="italic">Administering Oracle GoldenGate for HP NonStop (Guardian)</span></a>.</p>
<hr />
<a id="sthref12"></a>
<h3 class="refsect2">INFO MANAGER</h3>
<p>Use <code>INFO MANAGER</code> to determine whether the Manager process is running. If Manager is running, the process name, port number, TCPIP process, and IP address may be displayed depending on the parameters set for Manager.</p>
<p class="titleinrefsubsect"><a id="sthref13"></a>Syntax</p>
<pre>
INFO MANAGER
</pre>
<p class="titleinrefsubsect"><a id="sthref14"></a>Example</p>
<p>The following examples show some of the different displays for the <code>INFO MANAGER</code> command.</p>
<dl>
<dd><a id="sthref15"></a></dd>
<dt class="seghead">Example 1&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>If the IP port is not configured, the display will be similar to:</p>
<pre>
Manager process $GGMGR is running.
(IP port not configured).
</pre></dd>
<dd><a id="sthref16"></a></dd>
<dt class="seghead">Example 2&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>If the TCPIP process name and port are configured, the display will be similar to:</p>
<pre>
Manager process $GGMGR is running 
(Process \NY.$ZTC1, port 7830).
</pre></dd>
<dd><a id="sthref17"></a></dd>
<dt class="seghead">Example 3&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>If the IP port, TCPIP process name, and <code>IPINTERFACE</code> are all configured, the display will be similar to one of the following:</p>
<pre>
Manager process $GGMGR is running 
(Process \NY.$ZTC1, IP 192.0.2.1 port 7830).
</pre>
<pre>
Manager process $GGMGR is running 
(Process \NY.$ZTC1, IP 2001:db8:2010:5040:4fff:ffff:ffff:28 port 7830).
</pre></dd>
</dl>
<hr />
<a id="sthref18"></a>
<h3 class="refsect2">SEND MANAGER</h3>
<p>Use <code>SEND MANAGER</code> to communicate with the current Manager process.</p>
<p class="titleinrefsubsect"><a id="sthref19"></a>Syntax</p>
<pre>
SEND MANAGER 
{CHILDSTATUS | 
GETPORTINFO [DETAIL] | 
GETPURGEOLDEXTRACTS |
KILL <span class="codeinlineitalic">process_name</span>}
</pre>
<dl>
<dt><code>CHILDSTATUS</code></dt>
<dd>
<p>Displays information about all processes started by Manager.</p>
</dd>
<dt><code>GETPORTINFO [DETAIL]</code></dt>
<dd>
<p>Retrieves the status of ports in use. Also returns statistical information about port sessions.</p>
<p>Include <code>DETAIL</code> with <code>GETPORTINFO</code> to retrieve information about all dynamically allocated ports, regardless of whether they are in use, as in:</p>
<pre>
SEND MANAGER, GETPORTINFO DETAIL
</pre></dd>
<dt><code>GETPURGEOLDEXTRACTS</code></dt>
<dd>
<p>Displays information about trail maintenance rules set with the <code>PURGEOLDEXTRACTS</code> parameter in the Manager parameter file. For more information about <code>PURGEOLDEXTRACTS</code>, see <a href="gg_parameters.htm#i945178">"PRIORITY"</a>.</p>
</dd>
<dt><code>KILL</code> <code><span class="codeinlineitalic">process_name</span></code></dt>
<dd>
<p>Stops a process that was previously created by Manager. Manager returns an error if the process is not one it created.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref20"></a>Examples</p>
<dl>
<dd><a id="sthref21"></a></dd>
<dt class="seghead">Example 1&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p><code>SEND MANAGER CHILDSTATUS</code> returns a child process status similar to the following.</p>
<pre>
ID  Process         Retry   Retry Time         When added
--- --------------- ------- ----- ------------ -------------------
  3 \NY.$GGS03      0,0512      0 None         2012/08/16 14:39:07
</pre></dd>
<dd><a id="sthref22"></a></dd>
<dt class="seghead">Example 2&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p><code>SEND</code> <code>MANAGER</code> <code>GETPURGEOLDEXTRACTS</code> returns a report similar to the following:</p>
<pre>
PurgeOldExtracts Rules
Fileset                       MinHours  MinFiles     UseCP
$DATA04.GGSDAT.HT*                   0         1       Y
$DATA04.GGSDAT.ET*                   0         1       Y

Extract Trails
Filename                    Group    Oldest Seqno MinHours 
\NY.$DATA04.GGSDAT.ET       REPACL              0        0 
\NY.$DATA04.GGSDAT.HT       ACTHIST             0        0 
\NY.$DATA04.GGSDAT.LT       ACRLOG              0        0 
\NY.$DATA04.GGSLOG.LT       ACELOG              0        0 
</pre></dd>
</dl>
<hr />
<a id="sthref23"></a>
<h3 class="refsect2">START MANAGER</h3>
<p>Use <code>START</code> <code>MANAGER</code> to start the Manager process.</p>
<p class="titleinrefsubsect"><a id="sthref24"></a>Syntax</p>
<pre>
START MANAGER 
[, CPU <span class="codeinlineitalic">primary_cpu</span>]
[, BACKUPCPU <span class="codeinlineitalic">backup_cpu</span>] 
[, PRI <span class="codeinlineitalic">priority</span>]
</pre>
<dl>
<dt><code>CPU</code> <code><span class="codeinlineitalic">primary_cpu</span></code></dt>
<dd>
<p>The primary CPU name.</p>
</dd>
<dt><code>BACKUPCPU</code> <code><span class="codeinlineitalic">backup_cpu</span></code></dt>
<dd>
<p>The backup CPU name. If a backup CPU is specified in the Manager parameter file, it overrides any <code>START MANAGER</code> backup CPU specification.</p>
</dd>
<dt><code>PRI</code> <code><span class="codeinlineitalic">priority</span></code></dt>
<dd>
<p>Sets the NonStop priority of the process.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref25"></a>Example</p>
<pre>
 START MANAGER, CPU 1, BACKUPCPU 3, PRI 170
</pre>
<hr />
<a id="sthref26"></a>
<h3 class="refsect2">STATUS MANAGER</h3>
<p>Use <code>STATUS</code> <code>MANAGER</code> to determine whether the Manager process is running and to identify its characteristics.</p>
<p class="titleinrefsubsect"><a id="sthref27"></a>Syntax</p>
<pre>
STATUS MANAGER
</pre>
<p class="titleinrefsubsect"><a id="sthref28"></a>Example</p>
<p>The command <code>STATUS MANAGER</code> will display the Manager process name, the running process, and the port number as shown below.</p>
<pre>
Manager process $ACMGR is running (IP \NY.$ZTC1 port 7670)
</pre>
<p>If a specific IP address or DNS name has been assigned using <code>IPINTERFACE</code>, it will be included as shown below.</p>
<pre>
Manager process $ACMGR is running (IP \NY.$ZTC1 192.0.2.2 port 7670)
</pre>
<hr />
<a id="sthref29"></a>
<h3 class="refsect2">STOP MANAGER</h3>
<p>Use <code>STOP</code> <code>MANAGER</code> to stop the Manager process. You will be asked to confirm this command, since stopping Manager eliminates important activities. GGSCI logs <code>STOP MANAGER</code> commands to the Oracle GoldenGate event log.</p>
<p class="titleinrefsubsect"><a id="sthref30"></a>Syntax</p>
<pre>
STOP MANAGER [!]
</pre>
<dl>
<dt><code>!</code></dt>
<dd>
<p>Unless you specify the exclamation point (!), you must confirm this operation.</p>
</dd>
</dl>
</div>
<!-- class="refsect1" -->
<a id="i1127536"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">Extract commands</h2>
<p>Use Extract commands to create and manage Extract groups. The Extract process captures operations and sends the data to the target system. The Extract process maintains checkpoints to provide a starting point for subsequent runs, provides run history information, and displays the audit trails required for a given Extract group.</p>
<p>Process names, parameter files, and report files take system-assigned default values. Oracle GoldenGate Software recommends using the default names. If your installation requires different names see the <a class="olink GNSAD" href="../GNSAD/toc.htm"><span class="italic">Administering Oracle GoldenGate for HP NonStop (Guardian)</span></a>.</p>
<a id="i1105279"></a>
<hr />
<h3 class="refsect2">ADD EXTRACT</h3>
<p>Use <code>ADD EXTRACT</code> to add Extract groups, allowing change records to be processed from run to run without data loss.</p>
<p>Using <code>ADD EXTRACT</code> options you can perform the operations that are summarized in <a href="#CHDGEEGG">"ADD EXTRACT options summary"</a>.</p>
<p class="titleinrefsubsect"><a id="sthref31"></a>Syntax</p>
<pre>
ADD EXTRACT <span class="codeinlineitalic">group_name</span>
{
[, BEGIN <span class="codeinlineitalic">time</span> |, AUDSEQNO <span class="codeinlineitalic">seq_num</span>, AUDRBA <span class="codeinlineitalic">rba</span>] |
[[, EXTTRAILSOURCE <span class="codeinlineitalic">trail_name</span>
  {BEGIN <span class="codeinlineitalic">time</span> |, EXTSEQNO <span class="codeinlineitalic">seq_num</span>, EXTRBA <span class="codeinlineitalic">rba</span>}] |
[, LOGTRAILSOURCE <span class="codeinlineitalic">trail_name</span>
  {BEGIN <span class="codeinlineitalic">time</span> |, EXTSEQNO <span class="codeinlineitalic">seq_num</span>, EXTRBA <span class="codeinlineitalic">rba</span>}] |
[, SOURCEISTABLE]] |
[, FILETYPE <span class="codeinlineitalic">file_type</span> <span class="codeinlineitalic">file_name</span>]
}
[, CPU <span class="codeinlineitalic">primary_cpu</span>] 
[, BACKUPCPU <span class="codeinlineitalic">backup_cpu</span>]
[, PRI <span class="codeinlineitalic">priority</span>]
[, PROCESS <span class="codeinlineitalic">process_name</span>] 
[, PROGRAM <span class="codeinlineitalic">program_name</span>] 
[, PARAMS <span class="codeinlineitalic">param_file_name</span>] 
[, REPORT <span class="codeinlineitalic">report_name</span>] 
[, DESC "<span class="codeinlineitalic">text</span>"] 
</pre>
<p class="titleinrefsubsect2"><a id="CHDGEEGG"></a>ADD EXTRACT options summary</p>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name.</p>
</dd>
<dt><code>EXTTRAILSOURCE</code> <code><span class="codeinlineitalic">trail_name</span></code> | <code>LOGTRAILSOURCE</code> <code><span class="codeinlineitalic">trail_name</span></code> | <code>SOURCEISTABLE</code></dt>
<dd>
<p>The default source for <code>ADD EXTRACT</code> is the <code>TMF</code> audit trail. For information on other data sources see <a href="#i1118262">"Specifying the Data Source"</a>.</p>
</dd>
<dt><code>BEGIN</code> <code><span class="codeinlineitalic">time</span></code> | , <code>AUDSEQNO</code> <code><span class="codeinlineitalic">seq_num</span></code> , <code>AUDRBA</code> <code><span class="codeinlineitalic">rba</span></code></dt>
<dd>
<p>You can specify a starting point in an audit trail or an Oracle GoldenGate trail. See <a href="#i1105394">"Specifying a Starting Point"</a>.</p>
</dd>
<dt><code>CPU</code> <code><span class="codeinlineitalic">cpu</span></code> <code>BACKUPCPU</code> <code><span class="codeinlineitalic">cpu</span></code> <code>PRI</code> <code><span class="codeinlineitalic">priority</span></code></dt>
<dd>
<p>See additional information on assigning CPUs on <a href="#i1105415">"Assigning CPUs"</a>.</p>
</dd>
<dt><code>DESC</code> "<code>text</code>"</dt>
<dd>
<p>See <a href="#i1110248">"Describing the Group"</a>.</p>
</dd>
<dt><code>PARAMS</code> <code><span class="codeinlineitalic">param_file_name</span></code> <code>REPORT</code> <code><span class="codeinlineitalic">report_name</span></code></dt>
<dd>
<p>See <a href="#i1105442">"Specifying an Alternative Parameter or Report File"</a>.</p>
</dd>
<dt><code>PROCESS</code> <code><span class="codeinlineitalic">process_name</span></code></dt>
<dd>
<p>See <a href="#i1105437">"Specifying an Alternative Process"</a>.</p>
</dd>
<dt><code>PROGRAM</code> <code><span class="codeinlineitalic">program_name</span></code></dt>
<dd>
<p>The name of the object file to run. See <a href="#i1105474">"Executing user exits"</a>.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref32"></a>Example</p>
<p>The following example creates an Extract group called <code>DISTRIB</code> that:</p>
<ul>
<li>
<p>Begins at midnight on May 1, 2010</p>
</li>
<li>
<p>Runs in CPU <code>9</code> at priority <code>170</code> with an assigned backup CPU in case the primary fails</p>
</li>
</ul>
<pre>
ADD EXTRACT DISTRIB, BEGIN 2010-05-01 00:00, CPU 9, BACKUPCPU 7, PRI 170
</pre>
<p class="titleinrefsubsect"><a id="i1118262"></a>Specifying the Data Source</p>
<p>The default <code>ADD EXTRACT</code> source is a TMF audit trail. If your source is not the audit trail, you can specify an alternative source. Valid sources are:</p>
<ul>
<li>
<p>A local Oracle GoldenGate trail</p>
</li>
<li>
<p>An Oracle GoldenGate Logger trail</p>
</li>
<li>
<p>An entry-sequenced or BASE24 <code>TFL</code>/<code>PTLF</code> file</p>
</li>
<li>
<p>Data captured directly from a file or table for one-time processes, such as initial synchronization</p>
</li>
</ul>
<p class="titleinrefsubsect"><a id="sthref33"></a>Using a Local Oracle GoldenGate Trail</p>
<p>A local Oracle GoldenGate trail is specified by <code>EXTTRAILSOURCE</code> <code><span class="codeinlineitalic">trail_name</span></code>. The following example identifies the data source as a local Oracle GoldenGate trail, and specifies a sequence number in the trail at which to begin extracting data.</p>
<pre>
ADD EXTRACT FINANCE, EXTTRAILSOURCE \LA.$D1.GGSDAT.AA, EXTSEQNO 26
</pre>
<p class="titleinrefsubsect"><a id="sthref34"></a>Using the Logger Trail</p>
<p>A Logger trail is specified by <code>LOGTRAILSOURCE</code> <code><span class="codeinlineitalic">trail_name</span></code>, as in:</p>
<pre>
ADD EXTRACT FINANCE, LOGTRAILSOURCE $DATA2.GLOGGGL.AA
</pre>
<p class="titleinrefsubsect"><a id="sthref35"></a>Using a File</p>
<p>An entry-sequenced or ACI file source is specified by <code>FILETYPE</code> <code><span class="codeinlineitalic">file_type</span></code> <code><span class="codeinlineitalic">file_name</span></code>, as in:</p>
<pre>
ADD EXTRACT DISTRIB, FILETYPE ENTRY $DATA5.GGSDAT.FL1234
</pre>
<ul>
<li>
<p>For <code><span class="codeinlineitalic">file_name</span></code>, enter one of: <code>ENTRY, ACITLF, ACIPTLF, ACITLFX</code>, or <code>ACIPTLFX</code></p>
</li>
<li>
<p>Include the <code>ALTINPUT</code> and <code>RANGE</code> parameters in the Extract parameter file when capturing directly from a sequence of files</p>
</li>
</ul>
<p class="titleinrefsubsect"><a id="sthref36"></a>For One-time Processing</p>
<p>Initial synchronization or other one-time tasks are specified by <code>SOURCEISTABLE (</code>or <code>SOURCEISFILE</code> for an Enscribe file<code>),</code> as in:</p>
<pre>
ADD EXTRACT GROUP1, SOURCEISTABLE
</pre>
<p>When you configure Extract for a task, you must include a corresponding <code>SOURCEISTABLE</code> parameter in the Extract parameter file.</p>
<p><code>SOURCEISTABLE</code> does not maintain checkpoints unless <code>RESTARTCHECKPOINTS</code> is used.</p>
<p class="titleinrefsubsect"><a id="i1105394"></a>Specifying a Starting Point</p>
<p>You can specify a trail file sequence number and relative byte address as a starting point within an audit trail or local Oracle GoldenGate trail. However, it is more typical to specify a starting point using <code>BEGIN</code> with a date and time, which is the preferred method.</p>
<dl>
<dt><code>BEGIN</code> <code><span class="codeinlineitalic">time</span></code></dt>
<dd>
<p>Determines when Extract begins processing data in the audit trail. The <code><span class="codeinlineitalic">time</span></code> options are: <code>NOW</code>, or a date and time as <code>yyyy-mm-dd [hh:mi:[ss[.cccccc]]]</code>.</p>
</dd>
<dt><code>AUDSEQNO</code> <code><span class="codeinlineitalic">seq_num</span></code></dt>
<dd>
<p>Identifies the TMF audit trail file sequence number at which to begin extracting data</p>
</dd>
<dt><code>AUDRBA</code> <code><span class="codeinlineitalic">rba</span></code></dt>
<dd>
<p>Specifies that processing begin at the specified relative byte address.</p>
</dd>
<dt><code>EXTSEQNO</code> <code><span class="codeinlineitalic">seq_num</span></code></dt>
<dd>
<p>Identifies the Oracle GoldenGate trail file sequence number at which to begin extracting data.</p>
</dd>
<dt><code>EXTRBA</code> <code><span class="codeinlineitalic">rba</span></code></dt>
<dd>
<p>Specifies that processing begin at the specified relative byte address.</p>
</dd>
</dl>
<p class="titleinrefsubsect2"><a id="sthref37"></a>Example</p>
<pre>
 ADD EXTRACT ORDERS, BEGIN NOW
</pre>
<p class="titleinrefsubsect"><a id="i1105415"></a>Assigning CPUs</p>
<p>When you add an Extract group you can specify primary and backup CPUs and a process priority.</p>
<dl>
<dt><code>CPU</code> <code><span class="codeinlineitalic">cpu</span></code></dt>
<dd>
<p>The primary CPU in which Extract runs. The default is the CPU in which Manager runs.</p>
</dd>
<dt><code>BACKUPCPU</code> <code><span class="codeinlineitalic">cpu</span></code></dt>
<dd>
<p>An alternative CPU on which Extract runs if the primary CPU becomes unavailable.</p>
</dd>
<dt><code>PRI</code> <code><span class="codeinlineitalic">priority</span></code></dt>
<dd>
<p>The NonStop priority for the process. This defaults to the NonStop priority assigned to the TACL process underlying the <code>ADD</code>.</p>
</dd>
</dl>
<p class="titleinrefsubsect2"><a id="sthref38"></a>Example</p>
<p>This example assigns both the primary and backup CPUs and a priority.</p>
<pre>
ADD EXTRACT DISTRIB, BEGIN 2010-05-01 00:00, LOGTRAILSOURCE $DATA2.GLOGGGL.AA, CPU 9, BACKUPCPU 7, PRI 170
</pre>
<p class="titleinrefsubsect"><a id="i1105437"></a>Specifying an Alternative Process</p>
<p>The default process name is <code>$GGSnn</code>, where <code>nn</code> represents the sequence of the process. Oracle GoldenGate recommends that you use the default, however, if you must specify an alternative process, you can do so with the <code>PROCESS</code> <code><span class="codeinlineitalic">process_name</span></code> option.</p>
<p class="titleinrefsubsect2"><a id="sthref39"></a>Example</p>
<pre>
 ADD EXTRACT FINANCE, BEGIN 2010-05-01 00:00, PROCESS $GGE07
</pre>
<p class="titleinrefsubsect"><a id="i1105442"></a>Specifying an Alternative Parameter or Report File</p>
<p>Oracle GoldenGate recommends that you use the default parameter and report names, however, if you must specify an alternative name, use the options described here. Alternatively, you can change the default names globally from the <code>GLOBALS</code> parameter file using <code>ADD DEFINE</code>. See the parameter summary for <code>GLOBALS</code> on <a href="gg_parameters.htm#i956206">"GLOBALS Parameters Summary"</a>. Also see the <a class="olink GNSAD" href="../GNSAD/toc.htm"><span class="italic">Administering Oracle GoldenGate for HP NonStop (Guardian)</span></a>.</p>
<ul>
<li>
<p>The default parameter file name is <code><span class="codeinlineitalic">GGS_volume</span></code>.<code>GGSPARM</code>.<code><span class="codeinlineitalic">group_name</span></code>, where <code><span class="codeinlineitalic">group_name</span></code> represents a group, such as <code>FINANCE.</code></p>
</li>
<li>
<p>The default report file name is <code><span class="codeinlineitalic">GGS_volume</span></code>.<code>GGSRPT</code>.<code><span class="codeinlineitalic">rpt_name</span></code>, where <code><span class="codeinlineitalic">rpt_name</span></code> represents the group name, such as <code>FINANCE.</code> Oracle GoldenGate creates an entry-sequenced file to hold each group's run results, and by default, the report name is the same as the group name.</p>
</li>
</ul>
<p>To change the default names:</p>
<dl>
<dt><code>PARAMS</code> <code><span class="codeinlineitalic">param_file_name</span></code></dt>
<dd>
<p>Supplies an alternative parameter file name. Enter the fully qualified path name for the parameter file.</p>
</dd>
<dt><code>REPORT</code> <code><span class="codeinlineitalic">report_name</span></code></dt>
<dd>
<p>Supplies an alternative report file name. Enter the fully qualified path name for the parameter file.</p>
</dd>
</dl>
<p class="titleinrefsubsect2"><a id="sthref40"></a>Example</p>
<p>These examples change the default parameter file and report names.</p>
<pre>
ADD EXTRACT FINANCE, BEGIN 2010-05-01 00:00, PARAMS $DATA01.NEWPARM.FINANCE 
ADD EXTRACT FINANCE, BEGIN 2010-05-01 00:00, REPORT $PROD.NEWRPT.FINANCE
</pre>
<p class="titleinrefsubsect"><a id="i1110248"></a>Describing the Group</p>
<p>Use the <code>DESC</code> "<code><span class="codeinlineitalic">text</span></code>" option to describe an Extract group.</p>
<p class="titleinrefsubsect2"><a id="sthref41"></a>Example</p>
<pre>
ADD EXTRACT ET24AT2, LOGTRAILSOURCE GGSLOG.LT,
DESC "T24 data pump for ATM transactions to IBM in Seattle"
</pre>
<p class="titleinrefsubsect"><a id="i1105474"></a>Executing user exits</p>
<p>You can create and run your own routines by compiling them into an object file and binding this to the Extract program using the TACL macro named <code>BINDEXIT</code>. For more information, see the <a class="olink GNSAD" href="../GNSAD/toc.htm"><span class="italic">Administering Oracle GoldenGate for HP NonStop (Guardian)</span></a>.</p>
<p>When you are ready to call the user exit, launch the Extract object that has the bound routines with the <code>PROGRAM</code> <code><span class="codeinlineitalic">program_name</span></code> option. Manager uses that program when starting the process.</p>
<p class="titleinrefsubsect2"><a id="sthref42"></a>Example</p>
<pre>
ADD EXTRACT GROUP1, BEGIN NOW, CPU 1, PRI 150, PROGRAM $DATA.GGS.FINEXIT1
</pre>
<hr />
<a id="sthref43"></a>
<h3 class="refsect2">ALTER EXTRACT</h3>
<p>Use <code>ALTER EXTRACT</code> primarily to change attributes of the <code>CPU</code>, <code>PRIORITY</code> or <code>BACKUPCPU</code> options. You can use <code>ALTER EXTRACT</code> to change attributes of the options you specified with <code>ADD EXTRACT</code>, but you should consider the following:</p>
<ul>
<li>
<p>Use caution when changing the <code>BEGIN</code> values previously set with <code>ADD EXTRACT</code>. Since the <code>BEGIN</code> option checkpoints the starting point in the source, changing it may cause duplicate or missing records.</p>
</li>
<li>
<p>You can change <code>EXTTRAILSOURCE</code> or <code>LOGTRAILSOURCE</code> settings with <code>ALTER EXTRACT</code>, but Oracle GoldenGate recommends deleting and re-adding the group instead.</p>
</li>
</ul>
<p class="titleinrefsubsect"><a id="sthref44"></a>Syntax</p>
<pre>
ALTER EXTRACT <span class="codeinlineitalic">group_name</span> 
[, ETROLLOVER]
[, ETPURGE]
[, <span class="codeinlineitalic">option</span> ]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name.</p>
</dd>
<dt><code>ETROLLOVER</code></dt>
<dd>
<p>Causes Extract to increment and write to the next file in the trail sequence when restarting. For example, if the current file is <code>ET000002</code>, the current file will be <code>ET000003</code> when <code>Extract</code> restarts.</p>
</dd>
<dt><code>ETPURGE</code></dt>
<dd>
<p>Causes old trails to be purged before the new one is created. Valid only when <code>ETROLLOVER</code> is specified.</p>
</dd>
<dt><code><span class="codeinlineitalic">option</span></code></dt>
<dd>
<p>In addition to the above described options, you can specify any appropriate <code>ADD EXTRACT</code> option.</p>
</dd>
</dl>
<hr />
<a id="sthref45"></a>
<h3 class="refsect2">CLEANUP EXTRACT</h3>
<p>Use <code>CLEANUP EXTRACT</code> to delete old run history records for a group. This command keeps the last run record, enabling processing to resume from the correct position.</p>
<p>For example: <code>CLEANUP EXTRACT FINANCE</code> deletes the run history records for the <code>FINANCE</code> group, and keeps the last run record. You can also specify a quantity of records to save, as in: <code>CLEANUP EXTRACT * SAVE 5</code>, saving the last five run records.</p>
<p class="titleinrefsubsect"><a id="sthref46"></a>Syntax</p>
<pre>
CLEANUP EXTRACT <span class="codeinlineitalic">group_name</span> [, SAVE <span class="codeinlineitalic">count</span> ]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>An Extract group name or wildcard specification, such as <code>*</code> or <code>FIN*</code>.</p>
</dd>
<dt><code>SAVE</code> <code><span class="codeinlineitalic">count</span></code></dt>
<dd>
<p>Save the last <code>option</code> run records instead of just the last record.</p>
</dd>
</dl>
<hr />
<a id="sthref47"></a>
<h3 class="refsect2">DELETE EXTRACT</h3>
<p>Use <code>DELETE</code> <code>EXTRACT</code> to delete an Extract group and its associated checkpoints. Use this when the TMF configuration changes, or when you no longer require the group.</p>
<p>When you delete an Extract group, Oracle GoldenGate deletes both the group and the metadata that controls the group's trail. By default it retains all the files currently in the trail. If you wish to delete the trail files, you must use the exclamation point (!) in the <code>DELETE</code> <code>EXTRACT</code> statement or manually purge the files.</p>
<p class="titleinrefsubsect"><a id="sthref48"></a>Syntax</p>
<pre>
DELETE EXTRACT <span class="codeinlineitalic">group_name</span> [!]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>An Extract group name or wildcard specification, such as <code>*</code> or <code>FIN*</code>.</p>
</dd>
<dt><code>!</code></dt>
<dd>
<p>(exclamation point) Deletes trail files associated with each group without prompting the operator.</p>
</dd>
</dl>
<hr />
<a id="sthref49"></a>
<h3 class="refsect2">INFO EXTRACT</h3>
<p>Use <code>INFO EXTRACT</code> to retrieve processing history for an Extract group. You can specify reporting options to obtain:</p>
<ul>
<li>
<p>Status of the process</p>
</li>
<li>
<p>The process run history</p>
</li>
<li>
<p>A process lag report</p>
</li>
<li>
<p>Detailed historical checkpoints</p>
</li>
<li>
<p>Only processes that are running, or stopped</p>
</li>
<li>
<p>Information about tasks</p>
</li>
</ul>
<p class="titleinrefsubsect"><a id="sthref50"></a>Syntax</p>
<pre>
INFO EXTRACT <span class="codeinlineitalic">group_name</span>
[, BRIEF | DETAIL]
[, LAG <span class="codeinlineitalic">number</span> SECONDS | MINUTES | HOURS]
[, SHOWCH]
[, UP | DOWN]
[, TASKS | ALLPROCESSES]
[, PROGRAM]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>An Extract group name or wildcard specification, such as <code>*</code> or <code>FIN*</code>.</p>
</dd>
<dt><code>BRIEF</code></dt>
<dd>
<p>Reports:</p>
<ul>
<li>
<p>Status of the process (<code>STARTING, RUNNING, STOPPED</code> or <code>ABENDED</code>).</p>
</li>
<li>
<p>An approximation of the time and byte lag between the associated source and Extract processing.</p>
</li>
</ul>
</dd>
<dt><code>DETAIL</code></dt>
<dd>
<p>Reports:</p>
<ul>
<li>
<p>Process run history, which includes starting and stopping points within the audit.</p>
</li>
<li>
<p>Run history for trails.</p>
</li>
<li>
<p>Process parameters established by the <code>ADD</code> <code>EXTRACT</code> command.</p>
</li>
</ul>
</dd>
<dt><code>LAG</code> <code><span class="codeinlineitalic">number</span></code> <code>SECONDS</code> | <code>MINUTES</code> | <code>HOURS</code></dt>
<dd>
<p>Restricts the display to groups that are a specified time interval behind. This helps spot critical conditions. The lag returned by this command is approximate. For precise information, use <code>LAG EXTRACT</code>. Lag measures both bytes behind and time behind. For more information about how Oracle GoldenGate reports lag, see the <a class="olink GNSAD" href="../GNSAD/toc.htm"><span class="italic">Administering Oracle GoldenGate for HP NonStop (Guardian)</span></a>.</p>
</dd>
<dt><code>SHOWCH</code></dt>
<dd>
<p>Shows detailed historical checkpoints.</p>
</dd>
<dt><code>UP | DOWN</code></dt>
<dd>
<p>Shows processes that are either running, (<code>UP</code>) or not (<code>DOWN</code>). Specify either <code>UP</code> or <code>DOWN</code>.</p>
</dd>
<dt><code>TASKS | ALLPROCESSES</code></dt>
<dd>
<p>Shows information about either tasks or all processes that are running. Specify either <code>TASKS</code> or <code>ALLPROCESSES</code>.</p>
</dd>
<dt><code>PROGRAM</code></dt>
<dd>
<p>Displays the name and location of the object that is running.</p>
</dd>
</dl>
<hr />
<a id="sthref51"></a>
<h3 class="refsect2">KILL EXTRACT</h3>
<p>Use <code>KILL EXTRACT</code> to force Extract to stop immediately. Try <code>STOP EXTRACT</code> first because it also performs cleanup. Using the Oracle GoldenGate commands <code>STOP</code> or <code>KILL</code> is preferred to stopping processes from TACL. Manager automatically restarts processes that are stopped from TACL.</p>
<p class="titleinrefsubsect"><a id="sthref52"></a>Syntax</p>
<pre>
KILL EXTRACT <span class="codeinlineitalic">group_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name. You can use wildcards to kill a set of groups.</p>
</dd>
</dl>
<hr />
<a id="sthref53"></a>
<h3 class="refsect2">LAG EXTRACT</h3>
<p>Use <code>LAG EXTRACT</code> to determine Extract's relative position in the audit trail. This command estimates the lag behind the source database more precisely than <code>INFO EXTRACT</code>.</p>
<p>For more information about how Oracle GoldenGate reports lag, see the <a class="olink GNSAD" href="../GNSAD/toc.htm"><span class="italic">Administering Oracle GoldenGate for HP NonStop (Guardian)</span></a>.</p>
<p>To determine lag for local processes, specify the group name. To determine lag for remote processes, specify the remote process name.</p>
<p class="titleinrefsubsect"><a id="sthref54"></a>Syntax</p>
<pre>
LAG EXTRACT {<span class="codeinlineitalic">group_name</span> | <span class="codeinlineitalic">process_name</span>}
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name, as in: <code>LAG EXTRACT FINANCE</code></p>
</dd>
<dt><code><span class="codeinlineitalic">process_name</span></code></dt>
<dd>
<p>The process name, as in: <code>LAG EXTRACT $GGE00</code></p>
</dd>
</dl>
<hr />
<a id="sthref55"></a>
<h3 class="refsect2">SEND EXTRACT</h3>
<p>Use <code>SEND EXTRACT</code> to communicate with a running Extract process. Using <code>SEND EXTRACT</code> options, you can perform a variety of operations that are summarized in <a href="#CHDCAGDC">"SEND EXTRACT options summary"</a>.</p>
<p class="titleinrefsubsect"><a id="sthref56"></a>Syntax</p>
<pre>
SEND EXTRACT <span class="codeinlineitalic">group_name</span> {
ARCLOSECATALOG |
AUDITEND | 
STATUS | 
GETTCPSTATS | 
RESETTCPSTATS |
REPORT [<span class="codeinlineitalic">time_option</span> [RESET | FILE <span class="codeinlineitalic">name</span> | TABLE <span class="codeinlineitalic">name</span>]] |
ROLLREPORT |
GETEXTARSTATS | 
RESETEXTARSTATS |
GETARSTATS, [MAT | AUXnn] | 
RESETARSTATS, [MAT | AUXnn] | 
GETTRANSINFO |
GETARPROCESS | 
GETARPARAMS, [MAT | AUXnn] | 
GETARFILELIST, [MAT | AUXnn]] 
GETARFILESTATS, [FILE | MAT | MINRECS | RESET | QUIET |
NOPARTITIONS] | 
GETAREXCLUDELIST, [FILE | MAT | AUXnn] | 
CLEAREXCLUDELIST | 
ROLLOVER | 
LAGSTATS <span class="codeinlineitalic">option</span> | 
LAGSNAPSHOT | 
LAGREPORTON |
LAGREPORTOFF | 
LAGOFF | 
FORCESTOP | 
STOP |
GETROLLBACKS | 
IGNOREROLLBACKS
}
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>A running Extract group. If the group specified is not running, an error is returned.</p>
</dd>
</dl>
<p class="titleinrefsubsect2"><a id="CHDCAGDC"></a>SEND EXTRACT options summary</p>
<dl>
<dt><code>AUDITEND | STATUS | REPORT | GETTCPSTATS | RESETTCPSTATS</code></dt>
<dd>
<p>See <a href="#i1105735">"Obtaining process reports"</a>.</p>
</dd>
<dt><code>ARCLOSECATALOG | GETEXTARSTATS | RESETEXTARSTATS | GETARSTATS | RESETARSTATS |</code></dt>
<dt><code>GETTRANSINFO | GETARPROCESS | GETARPARAMS | GETARFILELIST | GETARFILESTATS |</code></dt>
<dt><code>GETAREXCLUDELIST | CLEAREXCLUDELIST</code></dt>
<dd>
<p>See <a href="#i1105785">"Managing the Audserv program"</a>.</p>
</dd>
<dt><code>ROLLREPORT</code></dt>
<dd>
<p>See <a href="#i1105782">"Opening a new report file"</a>.</p>
</dd>
<dt><code>ROLLOVER</code></dt>
<dd>
<p>See <a href="#i1105842">"Rollover Oracle GoldenGate trails"</a>.</p>
</dd>
<dt><code>LAGSTATS</code> <code><span class="codeinlineitalic">option</span></code></dt>
<dd>
<p>See <a href="#i1117076">"Obtaining lag reports"</a>.</p>
</dd>
<dt><code>FORCESTOP | STOP</code></dt>
<dd>
<p>See <a href="#i1117110">"Stopping the process"</a>.</p>
</dd>
<dt><code>GETROLLBACKS | IGNOREROLLBACKS</code></dt>
<dd>
<p>See <a href="#i1105893">"Processing rollbacks"</a>.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref57"></a>Example</p>
<pre>
SEND EXTRACT FINANCE, STOP
SEND EXTRACT MANUFACT, ROLLOVER
</pre>
<p class="titleinrefsubsect"><a id="i1105735"></a>Obtaining process reports</p>
<p>You can generate reports for:</p>
<div class="inftblhruleinformal">
<table class="cellalignment20" summary="This table lists the name, option, and description of process reports." dir="ltr">
<thead>
<tr class="cellalignment11">
<th class="cellalignment21" id="r1c1-t3">Report</th>
<th class="cellalignment21" id="r1c2-t3">Option</th>
<th class="cellalignment21" id="r1c3-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment11">
<td class="cellalignment17" id="r2c1-t3" headers="r1c1-t3">
<p>End of audit trail</p>
</td>
<td class="cellalignment17" headers="r2c1-t3 r1c2-t3">
<pre>
AUDITEND
</pre></td>
<td class="cellalignment17" headers="r2c1-t3 r1c3-t3">
<p>Queries the Extract process to determine whether all records in the audit trails have been processed.</p>
<p>This command indicates whether more Extract and Replicat activity must occur before a scheduled switch between databases. Until <code>AUDITEND</code> returns "All audit processed," more data needs to be processed before it can be assumed that secondary databases are synchronized.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r3c1-t3" headers="r1c1-t3">
<p>Processing status</p>
</td>
<td class="cellalignment17" headers="r3c1-t3 r1c2-t3">
<pre>
STATUS
</pre></td>
<td class="cellalignment17" headers="r3c1-t3 r1c3-t3">
<p>Returns a detailed status of the processing state, including current position and activity.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r4c1-t3" headers="r1c1-t3">
<p>Processing statistics</p>
</td>
<td class="cellalignment17" headers="r4c1-t3 r1c2-t3">
<pre>
REPORT
</pre></td>
<td class="cellalignment17" headers="r4c1-t3 r1c3-t3">
<p>Generates an interim statistical report to the report file, including the number of inserts, updates, and deletes.</p>
<p>Refer to <a href="#i1125537">"SEND REPORT"</a> for detail on <code>SEND</code> <code>REPORT</code> options.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r5c1-t3" headers="r1c1-t3">
<p>TCP/IP statistics</p>
</td>
<td class="cellalignment17" headers="r5c1-t3 r1c2-t3">
<pre>
GETTCPSTATS
</pre></td>
<td class="cellalignment17" headers="r5c1-t3 r1c3-t3">
<p>Retrieves TCP/IP statistics, such as the quantity and byte length of inbound and outbound messages, the number of messages received and sent, wait times, process CPU time, and byte transmit averages. Time accumulates when Extract is waiting on a socket send or receive and all times are reported in microseconds.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r6c1-t3" headers="r1c1-t3">&nbsp;</td>
<td class="cellalignment17" headers="r6c1-t3 r1c2-t3">
<pre>
RESETTCPSTATS
</pre></td>
<td class="cellalignment17" headers="r6c1-t3 r1c3-t3">
<p>Resets the TCP/IP statistics so the next report displays fresh statistics.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblhruleinformal" -->
<p class="titleinrefsubsect2"><a id="sthref58"></a>Example</p>
<p>The first example uses the <code>AUDITEND</code> option to report on the end of an audit trail. The second example specifies the <code>STATUS</code> option to return details of the processing state.</p>
<pre>
SEND EXTRACT FINANCE, AUDITEND
SEND EXTRACT FINANCE, STATUS
</pre>
<p class="titleinrefsubsect"><a id="i1105782"></a>Opening a new report file</p>
<p>To close the current report file and open a new one, specify the <code>ROLLREPORT</code> option. <code>ROLLREPORT</code> renames the current file by appending a number to the end of the report name (such as <code>EXTACCT0</code>), then opens a new report file with the original name.</p>
<p class="titleinrefsubsect"><a id="i1105785"></a>Managing the Audserv program</p>
<p><code>SEND</code> <code>EXTRACT</code> supplies the following options for determining the status of Audserv operations.</p>
<dl>
<dt><code>ARCLOSECATALOG</code></dt>
<dd>
<p>Instructs Audserv to close its opens on the SQL Catalog.</p>
</dd>
<dt><code>GETEXTARSTATS</code></dt>
<dd>
<p>Retrieves information about Audserv activity. Information returned includes: first and last record timestamp, first and last read timestamp, bytes processed, commits, and other processing statistics.</p>
</dd>
<dt><code>RESETEXTARSTATS</code></dt>
<dd>
<p>Resets the report generated by <code>GETEXTARSTATS</code>.</p>
</dd>
<dt><code>GETARSTATS, [MAT | AUXnn]</code></dt>
<dd>
<p>Retrieves audit trail statistics from Audserv.</p>
</dd>
<dt><code>RESETARSTATS, [MAT | AUXnn]</code></dt>
<dd>
<p>Resets the report generated by <code>GETARSTATS</code>.</p>
</dd>
<dt><code>GETTRANSINFO</code></dt>
<dd>
<p>Retrieves information from Extract's pending transaction table.</p>
</dd>
<dt><code>GETARPROCESS</code></dt>
<dd>
<p>Retrieves the process names of Audserv processes.</p>
</dd>
<dt><code>GETARPARAMS, [MAT | AUXnn]</code></dt>
<dd>
<p>Retrieves Audserv runtime parameters.</p>
</dd>
<dt><code>GETARFILELIST, [MAT | AUXnn]</code></dt>
<dd>
<p>Retrieves the Audserv file list.</p>
</dd>
<dt><code>GETARFILESTATS, [FILE | MAT | MINRECS | RESET | QUIET | NOPARTITIONS]</code></dt>
<dd>
<p>Retrieves Audserv file level statistics.</p>
</dd>
<dt><code>GETAREXCLUDELIST, [FILE | MAT | AUXnn]</code></dt>
<dd>
<p>Retrieves the contents of the Audserv exclude list.</p>
</dd>
<dt><code>CLEAREXCLUDELIST</code></dt>
<dd>
<p>Clears the Audserv exclude list.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="i1105842"></a>Rollover Oracle GoldenGate trails</p>
<p>The <code>ROLLOVER</code> option closes the current trail and opens the next trail in the sequence.</p>
<p class="titleinrefsubsect"><a id="i1117076"></a>Obtaining lag reports</p>
<p><code>SEND</code> <code>EXTRACT</code> supplies options for generating a variety of lag reports.</p>
<dl>
<dt><code>LAGSTATS</code> <code><span class="codeinlineitalic">option</span></code></dt>
<dd>
<p>Retrieves and optionally reports lag statistics. The options are the same as those for the <code>LAGSTATS</code> parameter. See additional <code>LAGSTATS</code> information <a href="gg_parameters.htm#i943645">"LAGSTATS"</a>.</p>
<p>The <code>SEND EXTRACT</code> <code>LAGSTATS</code> specification replaces any previous <code>LAGSTATS</code> entry.</p>
</dd>
<dt><code>LAGSNAPSHOT</code></dt>
<dd>
<p>Writes a current statistics report to the screen and to the report file. To generate this report, specify either the <code>LAGSTATS</code> parameter in the parameter file, or issue <code>SEND</code> <code>EXTRACT</code> <code><span class="codeinlineitalic">group_name</span></code>, <code><span class="codeinlineitalic">option</span></code>.</p>
</dd>
<dt><code>LAGREPORTON</code></dt>
<dd>
<p>Generates a report for each lag interval.</p>
</dd>
<dt><code>LAGREPORTOFF</code></dt>
<dd>
<p>Turns off automatic reporting, but continues to retrieve data.</p>
</dd>
<dt><code>LAGOFF</code></dt>
<dd>
<p>Turns off lag statistics.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="i1117110"></a>Stopping the process</p>
<p>You can stop the current process with:</p>
<dl>
<dt><code>FORCESTOP</code></dt>
<dd>
<p>Terminates the process with a <code>STOP</code> operation.</p>
</dd>
<dt><code>STOP</code></dt>
<dd>
<p>Terminates the run gracefully. This command is preferable to stopping from TACL, which results in an <code>ABEND</code> status.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="i1105893"></a>Processing rollbacks</p>
<p>Process rollback records with:</p>
<dl>
<dt><code>GETROLLBACKS</code></dt>
<dd>
<p>Retrieves rollback records. Use this command only before extracting changes during an initial-load phase.</p>
</dd>
<dt><code>IGNOREROLLBACKS</code></dt>
<dd>
<p>Ignores rollback records. Use this command after completing your initial load.</p>
</dd>
</dl>
<hr />
<a id="sthref59"></a>
<h3 class="refsect2">START EXTRACT</h3>
<p>Use <code>START EXTRACT</code> to start Extract. GGSCI routes the <code>START</code> request to Manager to start and monitor the process.</p>
<p class="titleinrefsubsect"><a id="sthref60"></a>Syntax</p>
<pre>
START EXTRACT <span class="codeinlineitalic">group_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The name of the Extract group. You can use wildcards to specify a set of group names, such as, <code>*</code> or <code>*FIN*</code>.</p>
</dd>
</dl>
<hr />
<a id="sthref61"></a>
<h3 class="refsect2">STATUS EXTRACT</h3>
<p>Use <code>STATUS EXTRACT</code> to determine if Extract groups are running. A report displays to the Extract process's home terminal.</p>
<p class="titleinrefsubsect"><a id="sthref62"></a>Syntax</p>
<pre>
STATUS EXTRACT <span class="codeinlineitalic">group_name</span> 
[, DETAIL] | [,TASKS | ALLPROCESSES]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The name of the group. You can use wildcards to specify a set of group names, such as, <code>*</code> or <code>*FIN*</code>.</p>
</dd>
<dt><code>DETAIL</code></dt>
<dd>
<p>When you specify <code>DETAIL</code>, (<code>STATUS EXTRACT *, DETAIL</code>) the audit trails required by the group are also listed. Output consists of the locations of required audit trails, whether they are on disk or tape, and whether the trails still exist.</p>
<p><code>DETAIL</code> is useful for determining whether audit needs to be restored from tape before the group is run and which groups are causing Manager to tie up TMF resources.</p>
</dd>
<dt><code>TASKS | ALLPROCESSES</code></dt>
<dd>
<p>Determine either the tasks or all processes that are running. Specify either <code>TASKS</code> or <code>ALLPROCESSES</code>.</p>
</dd>
</dl>
<hr />
<a id="sthref63"></a>
<h3 class="refsect2">STOP EXTRACT</h3>
<p>Use <code>STOP EXTRACT</code> to stop Extract gracefully. Use <code>STOP</code> when you are changing the process configuration and to prevent Manager from automatically restarting the process.</p>
<p class="titleinrefsubsect"><a id="sthref64"></a>Syntax</p>
<pre>
STOP EXTRACT <span class="codeinlineitalic">group_name</span> [, WAIT [<span class="codeinlineitalic">seconds</span>] | ATEND |!]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The name of the Extract group. You can use wildcards to specify a set of group names, such as, <code>*</code> or <code>*FIN*</code>.</p>
</dd>
<dt><code>WAIT</code> <code><span class="codeinlineitalic">seconds</span></code></dt>
<dd>
<p>GGSCI waits for Extract to terminate before issuing the next prompt. If <code><span class="codeinlineitalic">seconds</span></code> is specified, GGSCI waits that many seconds before returning control to the user. If you don't specify <code>WAIT</code>, GGSCI issues the next prompt immediately.</p>
</dd>
<dt><code>ATEND</code></dt>
<dd>
<p>Instructs Extract to stop when it reaches end-of-file for the last sequence of audit trails. If the application that updates the source database is brought down first, this ensures that Extract processed all relevant database updates before stopping.</p>
<p>If Extract is reading data from an Oracle GoldenGate trail instead of TMF audit trails, <code>ATEND</code> causes Extract to terminate when end-of-file is reached for the last sequence of the trails.</p>
</dd>
<dt><code>!</code></dt>
<dd>
<p>(Exclamation point) Stops Extract immediately, even in the middle of a transaction. Use this option to terminate long running transactions. As with <code>ATEND</code>, a grouped transaction is rolled back but the individual transactions are replayed, if the trail is available.</p>
</dd>
</dl>
</div>
<!-- class="refsect1" -->
<a id="i1105981"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">Replicat commands</h2>
<p>With Replicat commands, you can establish initial checkpoints so that data can be continuously and accurately processed. After the initial run, these checkpoints provide a starting point for subsequent runs. Replicat commands also provide run history information.</p>
<p>Replicat process names, parameter files and report files take system assigned default values. To change these default settings, see the <a class="olink GNSAD" href="../GNSAD/toc.htm"><span class="italic">Administering Oracle GoldenGate for HP NonStop (Guardian)</span></a>.</p>
<hr />
<a id="sthref65"></a>
<h3 class="refsect2">ADD REPLICAT</h3>
<p>Use <code>ADD REPLICAT</code> to add a Replicat group. A Replicat group allows data changes to be processed from run to run without missing records.</p>
<p>Using <code>ADD REPLICAT</code> options you can perform a variety of operations that are summarized in the argument table.</p>
<p class="titleinrefsubsect"><a id="sthref66"></a>Syntax</p>
<pre>
ADD REPLICAT <span class="codeinlineitalic">group_name</span> 
{, SPECIALRUN | EXTTRAIL <span class="codeinlineitalic">trail_name</span> | LOGTRAIL <span class="codeinlineitalic">trail_name</span>}
[, BEGIN <span class="codeinlineitalic">time</span> |, EXTSEQNO <span class="codeinlineitalic">seq_number</span>, EXTRBA <span class="codeinlineitalic">rba</span>]
[, CPU <span class="codeinlineitalic">primary_cpu</span>] 
[, BACKUPCPU <span class="codeinlineitalic">cpu</span>] 
[, PRI <span class="codeinlineitalic">priority</span>]
[, PROCESS <span class="codeinlineitalic">process_name</span>]
[, PARAMS <span class="codeinlineitalic">param_file_name</span>]
[, REPORT <span class="codeinlineitalic">report_name</span>]
[, DESC "<span class="codeinlineitalic">text</span>"]
[, PROGRAM <span class="codeinlineitalic">program_name</span>]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>Required. Up to 7 characters to designate some logical function of this Replicat group. You can use wildcards to specify a set of group names, such as, <code>*</code> or <code>*FIN*</code>.</p>
<p>To use a group name of up to 10 characters, you can use the global parameter <code>OLDGROUPNAMING</code>. However, Oracle GoldenGate recommends constraining group names to 7 characters.</p>
</dd>
<dt><code>SPECIALRUN</code> | <code>EXTTRAIL</code> <code><span class="codeinlineitalic">trail_name</span></code> | <code>LOGTRAIL</code> <code><span class="codeinlineitalic">trail_name</span></code></dt>
<dd>
<p>Either <code>SPECIALRUN</code> or one of the two record sources is required. A warning is issued if the specified record source does not exist.</p>
<ul>
<li>
<p>For <code>SPECIALRUN</code> see <a href="#i1106174">"Configuring initial data synchronization or other tasks"</a>.</p>
</li>
<li>
<p>Specify <code>EXTTRAIL</code> <code><span class="codeinlineitalic">trail_name</span></code> when the source is a local trail.</p>
</li>
<li>
<p>Specify <code>LOGTRAIL</code> <code><span class="codeinlineitalic">trail_name</span></code> where the record source is a Logger trail.</p>
</li>
</ul>
</dd>
<dt><code>BEGIN</code> <code><span class="codeinlineitalic">time</span></code> <code>EXTSEQNO</code> <code><span class="codeinlineitalic">seq_num</span></code>, <code>EXTRBA</code> <code><span class="codeinlineitalic">rba</span></code></dt>
<dd>
<p>See <a href="#i1106095">"Specifying a starting point"</a>.</p>
</dd>
<dt><code>CPU</code> <code><span class="codeinlineitalic">primary_cpu</span></code> <code>BACKUPCPU</code> <code><span class="codeinlineitalic">cpu</span></code> <code>PRI</code> <code><span class="codeinlineitalic">priority</span></code></dt>
<dd>
<p>See <a href="#i1106118">"Assigning CPUs"</a>.</p>
</dd>
<dt><code>DESC</code> "<code><span class="codeinlineitalic">text</span></code>"</dt>
<dd>
<p>See <a href="#i1106178">"Enter a Replicat group description"</a>.</p>
</dd>
<dt><code>PARAMS</code> <code><span class="codeinlineitalic">param_file_name</span></code> <code>REPORT</code> <code><span class="codeinlineitalic">report_name</span></code></dt>
<dd>
<p>See <a href="#i1106142">"Specifying an alternative parameter or report file"</a>.</p>
</dd>
<dt><code>PROCESS</code> <code><span class="codeinlineitalic">process_name</span></code></dt>
<dd>
<p>See <a href="#i1106138">"Specifying an alternative Replicat process"</a>.</p>
</dd>
<dt><code>PROGRAM</code> <code><span class="codeinlineitalic">program_name</span></code></dt>
<dd>
<p>The object to be run. See <a href="#i1106182">"Executing user exits"</a>.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref67"></a>Example</p>
<p>This Replicat group reads data from a trail created and stored at <code>\NY</code>. It starts processing from the beginning of the <code>AA</code> trail and runs on <code>CPU</code> <code>5</code> at a priority of <code>160</code>.</p>
<pre>
ADD REPLICAT FINANCE, EXTTRAIL \NY.$DATA2.EXTDAT.AA, 
CPU 5, PRIORITY 160
</pre>
<p class="titleinrefsubsect"><a id="i1106095"></a>Specifying a starting point</p>
<p>Normally, Replicat begins processing at the beginning of the trail. However, you can control when and where Replicat begins processing with one of the following options:</p>
<dl>
<dt><code>BEGIN</code> <code><span class="codeinlineitalic">time</span></code></dt>
<dd>
<p>Determines when Replicat begins processing data the audit trail. The <code><span class="codeinlineitalic">time</span></code> options are:</p>
<ul>
<li>
<p><code>NOW</code></p>
</li>
<li>
<p>A date/time in the format <code>yyyy-mm-dd [hh:mi:[ss[.cccccc]]]</code></p>
</li>
</ul>
<p><span class="bold">Note:</span> Using <code>BEGIN</code> is not recommended, because it causes Replicat to bypass data preceding the specified begin point and can cause the target data to be out of synchronization.</p>
</dd>
<dt><code>EXTSEQNO</code> <code><span class="codeinlineitalic">seq_number</span></code></dt>
<dd>
<p>Identifies a specific sequence number in the local Oracle GoldenGate trail at which to begin extracting data.</p>
<p>For example, if the <code>EXTTRAIL</code> is <code>$SYSTEM.GGSDAT.ET</code> and <code>EXTSEQNO</code> is <code>26</code>, processing begins in trail file <code>$SYSTEM.GGSDAT.ET000026.</code> Omit this parameter unless special circumstances arise.</p>
</dd>
<dt><code>EXTRBA</code> <code><span class="codeinlineitalic">rba</span></code></dt>
<dd>
<p>Specifies that processing begin in the local Oracle GoldenGate trail at the specified relative byte address.</p>
</dd>
</dl>
<p class="titleinrefsubsect2"><a id="sthref68"></a>Example</p>
<dl>
<dd><a id="sthref69"></a></dd>
<dt class="seghead">Example 1&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre>
ADD REPLICAT ORDERS, EXTTRAIL \NY.$DATA2.EXTDAT.AA, BEGIN NOW, CPU 6, PRI 170
</pre></dd>
<dd><a id="sthref70"></a></dd>
<dt class="seghead">Example 2&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre>
ADD REPLICAT ORDERS, EXTTRAIL $SYSTEM.GGSDAT.ET, EXTSEQNO 26, EXTRBA 1203780
</pre></dd>
</dl>
<p class="titleinrefsubsect"><a id="i1106118"></a>Assigning CPUs</p>
<p>When you add a Replicat group you can specify CPUs and a process priority. The options are:</p>
<dl>
<dt><code>CPU</code> <code><span class="codeinlineitalic">primary_cpu</span></code></dt>
<dd>
<p>The processor on which Replicat will run. The default is the CPU on which Manager runs.</p>
</dd>
<dt><code>BACKUPCPU</code> <code><span class="codeinlineitalic">cpu</span></code></dt>
<dd>
<p>An alternative CPU on which to run Replicat if the primary CPU becomes unavailable.</p>
</dd>
<dt><code>PRI</code> <code><span class="codeinlineitalic">priority</span></code></dt>
<dd>
<p>The NonStop priority of the process. Refer to the HP NonStop documentation for more information.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="i1106138"></a>Specifying an alternative Replicat process</p>
<p>The default process name is <code>$GGRnn</code>, where <code>nn</code> represents the sequence of the process. Oracle GoldenGate recommends that you use the default, however, if you must specify an alternative process, you can do so with the <code>PROCESS</code> <code><span class="codeinlineitalic">process_name</span></code> option.</p>
<p class="titleinrefsubsect2"><a id="sthref71"></a>Example</p>
<pre>
ADD REPLICAT FINANCE, EXTTRAIL $SYSTEM.GGSDAT.ET, PROCESS $GGR04
</pre>
<p class="titleinrefsubsect"><a id="i1106142"></a>Specifying an alternative parameter or report file</p>
<p>Oracle GoldenGate recommends that you use the default names, however, if you must specify an alternative process, use the options described here. Alternatively, you can change the default names globally from the <code>GLOBALS</code> parameter file using <code>ADD DEFINE</code>; see <a href="gg_parameters.htm#i956206">"GLOBALS Parameters Summary"</a> for more detail on this parameter. Also see the <a class="olink GNSAD" href="../GNSAD/toc.htm"><span class="italic">Administering Oracle GoldenGate for HP NonStop (Guardian)</span></a>.</p>
<ul>
<li>
<p>The default parameter file name is <code><span class="codeinlineitalic">GGS_volume</span></code>.<code>GGSPARM</code>.<code><span class="codeinlineitalic">group_name</span></code>, where <code><span class="codeinlineitalic">group_name</span></code> represents a Replicat group, such as <code>FINANCE.</code></p>
</li>
<li>
<p>The default report file name is <code><span class="codeinlineitalic">GGS_volume</span></code>.<code>GGSRPT</code>.<code><span class="codeinlineitalic">report_name</span></code>, where <code><span class="codeinlineitalic">report_name</span></code> represents the report file name, such as <code>FINANCE.</code> Oracle GoldenGate creates an entry-sequenced file to hold each Replicat group's run results. By default, the report name is the same as the Replicat group.</p>
</li>
</ul>
<p>To change the default names:</p>
<dl>
<dt><code>PARAMS</code> <code><span class="codeinlineitalic">param_file_name</span></code></dt>
<dd>
<p>Supplies an alternative parameter file name. Enter the fully qualified path name for the parameter file.</p>
</dd>
<dt><code>REPORT</code> <code><span class="codeinlineitalic">report_name</span></code></dt>
<dd>
<p>Supplies the new report file name. Enter the fully qualified path name for the parameter file.</p>
</dd>
</dl>
<p class="titleinrefsubsect2"><a id="sthref72"></a>Example</p>
<p>This example changes the default parameter file and report names.</p>
<pre>
ADD REPLICAT FINANCE, 
EXTTRAIL $SYSTEM.GGSDAT.ET, 
PARAMS $PARAMS.GGSPARM.FINANCE,
REPORT $REPORTS.GGSRPT.FINANCE
</pre>
<p class="titleinrefsubsect"><a id="i1106174"></a>Configuring initial data synchronization or other tasks</p>
<p>For initial synchronization or other task processing, you can configure Replicat to run as a task by specifying the <code>SPECIALRUN</code> parameter.</p>
<p class="titleinrefsubsect2"><a id="sthref73"></a>Example</p>
<pre>
ADD REPLICAT <span class="codeinlineitalic">group_name</span>, SPECIALRUN
</pre>
<p class="titleinrefsubsect"><a id="i1106178"></a>Enter a Replicat group description</p>
<p>Use the <code>DESC</code> "<code><span class="codeinlineitalic">text</span></code>" option to describe a Replicat group.</p>
<p class="titleinrefsubsect2"><a id="sthref74"></a>Example</p>
<pre>
ADD REPLICAT T24SEA, EXTTRAIL $SYSTEM.GGSDAT.ET, 
DESC "T24 data pump for ATM transactions to IBM in Seattle"
</pre>
<p class="titleinrefsubsect"><a id="i1106182"></a>Executing user exits</p>
<p>You can create and run your own routines by compiling them into an object file and binding this to the Replicat program by using the TACL macro named <code>BINDEXIT</code>. For more information, see the <a class="olink GNSAD" href="../GNSAD/toc.htm"><span class="italic">Administering Oracle GoldenGate for HP NonStop (Guardian)</span></a>.</p>
<p>When you are ready to call the user exit, launch the Replicat object that has the bound routines with the <code>PROGRAM</code> <code><span class="codeinlineitalic">program_name</span></code> option. Manager uses that program when starting the process.</p>
<p class="titleinrefsubsect2"><a id="sthref75"></a>Example</p>
<pre>
ADD REPLICAT GROUP1, BEGIN NOW, CPU 1, PRI 150, PROGRAM $DATA.GGS.FINEXIT1
</pre>
<hr />
<a id="sthref76"></a>
<h3 class="refsect2">ALTER REPLICAT</h3>
<p>Use <code>ALTER REPLICAT</code> to change attributes established in <code>ADD REPLICAT</code>.</p>
<p class="titleinrefsubsect"><a id="sthref77"></a>Syntax</p>
<pre>
ALTER REPLICAT <span class="codeinlineitalic">group_name</span> [, <span class="codeinlineitalic">options</span>...]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>An existing Replicat group name.</p>
</dd>
<dt><code><span class="codeinlineitalic">options</span></code></dt>
<dd>
<p>You can specify any <code>ADD REPLICAT</code> option here. If no options are specified, the checkpoint is reset to the beginning of the trail. If <code>BEGIN</code> is not specified, the first file in the <code>EXTTRAIL</code> sequence must exist.</p>
</dd>
</dl>
<p>The following example alters the checkpoints for a group of Replicat processes. Use this to skip over data that had not been processed before an unplanned outage.</p>
<p class="titleinrefsubsect"><a id="sthref78"></a>Example</p>
<pre>
ALTER REPLICAT REP1AP BEGIN NOW
</pre>
<hr />
<a id="sthref79"></a>
<h3 class="refsect2">CLEANUP REPLICAT</h3>
<p><code>CLEANUP REPLICAT</code> deletes old run history records for a group, but keeps the last run record intact, enabling processing to resume from the correct position.</p>
<p>For example: <code>CLEANUP REPLICAT FINANCE</code> deletes run history records for the finance group, and keeps the last run record. You can also specify a quantity of records to save, as in: <code>CLEANUP REPLICAT * SAVE 5</code>, saving the last 5 run records.</p>
<p class="titleinrefsubsect"><a id="sthref80"></a>Syntax</p>
<pre>
CLEANUP REPLICAT <span class="codeinlineitalic">group_name</span> [SAVE <span class="codeinlineitalic">count</span>]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name. You can use wildcards to specify a set of group names, such as, <code>*</code> or <code>*FIN*</code>.</p>
</dd>
<dt><code>SAVE</code> <code><span class="codeinlineitalic">count</span></code></dt>
<dd>
<p>Save the last <code><span class="codeinlineitalic">count</span></code> runs.</p>
</dd>
</dl>
<hr />
<a id="sthref81"></a>
<h3 class="refsect2">DELETE REPLICAT</h3>
<p><code>DELETE REPLICAT</code> deletes a Replicat group. <code>DELETE</code> can have the side effect of freeing up trails for purging by Manager, since associated trail checkpoints are deleted.</p>
<p class="titleinrefsubsect"><a id="sthref82"></a>Syntax</p>
<pre>
DELETE REPLICAT <span class="codeinlineitalic">group_name</span> [!]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name. You can use wildcards to specify a set of group names, such as, <code>*</code> or <code>*FIN*</code>.</p>
</dd>
<dt><code>!</code></dt>
<dd>
<p>(Exclamation point) Deletes each group without prompting the user to confirm the operation.</p>
</dd>
</dl>
<hr />
<a id="sthref83"></a>
<h3 class="refsect2">INFO REPLICAT</h3>
<p><code>INFO REPLICAT</code> retrieves processing history for a Replicat group. You can specify reporting options to obtain:</p>
<ul>
<li>
<p>Status of the process</p>
</li>
<li>
<p>Process run history</p>
</li>
<li>
<p>A lag report</p>
</li>
<li>
<p>Detailed historical checkpoints</p>
</li>
<li>
<p>Only processes that are running, or stopped</p>
</li>
</ul>
<p class="titleinrefsubsect"><a id="sthref84"></a>Syntax</p>
<pre>
INFO REPLICAT <span class="codeinlineitalic">group_name</span> 
[, BRIEF | DETAIL]
[, LAG <span class="codeinlineitalic">number</span> {SECONDS | MINUTES | HOURS}]
[, SHOWCH]
[, UP | DOWN]
[, TASKS | ALLPROCESSES]
[, PROGRAM]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name. You can use wildcards to specify a set of group names, such as, <code>*</code> or <code>*FIN*</code>.</p>
</dd>
<dt><code>BRIEF</code></dt>
<dd>
<p>Reports the status of the Replicat process (<code>STARTING, RUNNING, STOPPED</code> or <code>ABENDED</code>) and an approximation of the time and byte lag between the associated trail and Replicat processing.</p>
</dd>
<dt><code>DETAIL</code></dt>
<dd>
<p>Reports Replicat process run history, which includes starting and stopping points within the trail expressed as a time, and the process parameters established by the <code>ADD</code> <code>REPLICAT</code> command.</p>
</dd>
<dt><code>LAG</code> <code><span class="codeinlineitalic">number</span></code> <code>SECONDS</code> | <code>MINUTES</code> | <code>HOURS</code></dt>
<dd>
<p>Restricts the display to groups that are a specified number of seconds, minutes or hours behind. This helps spot critical conditions. The lag returned by this command is approximate. For precise information, use <code>LAG</code> <code>REPLICAT</code>. Lag measures both bytes behind and time behind.</p>
</dd>
<dt><code>SHOWCH</code></dt>
<dd>
<p>Shows detailed historical checkpoints.</p>
</dd>
<dt><code>UP | DOWN</code></dt>
<dd>
<p>Shows processes that are running (<code>UP</code>) or not (<code>DOWN</code>).</p>
</dd>
<dt><code>TASKS | ALLPROCESSES</code></dt>
<dd>
<p>Shows either tasks or all processes that are running. Specify either <code>TASKS</code> or <code>ALLPROCESSES</code>.</p>
</dd>
<dt><code>PROGRAM</code></dt>
<dd>
<p>Displays the name and location of the object that is running.</p>
</dd>
</dl>
<hr />
<a id="sthref85"></a>
<h3 class="refsect2">KILL REPLICAT</h3>
<p><code>KILL REPLICAT</code> forces a Replicat process to stop immediately. Try <code>STOP REPLICAT</code> first because it also performs cleanup. <code>STOP</code> and <code>KILL</code> are preferred to stopping from TACL. Manager automatically restarts processes that are stopped from TACL.</p>
<p class="titleinrefsubsect"><a id="sthref86"></a>Syntax</p>
<pre>
KILL REPLICAT <span class="codeinlineitalic">group_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name. You can use wildcards to specify a set of group names, such as, <code>*</code> or <code>*FIN*</code>.</p>
</dd>
</dl>
<hr />
<a id="sthref87"></a>
<h3 class="refsect2">LAG REPLICAT</h3>
<p>Instead of reading the current checkpoint position, <code>LAG REPLICAT</code> queries Replicat to determine the relative position of the process in the local trail. This command provides a better estimate of Replicat's lag behind the process than <code>INFO REPLICAT</code>.</p>
<p>You can retrieve lag information from remote processes by specifying the Replicat process name instead of group name.</p>
<p class="titleinrefsubsect"><a id="sthref88"></a>Syntax</p>
<pre>
LAG REPLICAT {<span class="codeinlineitalic">group_name</span> | <span class="codeinlineitalic">process_name</span>}
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name, as in: <code>LAG REPLICAT FINANCE</code></p>
</dd>
<dt><code><span class="codeinlineitalic">process_name</span></code></dt>
<dd>
<p>The Replicat process name, as in: <code>LAG REPLICAT $DATA.GGS.$GGR00</code></p>
</dd>
</dl>
<hr />
<a id="sthref89"></a>
<h3 class="refsect2">SEND REPLICAT</h3>
<p><code>SEND REPLICAT</code> communicates with a running Replicat process.</p>
<p>Using <code>SEND REPLICAT</code> options you can perform a variety of operations that are summarized in <a href="#CHDBBEAE">"SEND REPLICAT Options Summary"</a>.</p>
<p class="titleinrefsubsect"><a id="sthref90"></a>Syntax</p>
<pre>
SEND REPLICAT <span class="codeinlineitalic">group_name</span> {
STATUS | 
REPORT [<span class="codeinlineitalic">time_option</span> [RESET | FILE <span class="codeinlineitalic">name</span> | TABLE <span class="codeinlineitalic">name</span>]]|
ROLLREPORT |
LAGSTATS <span class="codeinlineitalic">option</span> | 
LAGSNAPSHOT | 
LAGREPORTON | 
LAGREPORTOFF | 
LAGOFF | 
FORCESTOP | 
STOP |
HANDLECOLLISIONS <span class="codeinlineitalic">file_name</span> |
NOHANDLECOLLISIONS <span class="codeinlineitalic">file_name</span> | 
REPORT HANDLECOLLISIONS |
CLOSEFILES |
GETGROUPTRANSOPS | 
SETGROUPTRANSOPS <span class="codeinlineitalic">number</span> |
GETMAXTRANSOPS | 
SETMAXTRANSOPS <span class="codeinlineitalic">number</span> |
GETNETWORKCHECKPOINTS |
        ROLLDISCARD |
ROLLSQLDISCARD 
}
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>A running Replicat group. If the group is not running, an error is returned.</p>
</dd>
</dl>
<p class="titleinrefsubsect2"><a id="CHDBBEAE"></a>SEND REPLICAT Options Summary</p>
<dl>
<dt><code>FORCESTOP | STOP</code></dt>
<dd>
<p>See <a href="#i1106519">"Stopping the process"</a>.</p>
</dd>
<dt><code>CLOSEFILES |</code></dt>
<dd>
<p>Causes Replicat to close any open Enscribe and SQL/MP tables.</p>
</dd>
<dt><code>REPORT</code> <code>HANDLECOLLISIONS</code> <code>GETGROUPTRANSOPS</code> | <code>SETGROUPTRANSOPS</code> <code><span class="codeinlineitalic">number</span></code> |</dt>
<dt><code>GETMAXTRANSOPS</code> | <code>SETMAXTRANSOPS</code> <code><span class="codeinlineitalic">number</span></code> | <code>GETNETWORKCHECKPOINTS</code> |</dt>
<dt><code>HANDLECOLLISIONS</code> <code><span class="codeinlineitalic">file_name</span></code> | <code>NOHANDLECOLLISIONS</code> <code><span class="codeinlineitalic">file_name</span></code></dt>
<dd>
<p>See <a href="#i1106448">"Setting and viewing parameters"</a>.</p>
</dd>
<dt><code>LAGSTATS</code> <code><span class="codeinlineitalic">option</span></code> | <code>LAGSNAPSHOT</code> | <code>LAGREPORTON</code> | <code>LAGREPORTOFF</code> | <code>LAGOFF</code></dt>
<dd>
<p>See <a href="#i1106420">"Obtaining lag reports"</a>.</p>
</dd>
<dt><code>ROLLREPORT |</code></dt>
<dd>
<p>See <a href="#i1106417">"Opening and Closing Discard and Report files"</a>.</p>
</dd>
<dt><code>STATUS | REPORT</code></dt>
<dd>
<p>See <a href="#i1106409">"Obtaining process reports"</a>.</p>
</dd>
<dt><code>ROLLDISCARD</code> | <code>ROLLSQLDISCARD</code></dt>
<dd>
<p>See <a href="#i1106417">"Opening and Closing Discard and Report files"</a></p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="i1106409"></a>Obtaining process reports</p>
<p>You can specify reports for:</p>
<ul>
<li>
<p>Processing status by specifying the <code>STATUS</code> option. <code>STATUS</code> returns a detailed status of process state, including current position and activity.</p>
</li>
<li>
<p>Process statistics by specifying the <code>REPORT</code> option. <code>REPORT</code> generates an interim Replicat statistical report to the report file, including the number of inserts, updates, and deletes. <code>Refer to</code> <a href="#i1125537">"SEND REPORT"</a> for detail on <code>SEND</code> <code>REPORT</code> options.</p>
</li>
</ul>
<p class="titleinrefsubsect"><a id="i1106417"></a>Opening and Closing Discard and Report files</p>
<p>To close the current report file and open a new one, specify the <code>ROLLREPORT</code> option. <code>ROLLREPORT</code> renames the current file to <code><span class="codeinlineitalic">report_file1</span></code>, then opens a new report file with the original name. For example, if the original name was <code>$DATA.GGSRPT.REPCUST</code>, the <code>ROLLREPORT</code> option would rename files: <code>$DATA.GGSRPT.REPCUST0</code>, <code>$DATA.GGSRPT.REPCUST1</code>, up to <code>$DATA.GGSRPT.REPCUST9</code>. The original report name is recycled and the new report would be named: <code>$DATA.GGSRPT.REPCUST</code>.</p>
<p>To close the current discard and open a new one, specify the <code>ROLLDISCARD</code> option. To close the current SQL formatted discard file and open a new one, specify the <code>ROLLSQLDISCARD</code> option. Like the <code>ROLLREPORT</code>, these options rename the current discard file by adding 0 and increment the sequence number of the remaining discard files. If a <code><span class="codeinlineitalic">discard_file9</span></code> exists, it will be deleted to make room for the replacement.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>Discard files that have been created by default cannot be rolled over.</p>
</div>
<p class="titleinrefsubsect"><a id="i1106420"></a>Obtaining lag reports</p>
<p>You can obtain a variety of lag reports with the following options:</p>
<dl>
<dt><code>LAGSTATS</code> <code><span class="codeinlineitalic">option</span></code></dt>
<dd>
<p>Collects and optionally reports lag statistics. The options are the same as those in the <code>LAGSTATS</code> parameter for Replicat. This <code>LAGSTATS</code> specification replaces any previous <code>LAGSTATS</code> entry.</p>
</dd>
<dt><code>LAGSNAPSHOT</code></dt>
<dd>
<p>Outputs a report regarding current statistics to the screen and to the report file. To generate this report, set up <code>LAGSNAPSHOT</code>, either through the parameter file or dynamically using <code>SEND</code>.</p>
</dd>
<dt><code>LAGREPORTON</code></dt>
<dd>
<p>Generates a report for each lag interval.</p>
</dd>
<dt><code>LAGREPORTOFF</code></dt>
<dd>
<p>Turns off automatic reporting, but continues to collect data.</p>
</dd>
<dt><code>LAGOFF</code></dt>
<dd>
<p>Turns off lag statistics.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="i1106448"></a>Setting and viewing parameters</p>
<p>You can set and view the settings for certain parameters.</p>
<dl>
<dt><code>GETGROUPTRANSOPS</code></dt>
<dd>
<p>Outputs the current number of operations that are grouped together for processing.</p>
</dd>
<dt><code>SETGROUPTRANSOPS</code> <code><span class="codeinlineitalic">number</span></code></dt>
<dd>
<p>Sets the number of operations that are to be grouped to the <code><span class="codeinlineitalic">number</span></code> value.</p>
</dd>
<dt><code>GETMAXTRANSOPS</code></dt>
<dd>
<p>Outputs the maximum number of operations that are currently allowed for a transaction.</p>
</dd>
<dt><code>SETMAXTRANSOPS</code> <code><span class="codeinlineitalic">number</span></code></dt>
<dd>
<p>Sets the maximum number of operations that can be in a transaction to the <code><span class="codeinlineitalic">number</span></code> value.</p>
</dd>
<dt><code>GETNEWWORKCHECKPOINTS</code></dt>
<dd>
<p>Outputs the network checkpoint file locations, date of last update, and status information.</p>
</dd>
<dt><code>HANDLECOLLISIONS</code> <code><span class="codeinlineitalic">file_name</span></code></dt>
<dd>
<p>Directs Replicat to apply <code>HANDLECOLLISIONS</code> logic. This can also be specified as a startup parameter in the Replicat parameter file. The <code><span class="codeinlineitalic">file_name</span></code> option can be used with or without wildcards to include one or more files. If no <code><span class="codeinlineitalic">file_name</span></code> is specified, <code>HANDLECOLLISIONS</code> will be turned on for all.</p>
</dd>
<dt><code>NOHANDLECOLLISIONS</code> <code><span class="codeinlineitalic">file_name</span></code></dt>
<dd>
<p>Directs Replicat to stop applying <code>HANDLECOLLISIONS</code> logic. The <code><span class="codeinlineitalic">file_name</span></code> option can be used with or without wildcards to specify one or more files. If no <code><span class="codeinlineitalic">file_name</span></code> is specified, <code>HANDLECOLLISIONS</code> will be turned off for all.</p>
</dd>
<dt><code>REPORT HANDLECOLLISIONS</code></dt>
<dd>
<p>Outputs the status (<code>ON</code> or <code>OFF</code>) of the <code>HANDLECOLLISIONS</code> flag for each file or table.</p>
</dd>
</dl>
<p class="titleinrefsubsect2"><a id="sthref91"></a>Examples</p>
<dl>
<dd><a id="sthref92"></a></dd>
<dt class="seghead">Example 1&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>This example requests the number of operations being grouped for all Replicats.</p>
<pre>
SEND REP *, GETGROUPTRANSOPS
 
</pre>
<p>The Replicats return:</p>
<pre>
GGRLOG     GROUPTRANSOPS is 50
REPSQL     GROUPTRANSOPS is 100
</pre></dd>
<dd><a id="sthref93"></a></dd>
<dt class="seghead">Example 2&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>This example sets the maximum number of operations that can be in a transaction to 1000.</p>
<pre>
SEND REP REQSQL, SETMAXTRANSOPS 1000
</pre>
<p>Replicat returns:</p>
<pre>
MAXTRANSOPS was set to 1000
</pre></dd>
<dd><a id="sthref94"></a></dd>
<dt class="seghead">Example 3&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The following command requests information on network checkpoint files.</p>
<pre>
SEND REPLICAT REP01 GETNETWORKCHECKPOINTS
</pre>
<p>This returns a display similar to:</p>
<pre>
Network Checkpoints       Entries 3, Table Size 16
Filename                                 Updated                Fnum  Err  State
----------------------------------- -------------------- ---- ---- -----
\NY.$DATA01.GGS.REPCTXT               2010/01/08 10:43:28      2    0
\LA.$DATA03.GGS.REPCTXT               2010/01/08 10:43:28      3    0
\SEA.$DATA01.GGS.REPCTXT              2010/01/08 10:43:28      4    0
</pre></dd>
<dd><a id="sthref95"></a></dd>
<dt class="seghead">Example 4&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>Sending the first of the following commands turns <code>HANDLECOLLISIONS</code> <code>ON</code> for <code>TCUSTMER</code>. The second requests a report on the settings for <code>HANDLECOLLISIONS</code>.</p>
<pre>
SEND REQSQL, HANDLECOLLISIONS \NY.$DATA4.GGSTAR.TCUSTMER
SEND REQSQL, REPORT HANDLECOLLISIONS
</pre>
<p>The report will be similar to:</p>
<pre>
Reading \NY.$DATA4.GGSDAT.ET000000, Current RBA       2280
Report at 2010-11-10 09:02:39 (Current settings)
Table/File                                            HANDLECOLLISIONS
MAP \LA.$DATA4.GGSSOU.TCUSTMER
       to \NY.$DATA4.GGSTAR.TCUSTMER                      On
MAP \LA.$DATA4.GGSSOU.TCUSTORD
       to \NY.$DATA4.GGSTAR.TCUSTORD                      Off
</pre></dd>
</dl>
<p class="titleinrefsubsect"><a id="i1106519"></a>Stopping the process</p>
<p>You can stop the current process using either the <code>FORCESTOP</code> or <code>STOP</code> option.</p>
<dl>
<dt><code>FORCESTOP</code></dt>
<dd>
<p>Instructs Replicat to rollback the pending transaction and stop the process immediately.</p>
</dd>
<dt><code>STOP</code></dt>
<dd>
<p>Terminates Replicat gracefully. This command is preferable to stopping Replicat from TACL or other command prompt, which results in an <code>ABEND</code> status.</p>
</dd>
</dl>
<hr />
<a id="sthref96"></a>
<h3 class="refsect2">START REPLICAT</h3>
<p>Use <code>START REPLICAT</code> to begin a Replicat process. The <code>START</code> request is routed to Manager to start and monitor the process.</p>
<p class="titleinrefsubsect"><a id="sthref97"></a>Syntax</p>
<pre>
START REPLICAT <span class="codeinlineitalic">group_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name. You can use wildcards to specify a set of group names, such as, <code>*</code> or <code>*FIN*</code>.</p>
</dd>
</dl>
<hr />
<a id="sthref98"></a>
<h3 class="refsect2">STATUS REPLICAT</h3>
<p>Use <code>STATUS REPLICAT</code> to determine whether Replicat processes are running.</p>
<p class="titleinrefsubsect"><a id="sthref99"></a>Syntax</p>
<pre>
STATUS REPLICAT <span class="codeinlineitalic">group_name</span> [, DETAIL | TASKS | ALLPROCESSES]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name. You can use wildcards to specify a set of group names, such as, <code>*</code> or <code>*FIN*</code>.</p>
</dd>
<dt><code>DETAIL</code></dt>
<dd>
<p>If <code>DETAIL</code> is specified, (<code>STATUS REPLICAT *, DETAIL</code>) the audit trails required by the Replicat group are also displayed. Output consists of the locations of required audit trails, whether they are on disk or tape, and whether they still exist.</p>
<p><code>DETAIL</code> is useful for determining:</p>
<ul>
<li>
<p>Whether audit needs to be restored from tape before the group is run</p>
</li>
<li>
<p>Which Replicat groups are causing Manager to tie up TMF resources</p>
</li>
</ul>
</dd>
<dt><code>TASKS | ALLPROCESSES</code></dt>
<dd>
<p>Provides status on tasks or all processes that are running. Specify either <code>TASKS</code> or <code>ALLPROCESSES</code>.</p>
</dd>
</dl>
<hr />
<a id="sthref100"></a>
<h3 class="refsect2">STOP REPLICAT</h3>
<p><code>STOP REPLICAT</code> stops a Replicat process gracefully. Using this command lets you make configuration changes without affecting the operation of future runs, and ensures that Manager will not restart the process.</p>
<p class="titleinrefsubsect"><a id="sthref101"></a>Syntax</p>
<pre>
STOP REPLICAT <span class="codeinlineitalic">group_name</span> [, WAIT [<span class="codeinlineitalic">seconds</span>] | ATEND |!]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name. You can use wildcards to specify a set of group names, such as, <code>*</code> or <code>*FIN*</code>.</p>
</dd>
<dt><code>WAIT</code> <code><span class="codeinlineitalic">seconds</span></code></dt>
<dd>
<p>GGSCI waits for the process to terminate before issuing the next prompt. When a value is specified for <code><span class="codeinlineitalic">seconds</span></code>, GGSCI waits up to that many seconds before returning control to the user. If you don't specify <code>WAIT</code>, GGSCI issues the next prompt immediately.</p>
</dd>
<dt><code>ATEND</code></dt>
<dd>
<p>Instructs Replicat to terminate when it reaches end-of-file in the last sequence of trails. Replicat also terminates if the trail is no longer available (due to network outage, or other condition). <code>ATEND</code> guarantees that all outstanding records have been processed.</p>
<p>The current transaction is rolled back if the trail contains only part of the last transaction. If the last transaction was part of a grouped transaction (<code>GROUPTRANSOPS</code> parameter) and the source trail is available, the individual transactions are replayed up to the point where Replicat is quitting.</p>
</dd>
<dt><code>!</code></dt>
<dd>
<p>Stops Replicat even in the middle of a transaction. Use this option to terminate long running transactions. As with <code>ATEND</code>, a grouped transaction is rolled back but the individual transactions are replayed if the trail is available.</p>
</dd>
</dl>
</div>
<!-- class="refsect1" -->
<a id="i1108416"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">ER commands</h2>
<p>Oracle GoldenGate lets you manage Extract and Replicat as a unit with a single command. For example, to start the modules separately for group <code>FINANCE</code>, you would normally enter commands similar to:</p>
<pre>
GGSCI&gt; START EXTRACT EXTFIN
GGSCI&gt; START REPLICAT REPFIN
</pre>
<p>Using combined management, you can start both modules with a single command, as in:</p>
<pre>
GGSCI&gt; START ER *FIN
</pre>
<p class="titleinrefsubsect"><a id="sthref102"></a>Syntax</p>
<pre>
<span class="codeinlineitalic">command</span> ER <span class="codeinlineitalic">group_name</span> [, <span class="codeinlineitalic">option</span>]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">command</span></code></dt>
<dd>
<p>Any one of the following:</p>
<dl>
<dt><code>INFO</code></dt>
<dd>
<p>Returns the processing status of both modules, including lag information</p>
</dd>
<dt><code>KILL</code></dt>
<dd>
<p>Forces the processes to stop immediately. Oracle GoldenGate recommends first attempting to stop processes using the <code>STOP</code> command. Either <code>KILL</code> or <code>STOP</code> is preferred over stopping processes from TACL.</p>
</dd>
<dt><code>SEND</code></dt>
<dd>
<p>Sends a performance <code><span class="codeinlineitalic">option</span></code> to the programs, such as <code>REPORT</code>.</p>
<pre>
SEND ER *FIN, REPORT
</pre>
<p>The <code>REPORT</code> option generates an interim statistical report to the report files.</p>
</dd>
<dt><code>START</code></dt>
<dd>
<p>Begins the programs. The <code>START</code> command is routed to Manager, which starts and monitors the programs.</p>
</dd>
<dt><code>STATUS</code></dt>
<dd>
<p>Determines whether the processes are running.</p>
</dd>
<dt><code>STOP</code></dt>
<dd>
<p>Causes a graceful stop, ensuring configuration changes can be made without impacting future runs.</p>
</dd>
</dl>
<p>For more information about these commands, see the command's description in <a href="#i1127536">"Extract commands"</a> or <a href="#i1105981">"Replicat commands"</a>.</p>
</dd>
<dt><code>ER</code></dt>
<dd>
<p>Required. Informs Oracle GoldenGate that the command applies to both of the programs.</p>
</dd>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The Extract or Replicat group name. You can use wildcard specifications. The following commands act upon any group containing the characters <code>FIN</code>.</p>
<pre>
START ER *FIN*
START ER FIN*
START ER *FIN
</pre></dd>
<dt><code><span class="codeinlineitalic">option</span></code></dt>
<dd>
<p>Can be any option associated with the command, such as the <code>INFO</code> command <code>DOWN</code> option, which shows only processes that are not running, as in:</p>
<pre>
INFO ER *FIN, DOWN
</pre>
<p>For details about the options, see the command's description in <a href="#i1127536">"Extract commands"</a> or <a href="#i1105981">"Replicat commands"</a>.</p>
</dd>
</dl>
</div>
<!-- class="refsect1" -->
<a id="i1107063"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">Logger commands</h2>
<p>Use Logger commands to configure Logger for extracting data changes from non-TMF applications.</p>
<p>Logger processes default to a prefix of <code>$GGL</code>. To change these default settings, see the <a class="olink GNSAD" href="../GNSAD/toc.htm"><span class="italic">Administering Oracle GoldenGate for HP NonStop (Guardian)</span></a>.</p>
<hr />
<a id="sthref103"></a>
<h3 class="refsect2">ADD LOGGER</h3>
<p>Use <code>ADD</code> <code>LOGGER</code> to configure <code>GGSLIB</code> and Logger. By default, <code>ADD</code> <code>LOGGER</code> reads a parameter file called <code><span class="codeinlineitalic">GGS_volume</span></code>.<code>GGSPARM</code>.<code>LOGPARM</code>. Before invoking <code>ADD LOGGER</code>, edit <code>LOGPARM</code> to enter the appropriate parameters. See <a href="gg_parameters.htm#i938287">"Logger Parameters Summary"</a> for information about the parameters you can enter into this file.</p>
<p>To bind <code>GGSLIB</code> to the application, see <a href="#i1107743">"Programs commands"</a>.</p>
<p class="titleinrefsubsect"><a id="sthref104"></a>Syntax</p>
<pre>
ADD LOGGER [, PARAMS <span class="codeinlineitalic">param_file_name</span>] 
</pre>
<dl>
<dt><code>PARAMS</code> <code><span class="codeinlineitalic">param_file_name</span></code></dt>
<dd>
<p>Use the <code>PARAMS</code> option to indicate a different parameter file name.</p>
</dd>
</dl>
<p><code>ADD LOGGER</code> performs the following:</p>
<ul>
<li>
<p>Validates the configuration parameters for Logger.</p>
</li>
<li>
<p>Creates a <span class="italic">segment file</span> containing parameters used by <code>GGSLIB</code> intercept library routines. These parameters tell the intercepts where to send logged information (that is, which Loggers should receive it).</p>
<p>The default segment file is <code>$SYSTEM.GGS.AUDCFG</code>. It is strongly recommended that you use the default location. If you must use a different location (such as for running multiple occurrences of the Oracle GoldenGate environment), see the <a class="olink GNSAD" href="../GNSAD/toc.htm"><span class="italic">Administering Oracle GoldenGate for HP NonStop (Guardian)</span></a>.</p>
<p>If the segment file exists at the time <code>ADD LOGGER</code> is issued, GGSCI renames the existing segment and issues a message informing you the existing <code>AUDCFG</code> is renamed.</p>
</li>
<li>
<p>Creates log trail files and pre-allocates space for the log trails. GGSCI has a limit of 200 log trails per Logger process. The maximum number of Logger processes per instance is 50.</p>
</li>
<li>
<p>Updates the GGS database to recognize the Loggers and configuration parameters.</p>
</li>
</ul>
<hr />
<a id="sthref105"></a>
<h3 class="refsect2">ALTER LOGGER</h3>
<p>Use <code>ALTER LOGGER</code> to change parameters for an existing Logger process. As with the <code>ADD LOGGER</code> command, <code>ALTER LOGGER</code> reads and validates the parameters in <code>LOGPARM</code> and pre-allocates log trail files.</p>
<p class="titleinrefsubsect"><a id="sthref106"></a>Syntax</p>
<pre>
ALTER LOGGER [, PARAMS <span class="codeinlineitalic">param_file_name</span>] 
</pre>
<dl>
<dt><code>PARAMS</code> <code><span class="codeinlineitalic">param_file_name</span></code></dt>
<dd>
<p>Use the <code>PARAMS</code> option to indicate a different parameter file name.</p>
</dd>
</dl>
<p>Configuration segment files are aged every time <code>ALTER LOGGER</code> is invoked (<code>AUDCFG00, AUDCFG01</code>, etc.). If the segment file exists at the time <code>ALTER LOGGER</code> is issued, GGSCI renames the existing segment and issues a message informing you the existing <code>AUDCFG</code> is renamed. <code>ALTER LOGGER</code> renames up to 99 files.</p>
<p>Logger parameter changes take effect immediately. Altering Logger parameters while Logger or Replicat processes are running requires careful consideration. In particular, consider the situation in which a file set is switched from one Logger to another.</p>
<hr />
<a id="sthref107"></a>
<h3 class="refsect2">DELETE LOGGER</h3>
<p>Use <code>DELETE LOGGER</code> to delete the internal Oracle GoldenGate Logger configuration files created when you entered <code>ADD LOGGER</code>.</p>
<p>Optionally, you can also delete the Logger trails with the ! (exclamation point) option. Before executing this option, be sure that all of the data has been processed out of the trail.</p>
<p class="titleinrefsubsect"><a id="sthref108"></a>Syntax</p>
<pre>
DELETE LOGGER [!]
</pre>
<dl>
<dt><code>!</code></dt>
<dd>
<p>The exclamation point (!) deletes files from the associated log trail. If you omit this, the log trails associated with the process will need to be manually deleted or they will still exist.</p>
</dd>
</dl>
<a id="i1107140"></a>
<hr />
<h3 class="refsect2">INFO LOGGER</h3>
<p>Use <code>INFO LOGGER</code> to retrieve the following information about Logger:</p>
<ul>
<li>
<p>The location of the shared configuration segment used by <code>GGSLIB</code></p>
</li>
<li>
<p>The date Logger was added and the location of the parameter file used to create it</p>
</li>
<li>
<p>The settings for timeout and debug, and whether logging is currently on</p>
</li>
<li>
<p>Which sequence number Logger currently has open for each Logger process</p>
</li>
<li>
<p>The location of the trail used by each Logger process</p>
</li>
<li>
<p>Whether each Logger process in the group is running</p>
</li>
<li>
<p><code>CPU, BACKUPCPU</code> and <code>PRIORITY</code> values for each process</p>
</li>
<li>
<p>Configured flushing and tracing parameters</p>
</li>
<li>
<p>The block size used to write the trail</p>
</li>
<li>
<p>Whether the trail is version 7 format (New) or the format from before version 7 (Old)</p>
</li>
<li>
<p><code>FILE</code> entries for each Logger process, along with the settings for the following <code>FILE</code> configuration options for each file</p>
<ul>
<li>
<p>Whether the image is compressed for updates</p>
</li>
<li>
<p>Whether TMF audited file changes are logged</p>
</li>
<li>
<p>Whether unstructured file changes are logged</p>
</li>
<li>
<p>Whether Logger includes bulk I/O updates</p>
</li>
<li>
<p>The delay interval to detect and record a new name</p>
</li>
<li>
<p>The Log Mode of the file (suspended or active)</p>
</li>
</ul>
</li>
</ul>
<p class="titleinrefsubsect"><a id="sthref109"></a>Syntax</p>
<pre>
INFO LOGGER 
[, AUDCFG <span class="codeinlineitalic">segment_file</span>] 
[, SHOWLOGGED <span class="codeinlineitalic">file_name</span> 
[, PROGRAM <span class="codeinlineitalic">program_set</span> | PROCESS <span class="codeinlineitalic">process_set</span> | USER <span class="codeinlineitalic">user_set</span>]]
[, BRIEF]
</pre>
<dl>
<dt><code>AUDCFG</code> <code><span class="codeinlineitalic">segment_file</span></code></dt>
<dd>
<p>Determines the parameters for any configuration, including the current one. Configuration segment files are aged every time <code>ALTER LOGGER</code> is invoked (<code>AUDCFG00, AUDCFG01</code>, etc.).</p>
</dd>
<dt><code>BRIEF</code></dt>
<dd>
<p>Limits the <code>INFO LOGGER</code> display to information about the <code>SHOWLOGGED</code> file name.</p>
</dd>
<dt><code>SHOWLOGGED</code> <code><span class="codeinlineitalic">file_name</span></code></dt>
<dd>
<p>Lets you determine which log process, if any, is capturing a particular file. Specify the file name or wildcard file set. Whether the file is included, excluded or omitted for each Logger is displayed.</p>
<p>If you specify <code>SHOWLOGGED</code>, you can also detect whether a file is included or excluded according to one of the following:</p>
<dl>
<dt><code>PROCESS</code> <code><span class="codeinlineitalic">process_set</span></code></dt>
<dd>
<p>Directs Logger to extract data only when the opener is the process or set of processes specified. (The process set can be a single process or a wildcard, for example <code>$APP*.</code>)</p>
</dd>
<dt><code>PROGRAM</code> <code><span class="codeinlineitalic">program_set</span></code></dt>
<dd>
<p>Directs Logger to extract data only when the opener is the program or set of programs specified. (The program set can be a single program or a wildcard, for example <code>$DATA1.PROGS.*</code>.)</p>
</dd>
<dt><code>USER</code> <code><span class="codeinlineitalic">user_set</span></code></dt>
<dd>
<p>Directs Logger to extract data only when the creator access ID of the opener is the user specified. (The user set can be a single user, for example <code>FINANCE.JOE</code>, or a wildcard, for example <code>SUPER.*</code>.)</p>
</dd>
</dl>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref110"></a>Example</p>
<p>Sample results from an <code>INFO</code> <code>LOGGER</code> command:</p>
<pre>
Information for Logger Group $GGL

Intercept segment file \NY.$SYSTEM.GGS.AUDCFG
Created  2010-10-21 11:24
Built from \NY.$DATA01.GGSPARM.LOGPARM
Logger timeout: 60.00 seconds
Debug on stack check: Off
Current mode: Logging is ON

  Process:        $GGL49
  Log Trail:      \NY.$DATA01.LOGGER.ET000013
  Status:         DOWN
  CPUs:           2,3
  Priority:       170
  Logopens:       16
  Flush recs:     16
  Flush secs:     0.85
  Trace IOs:      Off
  Trace Stats:    Off
  Heartbeat:      Off
  AdjustPriority: On
  BlockSize:      57344
  TrailFormat:    New
  SourceAppInfo:  Included
  Logger Timeout: 60.00 seconds
                                   Comp   Unstr TMF    Bulk  Rename Log
  Files                            Updts  Files Files  IO    Delay  Mode
  \NY.$D*.*.*                       No     Yes    No     Yes   No     Normal
</pre>
<hr />
<a id="sthref111"></a>
<h3 class="refsect2">SEND LOGGER</h3>
<p>Use <code>SEND LOGGER</code> to communicate with one or more running Logger processes.</p>
<p class="titleinrefsubsect"><a id="sthref112"></a>Syntax</p>
<pre>
SEND LOGGER 

[, PROCESS <span class="codeinlineitalic">process_name</span>]
[, ADJUSTPRIORITY | NOADJUSTPRIORITY]
[, ROLLOVER]
[, REFRESH]
[, PROCESSINFO [, DETAIL]]
[, LOGFILECLOSEDELAY <span class="codeinlineitalic">seconds</span>]
[, LOGINFO]
[, FLUSHSTATS
   [, FILTERPROCESS <span class="codeinlineitalic">process_name</span> | 
      FILTERPROGRAM <span class="codeinlineitalic">program_name</span> | 
      FILTERLIBRARY <span class="codeinlineitalic">library_name</span>] | 
   [, RESET]]
[, GETSTATS 
   [, FILTERPROCESS <span class="codeinlineitalic">process_name</span> | 
      FILTERPROGRAM <span class="codeinlineitalic">program_name</span> | 
      FILTERLIBRARY <span class="codeinlineitalic">library_name</span>] | 
   [, RESET]]
[, GETLOGFILECLOSEDELAY]
[, HOTSWAP <span class="codeinlineitalic">object_name</span>]
</pre>
<dl>
<dt><code>PROCESS</code> <code><span class="codeinlineitalic">process_name</span></code></dt>
<dd>
<p>Sends to the named process. Otherwise, the command is sent to all Logger processes in the default Logger group (<code>$GGL*</code>).</p>
</dd>
<dt><code>ADJUSTPRIORITY | NOADJUSTPRIORITY</code></dt>
<dd>
<p>Determines how Logger adjusts its priority in relation to the sender priority.</p>
<p>Logger checks at 1 minute intervals to determine if there was a high priority sender during the previous interval. If not, by default, Logger sets its priority back down to the original value.</p>
<p>To retain the value set by the sender, specify <code>ADJUSTPRIORITY</code>, as in:</p>
<pre>
GGSCI SEND LOGGER, ADJUSTPRIORITY
</pre>
<p>If <code>NOADJUSTPRIORITY</code> is in effect Logger does not increase its priority to match that of a higher priority sender.</p>
</dd>
<dt><code>ROLLOVER</code></dt>
<dd>
<p>Instructs Logger to move to the next log file in the log trail sequence.</p>
</dd>
<dt><code>REFRESH</code></dt>
<dd>
<p>Instructs Logger to read its <code>LOGCONF</code> record to pick up configuration option changes.</p>
</dd>
<dt><code>PROCESSINFO</code></dt>
<dd>
<p>Instructs Logger to return input and output statistics, lag, and other information to the screen. Optionally, include <code>DETAIL</code> to report process details.</p>
</dd>
<dt><code>LOGFILECLOSEDELAY</code></dt>
<dd>
<p>Sets the time to delay closing the old file when rolling to a new one. Logger starts the timer, writes to the new file and closes the old file when the timer is reached or when it rolls to another new file. The default value is 120 seconds.</p>
</dd>
<dt><code>LOGINFO</code></dt>
<dd>
<p>Displays information on Logger's current log file.</p>
</dd>
<dt><code>FLUSHSTATS</code></dt>
<dd>
<p>Instructs Logger to output current process statistics to the log trail. Optionally, include <code>RESET</code> to reset all statistics counters to zero.</p>
<p>You can specify one of the following filters per <code>SEND LOGGER FLUSHSTATS</code> command.</p>
<ul>
<li>
<p><code>FILTERPROCESS</code> <code><span class="codeinlineitalic">process_name</span></code></p>
</li>
<li>
<p><code>FILTERPROGRAM</code> <code><span class="codeinlineitalic">program_name</span></code></p>
</li>
<li>
<p><code>FILTERLIBRARY</code> <code><span class="codeinlineitalic">library_name</span></code></p>
</li>
</ul>
<p>These allow you to restrict flushed information to the specified process, program, or library. The name is the specified process, program, library, or a wildcard. Use only one of these options.</p>
</dd>
<dt><code>GETSTATS</code></dt>
<dd>
<p>Outputs current process statistics to the screen.</p>
<p>If you specify <code>GETSTATS</code>, you must specify either <code>TRACESTATS</code> or <code>TRACEPROCESSIOS</code> in the Logger parameter file.</p>
<p>Optionally, include <code>RESET</code> to reset all statistics counters to zero.</p>
<p>You can specify one of the following filters per <code>SEND LOGGER GETSTATS</code> command.</p>
<ul>
<li>
<p><code>FILTERPROCESS</code> <code><span class="codeinlineitalic">process_name</span></code></p>
</li>
<li>
<p><code>FILTERPROGRAM</code> <code><span class="codeinlineitalic">program_name</span></code></p>
</li>
<li>
<p><code>FILTERLIBRARY</code> <code><span class="codeinlineitalic">library_name</span></code></p>
</li>
</ul>
<p>These allow you to restrict flushed information to the specified process, program, or library. The name is the specified process, program, library, or a wildcard. Use only one of these options.</p>
</dd>
<dt><code>GETLOGFILECLOSEDELAY</code></dt>
<dd>
<p>Outputs the current value for <code>LOGFILECLOSEDELAY</code>.</p>
</dd>
<dt><code>HOTSWAP</code> <code><span class="codeinlineitalic">object_name</span></code></dt>
<dd>
<p>Instructs Logger to use the specified object file. Allows a running Logger to be changed to a different Logger object.</p>
<p><span class="bold">Caution:</span> The <code>HOTSWAP</code> command needs to be performed in conjunction with manual steps used to upgrade <code>BASELIB</code> as part of the upgrade process.</p>
</dd>
</dl>
<hr />
<a id="sthref113"></a>
<h3 class="refsect2">START LOGGER</h3>
<p>Use <code>START LOGGER</code> to start a group of Logger processes. By default, this group is <code>$GGL</code>. If some log processes are running, <code>START LOGGER</code> begins the ones that are down.</p>
<p class="titleinrefsubsect"><a id="sthref114"></a>Syntax</p>
<pre>
START LOGGER [, NAME <span class="codeinlineitalic">process_name</span>]
</pre>
<dl>
<dt>NAME <code><span class="codeinlineitalic">process_name</span></code></dt>
<dd>
<p>The name of the Logger process, such as <code>$GGL</code>. To start a particular process within the group name specify the full name of the process, such as <code>$GGL01</code>.</p>
</dd>
</dl>
<hr />
<a id="sthref115"></a>
<h3 class="refsect2">STATUS LOGGER</h3>
<p>Use <code>STATUS LOGGER</code> to obtain process status for the specified Logger process.</p>
<p class="titleinrefsubsect"><a id="sthref116"></a>Syntax</p>
<pre>
STATUS LOGGER [,NAME <span class="codeinlineitalic">process_name</span>]
</pre>
<dl>
<dt><code>NAME</code> <code><span class="codeinlineitalic">process_name</span></code></dt>
<dd>
<p>Provides the status of a particular process within the group, such as <code>$GGL01</code>.</p>
</dd>
</dl>
<hr />
<a id="sthref117"></a>
<h3 class="refsect2">STOP LOGGER</h3>
<p>Use this command to stop a group of Logger processes. By default, this group is <code>$GGL</code>.</p>
<p>If some log processes are down, <code>STOP LOGGER</code> brings down the remainder. Use this command cautiously, since no data is logged while log processes are down. When issuing this command, you will be prompted to specify whether you wish to continue.</p>
<p>Use <code>STOP LOGGER</code> instead of stopping log processes individually from TACL. By default, Manager restarts log processes stopped from TACL.</p>
<p class="titleinrefsubsect"><a id="sthref118"></a>Syntax</p>
<pre>
STOP LOGGER [, NAME <span class="codeinlineitalic">process_name</span>] [!]
</pre>
<dl>
<dt><code>NAME</code> <code><span class="codeinlineitalic">process_name</span></code></dt>
<dd>
<p>To stop a particular process within the group, specify the full name of the process (for example, <code>$GGL01</code>).</p>
</dd>
<dt><code>!</code></dt>
<dd>
<p>When you issue <code>STOP LOGGER</code>, with or without options, you are prompted to confirm the operation. To override the prompt, include <code>!</code> (exclamation point) in the command argument.</p>
</dd>
</dl>
</div>
<!-- class="refsect1" -->
<a id="i1118511"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">Trail commands</h2>
<p>Trail commands allow you to create and associate a sequence of local or remote trails with a particular Extract group. This is particularly useful in online processing to purge or transfer old Oracle GoldenGate trails without bringing down the associated Extract process.</p>
<p>Use <code>RMTTRAIL</code> commands to create and manage trails on remote systems, and use <code>EXTTRAIL</code> commands to create and manage local Oracle GoldenGate trails.</p>
<a id="i1107349"></a>
<hr />
<h3 class="refsect2">ADD EXTTRAIL</h3>
<p>Use <code>ADD EXTTRAIL</code> to create a local trail, associate it with an Extract group, and assign trail attributes. If the trail already exists, GGSCI rejects the <code>ADD</code> command.</p>
<p class="titleinrefsubsect"><a id="sthref119"></a>Syntax</p>
<pre>
ADD EXTTRAIL <span class="codeinlineitalic">trail_name</span>, EXTRACT <span class="codeinlineitalic">group_name</span> 
[, OWNER <span class="codeinlineitalic">group_number</span>, <span class="codeinlineitalic">user_number</span>] [, SECURE "<span class="codeinlineitalic">rwep</span>"]
[, EXTENTS (<span class="codeinlineitalic">primary</span>, <span class="codeinlineitalic">secondary</span>, <span class="codeinlineitalic">maximum</span>) | MEGABYTES <span class="codeinlineitalic">number</span>]
[, MAXFILES <span class="codeinlineitalic">num_files</span>]
[, SEQNO <span class="codeinlineitalic">number</span>]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">trail_name</span></code></dt>
<dd>
<p>The fully qualified trail name: $<code><span class="codeinlineitalic">vol</span></code>.<code><span class="codeinlineitalic">subvol</span></code>.<code><span class="codeinlineitalic">trail_prefix</span></code>. The <code><span class="codeinlineitalic">trail_prefix</span></code> must be two characters long. Each file in the trail is automatically identified by the prefix and a six-digit serial number. The parameter file for <code><span class="codeinlineitalic">group_name</span></code> must have a matching <code>EXTTRAIL</code> <code><span class="codeinlineitalic">trail_name</span></code> parameter.</p>
</dd>
<dt><code>EXTRACT</code>&nbsp;<code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>Specifies the Extract group to which the <code>EXTTRAIL</code> is bound. Only one group can write to an associated trail.</p>
</dd>
<dt><code>EXTENTS</code> (<code><span class="codeinlineitalic">primary</span></code>, <code><span class="codeinlineitalic">secondary</span></code>, <code><span class="codeinlineitalic">maximum</span></code>) | <code>MEGABYTES</code> <code><span class="codeinlineitalic">number</span></code></dt>
<dd>
<p>See <a href="#i1121511">"Specifying file size"</a>.</p>
</dd>
<dt><code>MAXFILES</code> <code><span class="codeinlineitalic">num_files</span></code></dt>
<dd>
<p>See <a href="#i1107435">"Specifying a maximum number of files"</a>.</p>
</dd>
<dt><code>OWNER</code> <code><span class="codeinlineitalic">group_number</span></code>, <code><span class="codeinlineitalic">user_number</span></code> <code>SECURE</code> "<code><span class="codeinlineitalic">rwep</span></code>"</dt>
<dd>
<p>See <a href="#i1107468">"Specifying security"</a>.</p>
</dd>
<dt><code>SEQNO</code> <code><span class="codeinlineitalic">number</span></code></dt>
<dd>
<p>See <a href="#i1121111">"Specifying sequence number"</a>.</p>
</dd>
</dl>
<p>See the <a class="olink GNSAD" href="../GNSAD/toc.htm"><span class="italic">Administering Oracle GoldenGate for HP NonStop (Guardian)</span></a> for more information on managing trails.</p>
<p class="titleinrefsubsect"><a id="i1121511"></a>Specifying file size</p>
<p>Control file size with one of the following options:</p>
<ul>
<li>
<p>Use the <code>EXTENTS</code> <code><span class="codeinlineitalic">primary</span></code>, <code><span class="codeinlineitalic">secondary</span></code>, <code><span class="codeinlineitalic">maximum</span></code> option to specify extent sizes for individual trails. Default extent sizes are 64, 128 and 512.</p>
</li>
<li>
<p>Use the <code>MEGABYTES</code> <code><span class="codeinlineitalic">number</span></code> option to specify the maximum number of megabytes per file in the trail. The default is 134 megabytes, and the maximum is 2000. To allow the Extract <code>ROLLOVER</code> parameter to determine when new files are created, set <code><span class="codeinlineitalic">number</span></code> to a large number, such as 1000 megabytes.</p>
</li>
</ul>
<p class="titleinrefsubsect2"><a id="sthref120"></a>Examples</p>
<dl>
<dd><a id="sthref121"></a></dd>
<dt class="seghead">Example 1&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>This example adds a trail with a maximum size of 300 megabytes.</p>
<pre>
ADD EXTTRAIL $DATA.GGSDAT.EX, EXTRACT FINANCE, MEGABYTES 300
</pre></dd>
<dd><a id="sthref122"></a></dd>
<dt class="seghead">Example 2&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>This example adds a trail with the extents set to <code>10</code> for primary and secondary and <code>16</code> for the maximum.</p>
<pre>
ADD EXTTRAIL $DATA1.EXTDAT.EX, EXTRACT FINANCE, EXTENTS (10,10,16)
</pre></dd>
</dl>
<p class="titleinrefsubsect"><a id="i1107435"></a>Specifying a maximum number of files</p>
<p>Use the <code>MAXFILES</code> <code><span class="codeinlineitalic">num_files</span></code> option to specify the maximum number of files that can exist in a trail. The default for <code>MAXFILES</code> is 100.</p>
<p class="titleinrefsubsect2"><a id="sthref123"></a>Example</p>
<p>This example adds a trail with a maximum of 20 files.</p>
<pre>
ADD EXTTRAIL $DATA1.EXTDAT.EX, EXTRACT FINANCE, MAXFILES 20
</pre>
<p class="titleinrefsubsect"><a id="i1107468"></a>Specifying security</p>
<p>Specify security measures to restrict access to Oracle GoldenGate trails. If you don't specify security, the defaults are assumed.</p>
<ul>
<li>
<p>Use <code>OWNER</code> <code><span class="codeinlineitalic">group_number</span></code>, <code><span class="codeinlineitalic">user_number</span></code> to specify the NonStop group ID and user ID of the person who started the GGSCI process.</p>
</li>
<li>
<p>Use <code>SECURE "rwep</code>" to specify the default Guardian security attributes (read, write, execute, purge) of the person who started the GGSCI process.</p>
</li>
</ul>
<p class="titleinrefsubsect2"><a id="sthref124"></a>Example</p>
<p>This example specifies a trail that is owned by user <code>100, 23</code> and can be read by anyone in the network in group <code>100.</code></p>
<pre>
ADD EXTTRAIL $DATA1.EXTDAT.EX, EXTRACT FINANCE, OWNER 100,23, SECURE "CUUU"
</pre>
<p class="titleinrefsubsect"><a id="i1121111"></a>Specifying sequence number</p>
<p>Specify the trail sequence number for the first file in the trail. Do not include any zero padding.</p>
<p class="titleinrefsubsect2"><a id="sthref125"></a>Example</p>
<p>The following example specifies that the first file in the trail will be <code>ex000003</code>.</p>
<pre>
ADD EXTTRAIL $DATA1.EXTDAT.EX, EXTRACT FINANCE, SEQNO 3
</pre>
<p>Use <code>SEQNO</code> during troubleshooting when Replicat needs to be repositioned to a certain trail sequence number. This eliminates the need to alter Replicat to read the required sequence number.</p>
<a id="i1107486"></a>
<hr />
<h3 class="refsect2">ADD RMTTRAIL</h3>
<p><code>ADD</code> <code>RMTTRAIL</code> creates a remote Oracle GoldenGate trail on a remote system, assigns a maximum size to each file, and associates the file with a particular group. Rolling over from one sequence to the next can be controlled using the maximum size allowed, or by using the <code>EXTRACT</code> <code>ROLLOVER</code> startup parameter or <code>ETROLLOVER</code> option of the GGSCI <code>ALTER</code> <code>EXTRACT</code> command.</p>
<p>In the parameter file, specify a <code>RMTHOST</code> entry before any <code>RMTTRAIL</code> entries to identify the remote system and TCP/IP port.</p>
<p class="titleinrefsubsect"><a id="sthref126"></a>Syntax</p>
<pre>
ADD RMTTRAIL <span class="codeinlineitalic">trail_name</span>, EXTRACT <span class="codeinlineitalic">group_name</span> 
[, MEGABYTES <span class="codeinlineitalic">number</span>]
[, SEQNO <span class="codeinlineitalic">number</span>]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">trail_name</span></code></dt>
<dd>
<p>The fully qualified trail name: <code><span class="codeinlineitalic">$vol.subvol.trail_prefix</span></code>. The <code><span class="codeinlineitalic">trail_prefix</span></code> must be two characters long. Each file in the trail is automatically identified by the prefix and a six-digit serial number. The <code><span class="codeinlineitalic">trail_name</span></code> must have a matching entry in the Replicat parameter file.</p>
<p>The name you specify here must be the same name you specify for the <code>RMTTRAIL</code> parameter in the Extract parameter file.</p>
<p>Remote trails are used over TCP/IP connections only. Do not use when you are transmitting a trail over Expand even when the remote system is also connected with Expand. To specify a trail on a different NonStop node over an Expand connection, use <code>ADD EXTTRAIL</code>.</p>
</dd>
<dt><code>EXTRACT</code> <code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group to which the <code>RMTTRAIL</code> is bound. Only one group can output extracted data to each trail.</p>
</dd>
<dt><code>MEGABYTES</code> <code><span class="codeinlineitalic">number</span></code></dt>
<dd>
<p>Optional. The maximum number of megabytes per file in the trail. The default is 30 megabytes and the maximum is 2000. To allow the Extract <code>ROLLOVER</code> parameter to determine when new files are created, set <code><span class="codeinlineitalic">number</span></code> to a large number, such as 1000 megabytes.</p>
</dd>
<dt><code>SEQNO</code> <code><span class="codeinlineitalic">number</span></code></dt>
<dd>
<p>Optional. Specifies the trail sequence number for the first file in the trail. Do not include any zero padding. Use <code>SEQNO</code> during troubleshooting when Replicat needs to be repositioned to a certain trail sequence number. It eliminates the need to alter Replicat to read the required sequence number.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref127"></a>Examples</p>
<dl>
<dd><a id="sthref128"></a></dd>
<dt class="seghead">Example 1&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The following example illustrates how to add three remote Oracle GoldenGate trails; the first trail residing on UNIX, the second on a Windows platform, and the third on NonStop.</p>
<pre>
ADD RMTTRAIL /usr/extdat/xx, EXTRACT FINANCE, MEGABYTES 30
ADD RMTTRAIL c:\ggsdat\ex, EXTRACT FINANCE, MEGABYTES 30
ADD RMTTRAIL $DATA.GGSDAT.RT, EXTRACT FINANCE, MEGABYTES 30
</pre></dd>
<dd><a id="sthref129"></a></dd>
<dt class="seghead">Example 2&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The following example specifies that the first file in the trail will be <code>rt000003</code>.</p>
<pre>
ADD RMTTRAIL $DATA1.GGSDAT.RT, EXTRACT FINANCE, SEQNO 3
</pre></dd>
</dl>
<hr />
<a id="sthref130"></a>
<h3 class="refsect2">ALTER EXTTRAIL</h3>
<p><code>ALTER EXTTRAIL</code> changes attributes for an existing <code>EXTTRAIL</code>.</p>
<p class="titleinrefsubsect"><a id="sthref131"></a>Syntax</p>
<pre>
ALTER EXTTRAIL <span class="codeinlineitalic">trail_name</span>, [, <span class="codeinlineitalic">options</span>]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">trail_name</span></code></dt>
<dd>
<p>The fully qualified trail name: <code><span class="codeinlineitalic">$vol.subvol.trail_prefix</span></code>. The <code><span class="codeinlineitalic">trail_prefix</span></code> must be two characters long. Each file in the trail is automatically identified by the prefix and a six-digit serial number.</p>
</dd>
<dt><code><span class="codeinlineitalic">options</span></code></dt>
<dd>
<p><code>ALTER EXTTRAIL</code> can be used with the following options:</p>
<ul>
<li>
<p><code>EXTENTS</code> (<code><span class="codeinlineitalic">primary</span></code>, <code><span class="codeinlineitalic">secondary</span></code>, <code><span class="codeinlineitalic">maximum</span></code>) | <code>MEGABYTES</code> <code><span class="codeinlineitalic">number</span></code></p>
</li>
<li>
<p><code>MAXFILES</code> <code><span class="codeinlineitalic">num_files</span></code></p>
</li>
<li>
<p><code>OWNER</code> <code><span class="codeinlineitalic">group_number</span></code>, <code><span class="codeinlineitalic">user_number</span></code> <code>SECURE</code> "<code><span class="codeinlineitalic">rwep</span></code>"</p>
</li>
</ul>
<p><code>SEQNO</code> is not a valid option for <code>ALTER EXTTRAIL</code>.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref132"></a>Example</p>
<pre>
ALTER EXTTRAIL $DATA1.EXT1.AA, MAXFILES 50
</pre>
<hr />
<a id="sthref133"></a>
<h3 class="refsect2">ALTER RMTTRAIL</h3>
<p><code>ALTER RMTTRAIL</code> changes attributes for an existing <code>RMTTRAIL</code>.</p>
<p class="titleinrefsubsect"><a id="sthref134"></a>Syntax</p>
<pre>
ALTER RMTTRAIL <span class="codeinlineitalic">trail_name</span> [, MEGABYTES <span class="codeinlineitalic">number</span>]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">trail_name</span></code></dt>
<dd>
<p>The fully qualified name of the remote trail: $<code><span class="codeinlineitalic">vol.subvol.trail_name</span></code>. A six-digit serial number will be appended to each file in the trail.</p>
<p>Remote trails are used over TCP/IP connections only. Do not specify an Expand node name in the <code><span class="codeinlineitalic">trail_name</span></code>, even if the remote system is also connected with Expand. To specify a trail on a different NonStop node over an Expand connection, use <code>ADD EXTTRAIL</code>.</p>
</dd>
<dt><code>MEGABYTES</code> <code><span class="codeinlineitalic">number</span></code></dt>
<dd>
<p>The maximum number of megabytes per file in the trail. The default is 30 megabytes, and the maximum is 2000. To allow the Extract <code>ROLLOVER</code> parameter to determine when new files are created, set <code><span class="codeinlineitalic">number</span></code> to a large number, such as 1000 megabytes.</p>
</dd>
</dl>
<hr />
<a id="sthref135"></a>
<h3 class="refsect2">DELETE EXTTRAIL</h3>
<p><code>DELETE EXTTRAIL</code> deletes checkpoints for a specified trail. It does not delete the trail or the files in the trail.</p>
<p class="titleinrefsubsect"><a id="sthref136"></a>Syntax</p>
<pre>
DELETE EXTTRAIL <span class="codeinlineitalic">trail_name</span> [!]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">trail_name</span></code></dt>
<dd>
<p>The fully qualified trail name: $<code><span class="codeinlineitalic">vol</span></code>.<code><span class="codeinlineitalic">subvol</span></code>.<code><span class="codeinlineitalic">trail_prefix</span></code>, or a wildcard specification, as in:</p>
<pre>
DELETE EXTTRAIL $DATA1.EXTDAT.AA
DELETE EXTTRAIL *
</pre></dd>
<dt><code>!</code></dt>
<dd>
<p>(exclamation point) Deletes trail files associated with each group.</p>
</dd>
</dl>
<hr />
<a id="sthref137"></a>
<h3 class="refsect2">DELETE RMTTRAIL</h3>
<p><code>DELETE RMTTRAIL</code> deletes checkpoints for a particular remote trail. It does not delete the files in the remote trail.</p>
<p class="titleinrefsubsect"><a id="sthref138"></a>Syntax</p>
<pre>
DELETE RMTTRAIL <span class="codeinlineitalic">trail_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">trail_name</span></code></dt>
<dd>
<p>The fully qualified name of the remote Oracle GoldenGate trail as in: <code>DELETE RMTTRAIL /usr/dat/aa.</code> A six-digit serial number will be appended to each file in the trail.</p>
<p>Remote trails are used over TCP/IP connections only. Do not specify an Expand node name in the <code><span class="codeinlineitalic">trail_name</span></code>, even if the remote system is also connected with Expand.</p>
</dd>
</dl>
<hr />
<a id="sthref139"></a>
<h3 class="refsect2">INFO EXTTRAIL</h3>
<p><code>INFO EXTTRAIL</code> retrieves configuration information about the trail.</p>
<p class="titleinrefsubsect"><a id="sthref140"></a>Syntax</p>
<pre>
INFO EXTTRAIL <span class="codeinlineitalic">trail_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">trail_name</span></code></dt>
<dd>
<p>The fully qualified trail name: $<code><span class="codeinlineitalic">vol</span></code>.<code><span class="codeinlineitalic">subvol</span></code>.<code><span class="codeinlineitalic">trail_prefix</span></code>, or a wildcard specification, as in:</p>
<pre>
INFO EXTTRAIL $DATA1.EXTDAT.AA
INFO EXTTRAIL *
</pre></dd>
</dl>
<hr />
<a id="sthref141"></a>
<h3 class="refsect2">INFO RMTTRAIL</h3>
<p><code>INFO RMTTRAIL</code> retrieves configuration information for the remote trail.</p>
<p class="titleinrefsubsect"><a id="sthref142"></a>Syntax</p>
<pre>
INFO RMTTRAIL <span class="codeinlineitalic">trail_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">trail_name</span></code></dt>
<dd>
<p>The name of the Oracle GoldenGate trail. <code><span class="codeinlineitalic">trail_name</span></code> must be a fully qualified file name, as in:</p>
<pre>
INFO RMTTRAIL $DATA6.GGSDAT.BB
</pre>
<p>Remote trails are used over TCP/IP connections only. Do not specify an Expand node name in the <code><span class="codeinlineitalic">trail_name</span></code>, even if the remote system is also connected with Expand. Use <code>INFO</code> <code>EXTTRAIL</code> instead.</p>
</dd>
</dl>
</div>
<!-- class="refsect1" -->
<a id="i1107921"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">Database commands</h2>
<p>Use database commands to get information about data definitions and tables.</p>
<hr />
<a id="sthref143"></a>
<h3 class="refsect2">CAPTURE TABLEDEFS</h3>
<p><code>CAPTURE TABLEDEFS</code> returns information for SQL tables and for Enscribe files when you provide a <code>DICTIONARY</code> name and <code>RECORD</code> definition name.</p>
<p class="titleinrefsubsect"><a id="sthref144"></a>Syntax</p>
<pre>
CAPTURE TABLEDEFS <span class="codeinlineitalic">file_name</span>
[, DICTIONARY <span class="codeinlineitalic">volume</span>.<span class="codeinlineitalic">subvol</span>]
[, RECORD <span class="codeinlineitalic">record_name</span>]
[, OPTIONS <span class="codeinlineitalic">command_line_options</span>]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">file_name</span></code></dt>
<dd>
<p>The fully qualified name of the file or table.</p>
</dd>
<dt><code>DICTIONARY</code> <code><span class="codeinlineitalic">volume</span></code>.<code><span class="codeinlineitalic">subvol</span></code></dt>
<dd>
<p>The volume and subvolume of the Enscribe dictionary. Required for Enscribe files.</p>
</dd>
<dt><code>RECORD</code> <code><span class="codeinlineitalic">record_name</span></code></dt>
<dd>
<p>The name of the record definition within the Enscribe dictionary. Required for Enscribe files.</p>
</dd>
<dt><code>OPTIONS</code> <code><span class="codeinlineitalic">command_line_options</span></code></dt>
<dd>
<p>Valid <code>DEFGEN</code> command-line options. See the chapter on <code>DEFGEN</code> arguments for more information.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>If the <code>OPTIONS</code> argument contains <code>EXPANDDDL</code> parameters, then it overrides the default <code>EXPANDDDL</code> parameters. Currently the default <code>EXPANDDDL</code> parameters are:</p>
<pre>
EXPANDDDL 
EXPANDGROUPARRAYS 
NOFIXLONGNAMES 
MAXCOLNAMELEN 130
</pre></div>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref145"></a>Example</p>
<pre>
CAPTURE TABLEDEFS \PROD.$DATA1.ACCTS.KEYSEQ
</pre>
<p>The result of the example command is the following display:</p>
<pre>
Definition for table \PROD.$DATA1.ACCTS.KEYSEQ 
Record length: 198 
Syskey: 0 
Columns: 13 

   TS           LARGEINT  PK
   RECNUM       INT       PK
   SYSNAME      CHAR      (8)
   TEXT         CHAR      (64)
   VAL1         LARGEINT
   VAL2         LARGEINT
   COL_COMPUTE  LARGEINT
   I16          SMALLINT
   I32          INT
   I64          LARGEINT
   I32_TOTAL    INT
   JTS          LARGEINT
   JTS_TEXT     CHAR      (64)
</pre>
<hr />
<a id="sthref146"></a>
<h3 class="refsect2">ENCRYPT PASSWORD</h3>
<p>Use <code>ENCRYPT PASSWORD</code> to encrypt a login password for an Oracle GoldenGate database user and, optionally, supply an encryption key for password lookup. To specify the encrypted password in a parameter file, use the <code>LOGON</code> parameter (see <a href="gg_parameters.htm#i944077">"LOGON"</a>).</p>
<p>For more information about Oracle GoldenGate security, see the <a class="olink GNSAD" href="../GNSAD/toc.htm"><span class="italic">Administering Oracle GoldenGate for HP NonStop (Guardian)</span></a>.</p>
<p class="titleinrefsubsect"><a id="sthref147"></a>Syntax</p>
<pre>
ENCRYPT PASSWORD <span class="codeinlineitalic">password</span> [ENCRYPTKEY {DEFAULT | <span class="codeinlineitalic">keyname</span>}]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">password</span></code></dt>
<dd>
<p>The login password. The encrypted password is output to the screen. You can copy the encrypted password and paste it into the <code>LOGON</code> parameter in a parameter file.</p>
</dd>
<dt><code>ENCRYPTKEY</code> {<code>DEFAULT</code> | <code><span class="codeinlineitalic">keyname</span></code>}</dt>
<dd>
<p>Optional, specifies one of the following:</p>
<dl>
<dt><code>DEFAULT</code></dt>
<dd>
<p>Specifies a default encryption key that is randomly generated by Oracle GoldenGate and automatically decrypted on the target system.</p>
</dd>
<dt><code><span class="codeinlineitalic">keyname</span></code></dt>
<dd>
<p>Specifies an encryption key contained in the <code>ENCKEYS</code> lookup file. Oracle GoldenGate uses the key name to look up the actual password in the file. To use the <code><span class="codeinlineitalic">keyname</span></code> option, you must create the <code>ENCKEYS</code> file on each system (if it does not exist) and create entries in the file for the keys.</p>
</dd>
</dl>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref148"></a>Example</p>
<pre>
ENCRYPT PASSWORD ny14072 ENCRYPTKEY superkey2
</pre>
<hr />
<a id="sthref149"></a>
<h3 class="refsect2">INFO DDLDEFS</h3>
<p>Use <code>INFO DDLDEFS</code> to retrieve information for Enscribe data dictionary definitions.</p>
<p class="titleinrefsubsect"><a id="sthref150"></a>Syntax</p>
<pre>
INFO DDLDEFS <span class="codeinlineitalic">def_name</span> [, DDLDEFS <span class="codeinlineitalic">def_name</span>,...,] 
DICT <span class="codeinlineitalic">subvolume</span> 
[, DEFSONLY | RECSONLY]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">def_name</span></code></dt>
<dd>
<p>The name of a DDL definition or record. You can specify <code><span class="codeinlineitalic">def_name</span></code> multiple times to display multiple definitions or records. Wildcards are accepted.</p>
</dd>
<dt><code>DICT</code> <code><span class="codeinlineitalic">subvolume</span></code></dt>
<dd>
<p>The subvolume in which the dictionary is located.</p>
</dd>
<dt><code>DEFSONLY</code></dt>
<dd>
<p>Specifies that GGSCI should return only definitions, not records.</p>
</dd>
<dt><code>RECSONLY</code></dt>
<dd>
<p>Specifies that GGSCI should return only records, not definitions.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref151"></a>Example</p>
<p>This example lists each DDL record or definition which begins with <code>ACC</code>, or which ends in <code>REC</code> from the dictionary located in <code>$DATA3.MYDICT</code>.</p>
<pre>
INFO DDLDEFS ACC*, DDLDEFS *REC, DICT $DATA3.MYDICT
</pre>
<hr />
<a id="sthref152"></a>
<h3 class="refsect2">INFO FILES</h3>
<p>Use <code>INFO FILES</code> to retrieve information about files or tables on the system; then filter the resulting list according to different criteria.</p>
<p class="titleinrefsubsect"><a id="sthref153"></a>Syntax</p>
<pre>
INFO FILES <span class="codeinlineitalic">file_name</span>, [FILES <span class="codeinlineitalic">file_name</span>,...]
[,TMF | 
NONTMF | 
ENSCRIBE | 
SQL | 
EXCLUDELASTDIGIT |
CODE <span class="codeinlineitalic">file_code</span> | 
TANDEMFILES | 
UNSTRUCT]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">file_name</span></code></dt>
<dd>
<p>A file name or wildcard specification. Multiple entries of <code><span class="codeinlineitalic">file_name</span></code> are allowed.</p>
</dd>
<dt><code>TMF</code></dt>
<dd>
<p>Returns TMF audited files.</p>
</dd>
<dt><code>NONTMF</code></dt>
<dd>
<p>Returns files not audited by TMF.</p>
</dd>
<dt><code>ENSCRIBE</code></dt>
<dd>
<p>Returns Enscribe files.</p>
</dd>
<dt><code>SQL</code></dt>
<dd>
<p>Returns NonStop SQL tables.</p>
</dd>
<dt><code>EXCLUDELASTDIGIT</code></dt>
<dd>
<p>Excludes file names which end in a digit (for the purpose of filtering out alternate key files that end in a digit).</p>
</dd>
<dt><code>CODE</code> <code><span class="codeinlineitalic">file_code</span></code></dt>
<dd>
<p>Returns files with <code><span class="codeinlineitalic">file_code</span></code> only. Multiple entries of <code>CODE</code> are allowed.</p>
</dd>
<dt><code>TANDEMFILES</code></dt>
<dd>
<p>Returns NonStop files (file codes between 1 and 1000) only.</p>
</dd>
<dt><code>UNSTRUCT</code></dt>
<dd>
<p>Restricts the list to unstructured files.</p>
</dd>
</dl>
</div>
<!-- class="refsect1" -->
<a id="i1107835"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">Audit trail commands</h2>
<p>Use <code>ATCONFIG</code> commands to protect TMF audit trails until Extract has processed them. Manager uses <code>ATCONFIG</code> commands to determine how to preserve audit files that are needed by Extracts.</p>
<p>The <code>ATCONFIG</code> command specification can be abbreviated as <code>AT</code>.</p>
<p>For details about managing audit resources, see the <a class="olink GNSAD" href="../GNSAD/toc.htm"><span class="italic">Administering Oracle GoldenGate for HP NonStop (Guardian)</span></a>.</p>
<hr />
<a id="sthref154"></a>
<h3 class="refsect2">ADD ATCONFIG</h3>
<p>Use <code>ADD ATCONFIG</code> to configure audit management options. With the <code>ADD ATCONFIG</code> options, you can:</p>
<ul>
<li>
<p>Duplicate to an alternative subvolume</p>
</li>
<li>
<p>Duplicate all audit files or a specified number of files</p>
</li>
<li>
<p>Purge audit trails from the alternative subvolume</p>
</li>
</ul>
<p>You can override any previously specified option by adding <code>NO</code>, as in <code>NO PURGE</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>Contact Oracle GoldenGate support before using the <code>DUP</code>, <code>DUPFILES</code>, or <code>PURGE</code> options. These options require storage that is not necessary if large enough audit trails can be specified when TMF is configured.</p>
</div>
<p class="titleinrefsubsect"><a id="sthref155"></a>Syntax</p>
<pre>
ADD ATCONFIG <span class="codeinlineitalic">at_name</span>
[, ALTLOC <span class="codeinlineitalic">alt_subvolume</span>] 
[, DUP | NO DUP | 
DUPFILES <span class="codeinlineitalic">num_files</span> | NO DUPFILES | 
PURGE | NO PURGE]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">at_name</span></code></dt>
<dd>
<p>The audit trail designation, i.e. <code>MAT</code>, <code>AUX</code><code><span class="codeinlineitalic">nn</span></code>. The audit trail can also be expressed as a wildcard.</p>
</dd>
<dt><code>ALTLOC</code> <code><span class="codeinlineitalic">alt_subvolume</span></code></dt>
<dd>
<p>Identifies an alternative subvolume to which audit trails are duplicated or restored from tape. <code>ALTLOC</code> directs Extract to read audit from the alternative subvolume rather than from the production area.</p>
<p>Specify up to seven characters for the volume name.</p>
</dd>
<dt><code>DUP | NODUP</code></dt>
<dd>
<p>Duplicates audit files to the volume specified by <code>ALTLOC</code>. <code>DUP</code> has no effect if the file already exists as a TMF disk dump. <code>DUP</code> copies audit files that are still needed by an Extract group.</p>
</dd>
<dt><code>DUPFILES</code> <code><span class="codeinlineitalic">num_files</span></code> | <code>NO DUPFILES</code></dt>
<dd>
<p>Duplicates up to <code><span class="codeinlineitalic">num_files</span></code> audit files to the volume specified by <code>ALTLOC</code>. Unlike <code>DUP, DUPFILES</code> limits the number of files that can be copied to the alternative subvolume. When <code><span class="codeinlineitalic">num_files</span></code> is reached on the alternative subvolume, the oldest audit file is purged to make room for the newest file. Enter <code>ALTLOC</code> when this option is used.</p>
</dd>
<dt><code>PURGE | NOPURGE</code></dt>
<dd>
<p>Purges audit trails from the alternative subvolume when they are no longer needed. <code>PURGE</code> has no effect when <code>DUPFILES</code> is specified since <code>DUPFILES</code> keeps a constant number of backup files.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref156"></a>Example</p>
<p>The following examples show the <code>MAT</code> trail being added and an <code>AUX</code> trail being altered.</p>
<pre>
ADD AT MAT DUPFILES 6, ALTLOC $DATA1.ALTTMF
ALTER AT AUX01, ALTLOC $DATA1.EXTRACT, PURGE, DUP
</pre>
<hr />
<a id="sthref157"></a>
<h3 class="refsect2">ALTER ATCONFIG</h3>
<p>Use <code>ALTER</code> to change existing audit trail configuration parameters.</p>
<p class="titleinrefsubsect"><a id="sthref158"></a>Syntax</p>
<pre>
ALTER ATCONFIG <span class="codeinlineitalic">at_name</span>
[, ALTLOC <span class="codeinlineitalic">alt_subvolume</span>] 
[, DUP | NO DUP | 
DUPFILES <span class="codeinlineitalic">num_files</span> | NO DUPFILES | 
PURGE | NO PURGE]
</pre>
<p>See the <code>ADD ATCONFIG</code> command for option descriptions.</p>
<hr />
<a id="sthref159"></a>
<h3 class="refsect2">DELETE ATCONFIG</h3>
<p>Use <code>DELETE ATCONFIG</code> to delete audit management configuration. After this command is carried out, Manager will not manage the associated audit trails.</p>
<p class="titleinrefsubsect"><a id="sthref160"></a>Syntax</p>
<pre>
DELETE ATCONFIG <span class="codeinlineitalic">at_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">at_name</span></code></dt>
<dd>
<p>The audit trail designation, i.e. <code>MAT</code>, <code>AUX</code><code><span class="codeinlineitalic">nn</span></code>. The audit trail can also be expressed as a wildcard.</p>
</dd>
</dl>
<hr />
<a id="sthref161"></a>
<h3 class="refsect2">INFO ATCONFIG</h3>
<p>Use <code>INFO ATCONFIG</code> to view processing information about audit trails that are defined by <code>ADD ATCONFIG</code> or <code>ALTER ATCONFIG</code>.</p>
<p class="titleinrefsubsect"><a id="sthref162"></a>Syntax</p>
<pre>
INFO ATCONFIG <span class="codeinlineitalic">at_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">at_name</span></code></dt>
<dd>
<p>The audit trail designation, i.e. <code>MAT</code>, <code>AUX</code><code><span class="codeinlineitalic">nn</span></code>. The audit trail can also be expressed as a wildcard.</p>
</dd>
</dl>
<hr />
<a id="sthref163"></a>
<h3 class="refsect2">STATUS AUDITTRAIL</h3>
<p>Use <code>STATUS AUDITTRAIL</code> to determine which audit trail files are still required by any Extract group. This command determines if a file exists, then supplies:</p>
<ul>
<li>
<p>The location of the file.</p>
</li>
<li>
<p>Whether it is the original audit file (<code>ORIG</code>), a duplicate audit file (<code>DUP</code>), or a dump (<code>DUMP</code>).</p>
</li>
<li>
<p>Whether the file is on tape or disk. If audit is on tape, this provides the information needed to restore dumps prior to processing &mdash; useful when an operator is not available while Extract processes are running.</p>
</li>
</ul>
<p class="titleinrefsubsect"><a id="sthref164"></a>Syntax</p>
<pre>
STATUS AUDITTRAIL <span class="codeinlineitalic">at_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">at_name</span></code></dt>
<dd>
<p>The audit trail designation, i.e. <code>MAT</code>, <code>AUX</code><code><span class="codeinlineitalic">nn</span></code>. The audit trail can also be expressed as a wildcard.</p>
</dd>
</dl>
</div>
<!-- class="refsect1" -->
<a id="i1123088"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">Remote checkpoint commands</h2>
<p>Use <code>REMOTECHKPT</code> when both of the following apply:</p>
<ul>
<li>
<p>The Manager process is configured to perform local trail maintenance using checkpoints</p>
</li>
<li>
<p>The local trail is being processed by programs on remote systems</p>
</li>
</ul>
<p>If the <code>PURGEOLDEXTRACTS</code> parameter is set, Manager periodically examines checkpoint files and purges files that satisfy the rules of the <code>PURGEOLDEXTRACTS</code> parameter.</p>
<hr />
<a id="sthref165"></a>
<h3 class="refsect2">ADD REMOTECHKPT</h3>
<p>Use <code>ADD REMOTECHKPT</code> to tell Manager where to find checkpoints for Extract or Replicat processes running on remote systems. The Replicat checkpoint file is called <code>REPCTXT</code> and exists in the same subvolume where Oracle GoldenGate is installed, as in:</p>
<pre>
ADD REMOTECHKPT \NY.$DATA5.GGS.REPCTXT
</pre>
<p class="titleinrefsubsect"><a id="sthref166"></a>Syntax</p>
<pre>
ADD REMOTECHKPT <span class="codeinlineitalic">checkpoint_file</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">checkpoint_file</span></code></dt>
<dd>
<p>The checkpoint file to examine. The file name must include the remote node name.</p>
</dd>
</dl>
<hr />
<a id="sthref167"></a>
<h3 class="refsect2">DELETE REMOTECHKPT</h3>
<p><code>DELETE REMOTECHKPT</code> deletes a remote checkpoint reference.</p>
<p class="titleinrefsubsect"><a id="sthref168"></a>Syntax</p>
<pre>
DELETE REMOTECHKPT <span class="codeinlineitalic">checkpoint_file</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">checkpoint_file</span></code></dt>
<dd>
<p>The checkpoint file to examine.</p>
</dd>
</dl>
<hr />
<a id="sthref169"></a>
<h3 class="refsect2">INFO REMOTECHKPT</h3>
<p><code>INFO REMOTECHKPT</code> lists all remote checkpoint references.</p>
<p class="titleinrefsubsect"><a id="sthref170"></a>Syntax</p>
<pre>
INFO REMOTECHKPT <span class="codeinlineitalic">checkpoint_file</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">checkpoint_file</span></code></dt>
<dd>
<p>The checkpoint file to examine. You can specify a wildcard, as in <code>INFO</code> <code>REMOTECHKPT</code> <code>*</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsect1" -->
<a id="i1110018"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">TMF commands</h2>
<p>You can issue TMF commands for managing TMF dump information.</p>
<hr />
<a id="sthref171"></a>
<h3 class="refsect2">REFRESHTMFINFO</h3>
<p>Forces the TMF information to be refreshed.</p>
<p class="titleinrefsubsect"><a id="sthref172"></a>Syntax</p>
<pre>
REFRESHTMFINFO
</pre>
<hr />
<a id="sthref173"></a>
<h3 class="refsect2">TMFDUMPAGE</h3>
<p><code>TMFDUMPAGE</code> limits information returned by <code>TMFDUMPINFO</code> to dumps that are created during the specified number of days.</p>
<p class="titleinrefsubsect"><a id="sthref174"></a>Syntax</p>
<pre>
TMFDUMPAGE <span class="codeinlineitalic">num_days</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">num_days</span></code></dt>
<dd>
<p>The number of days for limiting TMF dump information. The default is 30 days.</p>
</dd>
</dl>
<hr />
<a id="sthref175"></a>
<h3 class="refsect2">TMFDUMPINFO</h3>
<p><code>TMFDUMPINFO</code> returns information about TMF dumps on the local system.</p>
<p class="titleinrefsubsect"><a id="sthref176"></a>Syntax</p>
<pre>
TMFDUMPINFO
</pre>
<hr />
<a id="sthref177"></a>
<h3 class="refsect2">TMFDUMPTABLEENTRIES</h3>
<p><code>TMFDUMPTABLEENTRIES</code> limits information returned by <code>TMFDUMPINFO</code> to the number of specified dumps.</p>
<p class="titleinrefsubsect"><a id="sthref178"></a>Syntax</p>
<pre>
TMFDUMPTABLEENTRIES <span class="codeinlineitalic">max_dumps</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">max_dumps</span></code></dt>
<dd>
<p>The number of dumps to display. The maximum allowed is 6000. The default is 1024 entries.</p>
</dd>
</dl>
<a id="i1108324"></a>
<hr />
<h3 class="refsect2">TMFREFRESHINTERVAL</h3>
<p>Sets the refresh interval in seconds and writes reports to <code>ENV</code>. When you set a refresh interval for GGSCI, it overrides the <code>TMFREFRESHINTERVAL</code> that may have been specified in the <code>GLOBALS</code>, Manager, or Extract parameter files. The override remains in effect for the duration of the current GGSCI session.</p>
<p class="titleinrefsubsect"><a id="sthref179"></a>Syntax</p>
<pre>
TMFREFRESHINTERVAL seconds
</pre>
<dl>
<dt><code><span class="codeinlineitalic">seconds</span></code></dt>
<dd>
<p>The refresh interval in seconds. The default is 15 minutes or the value set in the <code>GLOBALS</code> parameter file.</p>
</dd>
</dl>
<hr />
<a id="sthref180"></a>
<h3 class="refsect2">TMFTRAILINFO</h3>
<p>Use <code>TMFTRAILINFO</code> for diagnostic and informational purposes. Running <code>TMFTRAILINFO</code> will print information retrieved about the audit trails, such as the current active trail name and its enabled options.</p>
<p class="titleinrefsubsect"><a id="sthref181"></a>Syntax</p>
<pre>
TMFTRAILINFO
</pre>
<p class="titleinrefsubsect"><a id="sthref182"></a>Example</p>
<p>Sample output from a <code>TMFTRAILINFO</code> command:</p>
<pre>
\PROD.$AUDIT.ZTMFAT.AA 
MinFiles 2, MaxFiles 5, Auditdump On 
Active Vols $AUDIT 
Restore Vols $DATA11 
\MASTER.$DATA11.ZTMFAT.BB 
MinFiles 2, MaxFiles 5, Auditdump On 
Active Vols $DATA11 
Restore Vols $AUDIT 
</pre></div>
<!-- class="refsect1" -->
<a id="i1109582"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">Coordinator commands</h2>
<p>Use Coordinator commands to establish a Coordinator group to monitor distributed network transactions. <code>COORD</code> is an alias for <code>COORDINATOR</code> in these commands.</p>
<hr />
<a id="sthref183"></a>
<h3 class="refsect2">ADD COORDINATOR</h3>
<p>Use <code>ADD</code> <code>COORDINATOR</code> to add the process that will communicate with each node's Reader and Replicat processes to coordinate the application of distributed network transactions.</p>
<p class="titleinrefsubsect"><a id="sthref184"></a>Syntax</p>
<pre>
ADD COORDINATOR <span class="codeinlineitalic">group_name</span>
[, CPU <span class="codeinlineitalic">primary_cpu</span>] 
[, BACKUPCPU <span class="codeinlineitalic">cpu</span>] 
[, PRI priority]
[, PROCESS <span class="codeinlineitalic">process_name</span>] 
[, PARAMS <span class="codeinlineitalic">param_file_name</span>] 
[, PROGRAM <span class="codeinlineitalic">program_name</span>] 
[, REPORT <span class="codeinlineitalic">report_name</span>] 
[, DESC "<span class="codeinlineitalic">text</span>"]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name.</p>
</dd>
<dt><code>CPU</code> <code><span class="codeinlineitalic">primary_cpu</span></code></dt>
<dd>
<p>The primary CPU on which Coordinator runs. The default is the CPU on which Manager runs.</p>
</dd>
<dt><code>BACKUPCPU</code> <code><span class="codeinlineitalic">cpu</span></code></dt>
<dd>
<p>An alternative CPU on which Coordinator runs if the primary CPU becomes unavailable.</p>
</dd>
<dt><code>PRI</code> <code><span class="codeinlineitalic">priority</span></code></dt>
<dd>
<p>The NonStop priority for the process. This defaults to the NonStop priority assigned to the TACL process underlying the <code>ADD</code>.</p>
</dd>
<dt><code>PROCESS</code> <code><span class="codeinlineitalic">process_name</span></code></dt>
<dd>
<p>The default process name is <code>$GGCnn</code>, where <code>nn</code> represents the sequence of the process. Oracle GoldenGate recommends that you use the default, however, if you must specify an alternative process, you can do so with the <code>PROCESS</code> <code><span class="codeinlineitalic">process_name</span></code> option.</p>
</dd>
<dt><code>PARAMS</code> <code><span class="codeinlineitalic">param_file_name</span></code></dt>
<dd>
<p>Specifies the alternative parameter file name to be used. Enter the fully qualified path name for the parameter file.</p>
</dd>
<dt><code>PROGRAM</code> <code><span class="codeinlineitalic">program_name</span></code></dt>
<dd>
<p>Specifies the name of the program that Manager assigns when starting the process. Typically this is not entered, and Manager uses the default <code>$GGCnn</code> name. The <code>HOST</code> parameter in the <code>GLOBALS</code> files is used to determine the location of the default program.</p>
</dd>
<dt><code>REPORT</code> <code><span class="codeinlineitalic">report_name</span></code></dt>
<dd>
<p>Supplies an alternative report file name. The default report file name is <code><span class="codeinlineitalic">install_volume</span></code>.<code>GGSRPT</code>.<code><span class="codeinlineitalic">rpt_nam</span></code>e, where <code><span class="codeinlineitalic">rpt_name</span></code> represents the group name, such as <code>FINANCE.</code> Oracle GoldenGate creates an entry-sequenced file to hold each group's run results, and by default, the report name is the same as the group name.</p>
</dd>
<dt><code>DESC</code> "<code><span class="codeinlineitalic">text</span></code>"</dt>
<dd>
<p>Describes the Coordinator group.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref185"></a>Example</p>
<pre>
ADD COORDINATOR TRXCO, CPU 2, PRI 150, DESC "Network transaction coordinator for NY, FL, and LA"
</pre>
<hr />
<a id="sthref186"></a>
<h3 class="refsect2">ALTER COORDINATOR</h3>
<p>Use <code>ALTER</code> <code>COORDINATOR</code> to change the checkpoints for an <code>EXTTRAIL</code> or to change the properties of an existing Coordinator group. You can use <code>ALTER COORDINATOR</code> to change the attribute of any option that you specified with <code>ADD COORDINATOR</code>.</p>
<p class="titleinrefsubsect"><a id="sthref187"></a>Syntax</p>
<pre>
ALTER COORDINATOR <span class="codeinlineitalic">group_name</span>
[EXTTRAIL <span class="codeinlineitalic">trail_name</span>
{BEGIN <span class="codeinlineitalic">time</span> |, EXTSEQNO <span class="codeinlineitalic">seq_number</span>, EXTRBA <span class="codeinlineitalic">rba</span>}]
[, <span class="codeinlineitalic">options</span>]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name.</p>
</dd>
<dt><code>EXTTRAIL</code> | <code>EXTTRAILSOURCE</code> {<code>BEGIN</code> <code><span class="codeinlineitalic">time</span></code> | , <code>EXTSEQNO</code> <code><span class="codeinlineitalic">seq_number</span></code> , <code>EXTRBA</code> <code><span class="codeinlineitalic">rba</span></code>}</dt>
<dd>
<p>Specifies the starting point in the Oracle GoldenGate trail as a beginning time, transaction sequence, or relative byte address. The specified <code>EXTTRAIL</code> must match one of the trails defined in the Coordinator parameter file.</p>
</dd>
<dt><code><span class="codeinlineitalic">options</span></code></dt>
<dd>
<p>The <code>ADD</code> <code>COODINATOR</code> options can be altered with this command. See <code>ADD</code> <code>COORDINATOR</code> for details.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref188"></a>Example</p>
<pre>
ALTER COORDINATOR TRXCO, CPU 1, PRI 180
</pre>
<hr />
<a id="sthref189"></a>
<h3 class="refsect2">DELETE COORDINATOR</h3>
<p>Use <code>DELETE</code> <code>COORDINATOR</code> to remove a stopped Coordinator process from the system. <code>DELETE COORDINATOR</code> <code><span class="codeinlineitalic">group_name</span></code> removes the group and all checkpoints. Using the <code>EXTTRAIL</code> <code><span class="codeinlineitalic">trail_name</span></code> option deletes only the trail checkpoints, not the group.</p>
<p class="titleinrefsubsect"><a id="sthref190"></a>Syntax</p>
<pre>
DELETE COORDINATOR <span class="codeinlineitalic">group_name</span>
[EXTTRAIL <span class="codeinlineitalic">trail_name</span>]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name. Using this option without the <code>EXTTRAIL</code> deletes the group and all trail checkpoints.</p>
</dd>
<dt><code>EXTTRAIL</code> <code><span class="codeinlineitalic">trail_name</span></code></dt>
<dd>
<p>Deletes only the <code>EXTTRAIL</code> checkpoint.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref191"></a>Example</p>
<pre>
DELETE COORDINATOR TRXCO
</pre>
<hr />
<a id="sthref192"></a>
<h3 class="refsect2">INFO COORDINATOR</h3>
<p>Use <code>INFO</code> <code>COORDINATOR</code> to display information on the attributes of the Coordinator.</p>
<p class="titleinrefsubsect"><a id="sthref193"></a>Syntax</p>
<pre>
INFO COORDINATOR <span class="codeinlineitalic">group_name</span>
[, DETAIL]
[, SHOWCH]
[, PROGRAM]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name.</p>
</dd>
<dt><code>DETAIL</code></dt>
<dd>
<p>Reports Coordinator process run history, which includes starting and stopping points within the trail expressed as a time and the process parameters established by the <code>ADD</code> <code>COORDINATOR</code> command.</p>
<p>The default is to report the status of the Coordinator process (<code>STARTING, RUNNING, STOPPED</code> or <code>ABENDED</code>).</p>
</dd>
<dt><code>SHOWCH</code></dt>
<dd>
<p>Shows detailed historical checkpoints.</p>
</dd>
<dt><code>PROGRAM</code></dt>
<dd>
<p>Displays the name and location of the object that is running.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref194"></a>Example</p>
<p>The following is displayed from the command <code>INFO COORD TRXCO</code></p>
<pre>
Coord   TRXCO         Last Started 2010-12-01 15:59  Status RUNNING
Process  $GGC00       Checkpoint Lag: unknown
Checkpoints:
    Trail                  Time                         Seqno         RBA
\NY.$DATA1.GGSDAT.Z1    Updated at 2010-12-01 16:00:22.950722
                          2010-11-17 12:22:46.657637       0            0
                          2010-11-17 12:22:46.657637       0         1779
\LA.$DATA1.GGSDAT.EX    Updated at 2010-12-01 16:00:22.950722
                          2010-12-01 15:55:39.664490       0            0
                          2010-12-01 16:00:11.437578       3    148578373
</pre>
<hr />
<a id="sthref195"></a>
<h3 class="refsect2">SEND COORDINATOR</h3>
<p>Use <code>SEND COORDINATOR</code> to send a command to a running Coordinator process. Using <code>SEND</code> <code>COORDINATOR</code> you can perform the operations summarized in the table below.</p>
<p class="titleinrefsubsect"><a id="sthref196"></a>Syntax</p>
<pre>
SEND COORDINATOR <span class="codeinlineitalic">group_name</span> {
GETREADERINFO | 
GETTRANSINFO |
FORCECOMMIT <span class="codeinlineitalic">transaction_id</span> |
STATUS |
STOP}
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name.</p>
</dd>
<dt><code>GETREADERINFO</code></dt>
<dd>
<p>Displays information about the Reader processes and the trails being read.</p>
</dd>
<dt><code>GETTRANSINFO</code></dt>
<dd>
<p>Displays information on pending transactions.</p>
</dd>
<dt><code>FORCECOMMIT</code> <code><span class="codeinlineitalic">transaction_id</span></code></dt>
<dd>
<p>Allows the transaction to be committed even though not all required trails have received the entire transaction. If a network connection is lost, for example, the parts of the transaction that are available can be committed.</p>
<p><span class="bold">Note:</span> The ramifications of committing the partial transaction should be considered carefully before using <code>FORCECOMMIT</code>.</p>
</dd>
<dt><code>STATUS</code></dt>
<dd>
<p>Displays the current status of the Coordinator process.</p>
</dd>
<dt><code>STOP</code></dt>
<dd>
<p>Terminates the run gracefully. This command is preferable to stopping from TACL, which results in an <code>ABEND</code> status.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref197"></a>Examples</p>
<dl>
<dd><a id="sthref198"></a></dd>
<dt class="seghead">Example 1&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>An example of a display from <code>SEND</code> <code>COORD TRXCO</code> <code>GETTRANSINFO:</code></p>
<pre>
  279: 0 TransID 7926335489872297987  2010/11/17 12:22:47.068460
     Pending, Needed 2, Found 1, RefCount 1
     Bitmap 8000 0000 0000
  813: 0 TransID 7926335489872232451  2010/11/17 12:22:46.947382
     Pending, Needed 2, Found 1, RefCount 1
     Bitmap 8000 0000 0000
  825: 0 TransID 7926335489872363523  2010/11/17 12:22:47.317281
     Pending, Needed 2, Found 1, RefCount 1
     Bitmap 8000 0000 0000
  909: 0 TransID 7926335489872166915  2010/11/17 12:22:46.769463
     Pending, Needed 2, Found 1, RefCount 1
     Bitmap 8000 0000 0000
 1701: 0 TransID 7926335489872101379  2010/11/17 12:22:46.657637
     Pending, Needed 2, Found 1, RefCount 1
     Bitmap 8000 0000 0000
</pre></dd>
<dd><a id="sthref199"></a></dd>
<dt class="seghead">Example 2&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>An example of a display from <code>SEND</code> <code>COORD TRXCO</code> <code>GETREADERINFO:</code></p>
<pre>
Reader Information
 0 : \NY.$DATA1.GGSDAT.Z1, \NY.$ZRDR1, Node 109, POS 0,1779
     FastReads  Retries 0
     Current Transactions 5
     Oldest 7926335489872101379  2010/11/17 12:22:46.657637  0,1779
     Newest 7926335489872363523  2010/11/17 12:22:47.317281  0,4280
CurTransCount      5, LastRec 2010/12/01 16:01:34.104281
 Records           14, Bytes          924, Transactions           5
 1 : \LA.$DATA1.GGSDAT.EX, \LA.$ZRDR2, Node 109, POS 4,218437395
     FastReads  Retries 0
     No Current Transactions
CurTransCount      0, LastRec 2010/12/01 16:01:36.233081
 Records           11, Bytes          704, Transactions            0
Totals
Reader Requests           21, Records           25
Commit Requests            0
Force Commit 0
</pre></dd>
<dd><a id="sthref200"></a></dd>
<dt class="seghead">Example 3&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>An example of a display from <code>SEND</code> <code>COORD TRXCO</code> <code>FORCECOMMIT 7926335489872297987:</code></p>
<pre>
TransID '7926335489872297987' set committable
</pre></dd>
</dl>
<hr />
<a id="sthref201"></a>
<h3 class="refsect2">START COORDINATOR</h3>
<p>Use <code>START COORDINATOR</code> to start the Coordinator process. GGSCI routes the <code>START</code> request to Manager to start and monitor the process.</p>
<p><code>START</code> <code>COORDINATOR</code> uses the <code>READER</code> option in Coordinator parameter file to identify the Reader processes that must be started and the trails that will be monitored. The following is an example of such a file.</p>
<pre>
COORDINATOR TRXCO
FASTREADS
READER EXTTRAIL \NY.$DATA5.GGSDAT.AA, PROCESS $GGRD1, CPU 1, PRI 180
READER EXTTRAIL \LA.$DATA01.GGSDAT.BB, PROCESS $GGRD2
READER EXTTRAIL \FL.$DATA2.GGSDAT.CC, CPU 1, PRI 170
</pre>
<p>In this example, starting the <code>TRXCO</code> Coordinator will start up three Reader processes each monitoring a trail on one of the three nodes, \<code>NY</code>, \<code>LA</code>, and \<code>FL</code>.</p>
<p class="titleinrefsubsect"><a id="sthref202"></a>Syntax</p>
<pre>
START COORDINATOR <span class="codeinlineitalic">group_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name. You can use wildcards to specify a set of group names, such as, <code>*</code> or <code>TRX*</code>.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref203"></a>Example</p>
<pre>
START COORD TRXCO
</pre>
<hr />
<a id="sthref204"></a>
<h3 class="refsect2">STATUS COORDINATOR</h3>
<p>Use <code>STATUS COORDINATOR</code> to determine if the Coordinator is running. A report displays to the Coordinator process's home terminal.</p>
<p class="titleinrefsubsect"><a id="sthref205"></a>Syntax</p>
<pre>
STATUS COORDINATOR <span class="codeinlineitalic">group_name</span> [, DETAIL]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name. You can use wildcards to specify a set of group names, such as, <code>*</code> or <code>TRX*</code>.</p>
</dd>
<dt><code>DETAIL</code></dt>
<dd>
<p>When you specify <code>DETAIL</code>, (<code>STATUS COORD *, DETAIL</code>) checkpoint details are displayed. The default is to display the <code><span class="codeinlineitalic">group_name</span></code>, the status of the process and the process name.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref206"></a>Example</p>
<p>The following is an example display resulting from the command <code>STATUS COORD TRXCO.</code></p>
<pre>
COORD    TRXCO      RUNNING (\NY.$GGC00)    ( 0,616 )  (140)
</pre>
<hr />
<a id="sthref207"></a>
<h3 class="refsect2">STOP COORDINATOR</h3>
<p>Use <code>STOP COORDINATOR</code> to stop the Coordinator process gracefully.</p>
<p class="titleinrefsubsect"><a id="sthref208"></a>Syntax</p>
<pre>
STOP COORDINATOR <span class="codeinlineitalic">group_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name.</p>
</dd>
</dl>
</div>
<!-- class="refsect1" -->
<a id="i1109262"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">Process commands</h2>
<p>Process commands communicate using the process name. This is useful for tasks, such as a one-time data synchronization or direct file extraction, that are set up as special runs by using the <code>SPECIALRUN</code>, <code>SOUCEISFILE</code>, or <code>SOURCEISTABLE</code> parameters. These processes do not require an Extract or Replicat group name and can be identified only by the process name.</p>
<hr />
<a id="sthref209"></a>
<h3 class="refsect2">SEND PROCESS</h3>
<p>Use <code>SEND</code> <code>PROCESS</code> to communicate with a running process using the process name rather than the group name. Once the process is started you can:</p>
<ul>
<li>
<p>Send commands recognized by the process</p>
</li>
<li>
<p>Send a <code>WAKE</code> or <code>BREAK</code> command</p>
</li>
</ul>
<p class="titleinrefsubsect"><a id="sthref210"></a>Syntax</p>
<pre>
SEND PROCESS <span class="codeinlineitalic">process_name</span> {<span class="codeinlineitalic">text</span> | WAKE | BREAK}
</pre>
<dl>
<dt><code><span class="codeinlineitalic">process_name</span></code></dt>
<dd>
<p>The process name in the format <code><span class="codeinlineitalic">$identifier</span></code>.</p>
</dd>
<dt><code><span class="codeinlineitalic">text</span></code></dt>
<dd>
<p>One of the subset of GGSCI commands that will be recognized by the process. If there is a response from the process it will be displayed by GGSCI.</p>
</dd>
<dt><code>WAKE</code></dt>
<dd>
<p>Sends the <code>WAKE</code> command to the <code><span class="codeinlineitalic">process_name</span></code>.</p>
</dd>
<dt><code>BREAK</code></dt>
<dd>
<p>Sends the <code>BREAK</code> command to the <code><span class="codeinlineitalic">process_name.</span></code></p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref211"></a>Example</p>
<p>The following example sends the <code>STATUS</code> command to the running process <code>$GG12</code>.</p>
<pre>
SEND PROCESS $GG12 STATUS
</pre>
<p>GGSCI will display the response, such as the following process status:</p>
<pre>
CUSTOM: Current Status: Waiting for more audit (seqno 360, rba 1208741308)
Audit Trail position: Seqno 360, Rba 1208741308
</pre></div>
<!-- class="refsect1" -->
<a id="i1100196"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">Marker commands</h2>
<p>Markers are records inserted into the audit trails and log trails to identify application-specific events during Extract and Replicat processing.</p>
<p>For example, if you want to switch from a primary to a backup database, you must determine that all records have been delivered from the primary to the backup database before switching. Markers provide a method for determining this without shutting down all TMF-related activity on the source node.</p>
<p>To determine that all records have been delivered, perform the following tasks:</p>
<ol>
<li>
<p>Shut down application activity against the source database (for example, bring down <code>PATHWAY</code>).</p>
</li>
<li>
<p>Add a marker to the audit trail.</p>
</li>
<li>
<p>Wait until the corresponding Replicat process writes an event message indicating that it processed the marker. At this point, Replicat has processed all data from the source database and you can safely switch to the backup database.</p>
</li>
</ol>
<p>Event messages and history records are written each time a marker is processed by GGSCI, Extract, or Replicat.</p>
<a id="i1100207"></a>
<hr />
<h3 class="refsect2">ADD MARKER</h3>
<p>You can add markers:</p>
<ul>
<li>
<p>For TMF installations</p>
</li>
<li>
<p>For non-TMF installations</p>
</li>
<li>
<p>Executing TACL commands</p>
</li>
<li>
<p>For a Replicat group</p>
</li>
</ul>
<p class="titleinrefsubsect"><a id="sthref212"></a>Default</p>
<p>By default, Oracle GoldenGate applies markers to the TMF audit trail.</p>
<p class="titleinrefsubsect"><a id="sthref213"></a>Syntax</p>
<pre>
ADD MARKER 
[LOGGER <span class="codeinlineitalic">logger_prefix</span>] [<span class="codeinlineitalic">freeform_text</span>] |
[TACLCMD <span class="codeinlineitalic">program</span> <span class="codeinlineitalic">group_name</span> <span class="codeinlineitalic">command</span>] |
[GROUPCMD] <span class="codeinlineitalic">program</span> <span class="codeinlineitalic">group_name</span> <span class="codeinlineitalic">command</span> ]
</pre>
<dl>
<dt><code>LOGGER</code> <code><span class="codeinlineitalic">logger_prefix</span></code> <code><span class="codeinlineitalic">freeform_text</span></code></dt>
<dd>
<p>See <a href="#i1100245">"Adding markers for TMF or non-TMF installations"</a> for information on adding markers for TMF and non-TMF installations</p>
</dd>
<dt><code>TACLCMD</code> <code><span class="codeinlineitalic">program</span></code> <code><span class="codeinlineitalic">group_name</span></code> <code><span class="codeinlineitalic">command</span></code></dt>
<dd>
<p>See <a href="#i1123010">"Invoking TACL commands"</a> for information on executing TACL commands.</p>
</dd>
<dt><code>GROUPCMD</code> <code><span class="codeinlineitalic">program</span></code> <code><span class="codeinlineitalic">group_name</span></code> <code><span class="codeinlineitalic">command</span></code></dt>
<dd>
<p>See <a href="#i1100290">"Adding markers for an Extract or Replicat group"</a>.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="i1100245"></a>Adding markers for TMF or non-TMF installations</p>
<p>For TMF installations, <code>ADD MARKER</code> creates a marker in the local audit trail. For non-TMF installations, specify <code>ADD MARKER</code> with the <code>LOGGER</code> option.</p>
<p class="titleinrefsubsect2"><a id="sthref214"></a>Default</p>
<p>By default, Oracle GoldenGate applies markers to the TMF audit trail.</p>
<p class="titleinrefsubsect2"><a id="sthref215"></a>Syntax</p>
<pre>
ADD MARKER [LOGGER <span class="codeinlineitalic">logger_prefix</span>] [<span class="codeinlineitalic">freeform_text</span>]
</pre>
<dl>
<dt><code>LOGGER</code> <code><span class="codeinlineitalic">logger_prefix</span></code></dt>
<dd>
<p>Required to send markers to Logger processes and associated log trails. Identifies the Logger process group or an individual Logger process within a group. For example, <code>ADD MARKER LOGGER $GGL</code> specifies the Logger group and sends a marker to all processes beginning with <code>$GGL</code>. The command: <code>ADD</code> <code>MARKER</code> <code>LOGGER</code> <code>$GGL01</code>, sends a marker to the logger <code>$GGL01</code>.</p>
</dd>
<dt><code><span class="codeinlineitalic">freeform_text</span></code></dt>
<dd>
<p>Text you want added to the marker record to distinguish the purpose of the marker, as in:</p>
<pre>
ADD MARKER BROUGHT DOWN FINANCE
ADD MARKER LOGGER $GGL END OF DAY 2010-07-30
</pre></dd>
</dl>
<p class="titleinrefsubsect"><a id="i1123010"></a>Invoking TACL commands</p>
<p>A special form of marker invokes TACL commands through Extract or Replicat. This lets you fit TACL commands into a stream of database activity. The command is carried out when Extract or Replicat encounters the marker record in the data stream.</p>
<p>Extract or Replicat end abnormally if encountering a problem issuing the command, but will not <code>ABEND</code> if the command itself fails. While the command runs, Extract or Replicat waits until it finishes. Specify <code>NOWAIT</code> as part of the command to return control immediately.</p>
<p class="titleinrefsubsect2"><a id="sthref216"></a>Syntax</p>
<pre>
ADD MARKER [LOGGER <span class="codeinlineitalic">logger_prefix</span>] 
TACLCMD <span class="codeinlineitalic">program</span> <span class="codeinlineitalic">group_name</span> <span class="codeinlineitalic">command</span>
</pre>
<dl>
<dt><code>LOGGER</code> <code><span class="codeinlineitalic">logger_prefix</span></code></dt>
<dd>
<p>Required to send markers to Logger processes and associated log trails. Identifies the Logger process group or an individual Logger process within a group. For example, <code>ADD</code> <code>MARKER</code> <code>LOGGER</code> <code>$GGL</code> specifies the Logger group and sends a marker to all processes beginning with <code>$GGL.</code> The command: <code>ADD</code> <code>MARKER</code> <code>LOGGER</code> <code>$GGL01</code>, sends a marker to the Logger <code>$GGL01</code>.</p>
</dd>
<dt><code>TACLCMD</code> <code><span class="codeinlineitalic">program</span></code> <code><span class="codeinlineitalic">group_name</span></code> <code><span class="codeinlineitalic">command</span></code></dt>
<dd>
<p>The <code>TACLCMD</code> keyword informs the process that a TACL command is to be carried out. <code>TACLCMD</code> must include the following:</p>
<dl>
<dt><code><span class="codeinlineitalic">program</span></code></dt>
<dd>
<p>Either <code>EXTRACT</code> or <code>REPLICAT</code>. This determines which program runs the command.</p>
</dd>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name to run the command. You can specify a wildcard.</p>
</dd>
<dt><code><span class="codeinlineitalic">command</span></code></dt>
<dd>
<p>The TACL command to invoke. This can be the name of a program, a macro or any command that can be executed from TACL.</p>
</dd>
</dl>
</dd>
</dl>
<p class="titleinrefsubsect2"><a id="sthref217"></a>Example</p>
<p>In this example, <code>TACLCMD</code> specifies that the command is to be invoked by Extract for the <code>FINANCE</code> group. The command is: <code>FUP PURGEDATA $DATA1.DAT.FILE1</code></p>
<pre>
ADD MARKER TACLCMD EXTRACT FINANCE FUP PURGEDATA $DATA1.DAT.FILE1
</pre>
<p class="titleinrefsubsect"><a id="i1100290"></a>Adding markers for an Extract or Replicat group</p>
<p>You can use markers to send a command to an Extract or Replicat group.</p>
<p class="titleinrefsubsect2"><a id="sthref218"></a>Syntax</p>
<pre>
ADD MARKER GROUPCMD <span class="codeinlineitalic">program</span> <span class="codeinlineitalic">group_name</span> <span class="codeinlineitalic">command</span>
</pre>
<dl>
<dt><code>GROUPCMD</code> <code><span class="codeinlineitalic">program</span></code> <code><span class="codeinlineitalic">group_name</span></code> <code><span class="codeinlineitalic">command</span></code></dt>
<dd>
<p>The <code>GROUPCMD</code> keyword informs the process that a group command is to be invoked.</p>
<dl>
<dt><code><span class="codeinlineitalic">program</span></code></dt>
<dd>
<p>Enter Extract or Replicat.</p>
</dd>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>Enter the Extract or Replicat group name.</p>
</dd>
<dt><code><span class="codeinlineitalic">command</span></code></dt>
<dd>
<p>Enter the command. Currently, <code>CLOSEFILES</code> is the only command available for <code>GROUPCMD</code>. <code>CLOSEFILES</code> instructs Replicat to close all opens on Enscribe files and SQL tables. It instructs Extract to close opens from <code>FETCHCOMPS</code> and <code>FETCHLASTIMAGE</code>.</p>
</dd>
</dl>
</dd>
</dl>
<hr />
<a id="sthref219"></a>
<h3 class="refsect2">INFO MARKER</h3>
<p>Use <code>INFO MARKER</code> to review recently processed markers. A record is displayed for each occasion on which GGSCI, Logger, Extract or Replicat processed the marker.</p>
<p class="titleinrefsubsect"><a id="sthref220"></a>Syntax</p>
<pre>
INFO MARKER [COUNT <span class="codeinlineitalic">num_items</span>]
</pre>
<dl>
<dt><code>COUNT</code> <code><span class="codeinlineitalic">num_items</span></code></dt>
<dd>
<p>Specify <code>COUNT</code> to restrict the list to the most recent number of items, as in: <code>INFO MARKER COUNT 2</code>.</p>
</dd>
</dl>
<p>Information returned includes:</p>
<dl>
<dt><code>PROCESSED</code></dt>
<dd>
<p>The local time that a program processed the marker.</p>
</dd>
<dt><code>ADDED</code></dt>
<dd>
<p>The local time at which the marker was inserted into the audit trails or log trails.</p>
</dd>
<dt><code>DIFF</code></dt>
<dd>
<p>The time difference between <code>PROCESSED</code> and <code>ADDED</code>. <code>DIFF</code> can serve as an indicator of the lag between application, Extract, and Replicat activities.</p>
</dd>
<dt><code>PROG</code></dt>
<dd>
<p>The process that processed the marker, such as GGSCI, Logger, Extract or Replicat.</p>
</dd>
<dt><code>GROUP</code></dt>
<dd>
<p>The Extract or Replicat group or Logger process that processed the marker. <code>N/A</code> is displayed if GGSCI processed the marker.</p>
</dd>
<dt><code>NODE</code></dt>
<dd>
<p>The node at which the marker was inserted into the audit trails.</p>
</dd>
<dt><code>Optional text</code></dt>
<dd>
<p>The free text you entered in the <code>ADD MARKER</code> command.</p>
</dd>
</dl>
</div>
<!-- class="refsect1" -->
<a id="i1107743"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">Programs commands</h2>
<p>The <code>PROGRAMS</code> commands allow you to bind the <code>GGSLIB</code> intercept library to application programs, link the <code>GGSSRL</code> or <code>GGSDLL</code> intercept library to application programs, and view information about programs that may or may not be bound with <code>GGSLIB</code>.</p>
<hr />
<a id="sthref221"></a>
<h3 class="refsect2">BIND PROGRAMS</h3>
<p><code>BIND</code> <code>PROGRAMS</code> binds the TNS version of the <code>GGSLIB</code> intercept library to application programs. You must bind the intercept library to capture non-audited database updates to Enscribe files.</p>
<p>After issuing the <code>BIND</code> <code>PROGRAMS</code> command, you are prompted for a list of files with which to bind <code>GGSLIB</code>. You can enter a wildcard or actual program name. Terminate the list with <code>GO</code> (or cancel with <code>EXIT</code>). <code>GGSLIB</code> becomes the Guardian user library for specified programs (through the <code>BIND</code> <code>CHANGE</code> <code>LIBRARY</code> command).</p>
<p>If a program references a user library, that library is added to the bind list and <code>GGSLIB</code> is physically bound to the user library module (through the <code>BIND</code> <code>BUILD</code> command). The calling program's link to the user library is unchanged.</p>
<p class="titleinrefsubsect"><a id="sthref222"></a>Syntax</p>
<pre>
BIND PROGRAMS
[, AXCEL| NOAXCEL]
[, PARAMS <span class="codeinlineitalic">param_file_name</span>]
[, REPORT <span class="codeinlineitalic">report_file</span>]
[, GGSLIB <span class="codeinlineitalic">library_filename</span>]
[, ERRORS <span class="codeinlineitalic">num_errors</span>]
[, FORCEBIND] 
[, NOLIBBIND]
[, CHANGELIB]
</pre>
<dl>
<dt><code>AXCEL|NOAXCEL</code></dt>
<dd>
<p><code>AXCEL</code> causes code acceleration after binding with existing user libraries. This option has no effect unless a user library is bound to <code>GGSLIB</code> and can be bypassed with <code>NOAXCEL</code>. If you do not specify <code>NOAXCEL,</code> Oracle GoldenGate will run <code>BIND</code> <code>PROGRAMS</code> with the <code>AXCEL</code> option enabled.</p>
</dd>
<dt><code>PARAMS</code> <code><span class="codeinlineitalic">param_file_name</span></code></dt>
<dd>
<p>The file that contains the program names to bind, as an alternative to entering file names interactively.</p>
</dd>
<dt><code>REPORT</code> <code><span class="codeinlineitalic">report_file</span></code></dt>
<dd>
<p>A file name for the detailed report of activity caused by this command. The default is <code><span class="codeinlineitalic">install_volume</span></code>.<code>GGSRPT</code>.<code>BIND</code>. Previous versions of the report file are aged to <code>BIND00</code>, <code>BIND01</code>, and so on.</p>
</dd>
<dt><code>GGSLIB</code> <code><span class="codeinlineitalic">library_filename</span></code></dt>
<dd>
<p>Changes the name of the <code>GGSLIB</code> to bind with the application. The default is <code>GGSLIB</code> in the Oracle GoldenGate home subvolume.</p>
</dd>
<dt><code>ERRORS</code> <code><span class="codeinlineitalic">num_errors</span></code></dt>
<dd>
<p>The number of allowable errors encountered by the <code>BIND</code> process before quitting. Default is 5.</p>
</dd>
<dt><code>FORCEBIND</code></dt>
<dd>
<p>Forces programs to be rebound with the library, even if they are already bound. Use this, for example, when binding a new release of <code>GGSLIB</code> to the application.</p>
</dd>
<dt><code>NOLIBBIND</code></dt>
<dd>
<p>Bypasses binding of existing user libraries with <code>GGSLIB</code> (default is to bind).</p>
</dd>
<dt><code>CHANGELIB</code></dt>
<dd>
<p>Instructs the bind process to change libraries to <code>GGSLIB</code>. Use this when receiving a new release of <code>GGSLIB</code> or BASELIB.</p>
</dd>
</dl>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>If your application programs are Native, then you must use the <code>LINK PROGRAMS</code> command to bind the Native version of the intercept library to your programs.</p>
</div>
<hr />
<a id="sthref223"></a>
<h3 class="refsect2">INFO PROGRAMS</h3>
<p>Use <code>INFO PROGRAMS</code> to retrieve information about programs that may or may not be bound with <code>GGSLIB</code>. Use this command to determine if non-audited data will be extracted on a program-by-program basis.</p>
<p>Each program's modification timestamp is reported, so you can determine when data extraction took effect.</p>
<p class="titleinrefsubsect"><a id="sthref224"></a>Syntax</p>
<pre>
INFO PROGRAMS <span class="codeinlineitalic">file_name</span> [, BOUND | UNBOUND]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">file_name</span></code></dt>
<dd>
<p>A single file name or a wildcard list of files.</p>
</dd>
<dt><code>BOUND | UNBOUND</code></dt>
<dd>
<ul>
<li>
<p><code>BOUND</code> limits the output to programs that have <code>GGSLIB</code> bound with either the program or the program's user library.</p>
</li>
<li>
<p><code>UNBOUND</code> reports programs that are not bound.</p>
</li>
</ul>
</dd>
</dl>
<hr />
<a id="sthref225"></a>
<h3 class="refsect2">LINK PROGRAMS</h3>
<p><code>LINK PROGRAMS</code> links the native intercept library, GGSSRL or GGSDLL, to your application programs. You must bind the intercept library to capture non-audited database updates to Enscribe files. Once this is complete, GGSSRL/<code>GGSDLL</code> becomes the Guardian user library for specified programs (through the <code>NLD</code> -<code>change</code> <code>libname</code> command).</p>
<p class="titleinrefsubsect"><a id="sthref226"></a>Syntax</p>
<pre>
LINK PROGRAMS 
[, PARAMS <span class="codeinlineitalic">param_file_name</span>]
[, REPORT <span class="codeinlineitalic">report_file</span>]
[, GGSSRL <span class="codeinlineitalic">library_filename</span>]
[, ERRORS <span class="codeinlineitalic">num_errors</span>]
[, CHANGELIB]
</pre>
<p>After issuing the <code>LINK PROGRAMS</code> command, you are prompted for a list of files with which to link the library. You can enter a wildcard or actual program name. Terminate the list with <code>GO</code> (or cancel with <code>EXIT</code>).</p>
<dl>
<dt><code>PARAMS</code> <code><span class="codeinlineitalic">param_file_name</span></code></dt>
<dd>
<p>The file that contains the program names to link, as an alternative to entering file names interactively.</p>
</dd>
<dt><code>REPORT</code> <code><span class="codeinlineitalic">report_file</span></code></dt>
<dd>
<p>A file name for the detailed report of activity caused by this command. The default is <code>install_volume.GGSRPT.LINK</code>.</p>
<p>Previous versions of the report file are aged to <code>LINK00</code>, <code>LINK01</code>, and so on.</p>
</dd>
<dt><code>GGSSRL</code> <code><span class="codeinlineitalic">library_filename</span></code></dt>
<dd>
<p>Changes the name of the library to link with the application. The default name is GGSSRL for D45+ and G06 applications or <code>GGSDLL</code> for H06 and J06. These libraries are stored in the Oracle GoldenGate installation subvolume.</p>
</dd>
<dt><code>ERRORS</code> <code><span class="codeinlineitalic">num_errors</span></code></dt>
<dd>
<p>The number of allowable errors encountered by the <code>NLD</code> process before quitting. Default is 5.</p>
</dd>
<dt><code>CHANGELIB</code></dt>
<dd>
<p>Instructs the link process to change libraries to GGSSRL. Use this when receiving a new release of BASELIBR and using NLDLIB.</p>
</dd>
</dl>
</div>
<!-- class="refsect1" -->
<a id="i1109912"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">Report commands</h2>
<p>Extract, Replicat, Logger and Syncfile create reports about group process parameters, run statistics, error messages, and other diagnostic information. These reports can be created with the <code>SEND REPORT</code> command and viewed with the <code>VIEW REPORT</code> command. The report is displayed to your screen. Use the scrolling commands below to scroll through the report.</p>
<dl>
<dt><code><span class="codeinlineitalic">return</span></code></dt>
<dd>
<p>Next page</p>
</dd>
<dt>/<code><span class="codeinlineitalic">string</span></code></dt>
<dd>
<p>Search for next occurrence of <code><span class="codeinlineitalic">string</span></code> in file</p>
</dd>
<dt><code><span class="codeinlineitalic">number</span></code></dt>
<dd>
<p>Go to line indicated by <code><span class="codeinlineitalic">number</span></code></p>
</dd>
<dt><code>l</code></dt>
<dd>
<p>Go to last page of file</p>
</dd>
<dt><code>b</code></dt>
<dd>
<p>Go backwards one page in file</p>
</dd>
<dt><code>q</code></dt>
<dd>
<p>Quit display</p>
</dd>
<dt><code>h</code></dt>
<dd>
<p>Help</p>
</dd>
</dl>
<a id="i1125537"></a>
<hr />
<h3 class="refsect2">SEND REPORT</h3>
<p>Use <code>SEND REPORT</code> when you want to narrow reporting to a specific span of time, or to retrieve statistics about the current transaction.</p>
<p class="titleinrefsubsect"><a id="sthref227"></a>Syntax</p>
<pre>
SEND [EXTRACT | REPLICAT | SYNCFILE] <span class="codeinlineitalic">group_name</span>, 
REPORT [<span class="codeinlineitalic">time_option</span> [RESET | FILE <span class="codeinlineitalic">name</span> | TABLE <span class="codeinlineitalic">name</span>]]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name you defined with the appropriate GGSCI <code>ADD</code> command</p>
</dd>
<dt><code>REPORT</code> <code><span class="codeinlineitalic">time_option</span></code> [<code>RESET</code> | <code>FILE</code> <code><span class="codeinlineitalic">name</span></code> | <code>TABLE</code> <code><span class="codeinlineitalic">name</span></code></dt>
<dd>
<p>Returns Extract and Replicat processing statistics based on the selected options.</p>
<dl>
<dt><code>RESET</code></dt>
<dd>
<p>This resets the <code><span class="codeinlineitalic">time_option</span></code> counters to zero. For example, the command <code>SEND</code> <code>RECENT</code> <code>RESET</code> will report the <code>RECENT</code> counters and then reset them to zero.</p>
</dd>
<dt><code>FILE</code> <code><span class="codeinlineitalic">name</span></code> | <code>TABLE</code> <code><span class="codeinlineitalic">name</span></code></dt>
<dd>
<p>This limits the display to statistics for the file or table specified in <code><span class="codeinlineitalic">name</span></code>.</p>
</dd>
<dt><code><span class="codeinlineitalic">time_option</span></code></dt>
<dd>
<p>Each of these reports statistics for a different time interval as listed below. <code>REPORT</code> is the default. <code>TRANSACTION</code> is valid only for Replicat.</p>
<p><code>REPORT</code>: since the last time the <code>REPORT</code> was run</p>
<p><code>TOTALS:</code> since the Extract or Replicat was started</p>
<p><code>DAILY</code>: since the beginning of the current day</p>
<p><code>HOURLY</code>: since the beginning of the current hour</p>
<p><code>RECENT</code>: since the last time the <code>RECENT</code> counter was reset</p>
<p><code>TRANSACTION</code>: since the beginning of the current transaction</p>
</dd>
</dl>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref228"></a>Examples</p>
<dl>
<dd><a id="sthref229"></a></dd>
<dt class="seghead">Example 1&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The following sample Extract report uses the default <code>REPORT</code> option.</p>
<pre>
Report at 2010-02-27 12:43:07 (activity since 2010-02-27 11:43:44)
Elapsed time 0-00:59:22.916658
Total # records written to \NODEA.$TEST04.GGSDAT.ET                19
   \NODEA.$TEST04.GGSSOU.TCUSTMER            #  inserts:            3
                                             #  updates:            0
                                             #  deletes:            0
   \NODEA.$TEST04.GGSSOU.TCUSTORD            #  inserts:            3
                                             #  updates:           13
                                             #  deletes:            0
</pre></dd>
<dd><a id="sthref230"></a></dd>
<dt class="seghead">Example 2&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The next sample Extract report uses the <code>TOTALS</code> option.</p>
<pre>
Report at 2010-02-27 12:44:15 counters for TOTALS since 2010-02-24 10:23:34
Elapsed time 3-02:20:41.216310
Total # records written to \NODEA.$TEST04.GGSDAT.ET                68
   \NODEA.$TEST04.GGSSOU.TCUSTMER            #  inserts:           11
                                             #  updates:            3
                                             #  deletes:            0
   \NODEA.$TEST04.GGSSOU.TCUSTORD            #  inserts:           15
                                             #  updates:           34
                                             #  deletes:            5
</pre></dd>
<dd><a id="sthref231"></a></dd>
<dt class="seghead">Example 3&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The following Replicat report uses the <code>TRANSACTION</code> option.</p>
<pre>
Report at 2010-02-28 06:51:15 counters for TRANS since 2010-02-14 13:46:54
Elapsed time 13-17:04:21.290242
From \A.$TEST04.GGSSOU.ECUSTMER to \A.$TEST04.GGSTAR.HCUSTMER:
            #  inserts:         3
            #  updates:         1
            #  deletes:         0
            # discards:         0
From \A.$TEST04.GGSSOU.ECUSTORD to \A.$TEST04.GGSTAR.HCUSTORD:
            #  inserts:         3
            #  updates:         3
            #  deletes:         2
            # discards:         0
</pre></dd>
</dl>
<hr />
<a id="sthref232"></a>
<h3 class="refsect2">VIEW REPORT</h3>
<p><code>VIEW REPORT</code> allows read-only viewing of reports. Reports are aged each time Extract or Replicat is started. For example, if the report file for an Extract group is normally <code>GGSRPT.EXTCUST</code>, where <code>EXTCUST</code> is the group name, the reports are aged to <code>GGSRPT.EXTCUST0</code>, <code>GGSRPT.EXTCUST1</code>, and so on. This lets you trace through previous runs for diagnostic information.</p>
<p class="titleinrefsubsect"><a id="sthref233"></a>Syntax</p>
<pre>
VIEW REPORT <span class="codeinlineitalic">group_name</span>[<span class="codeinlineitalic">n</span>] | <span class="codeinlineitalic">file_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>The group name.</p>
</dd>
<dt><code><span class="codeinlineitalic">n</span></code></dt>
<dd>
<p>The sequence number of an aged report.</p>
</dd>
<dt><code><span class="codeinlineitalic">file_name</span></code></dt>
<dd>
<p>The fully qualified report file name. This is used when the report is not in the default location.</p>
</dd>
</dl>
</div>
<!-- class="refsect1" -->
<a id="i1101589"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">Syncfile commands</h2>
<p>Syncfile commands let you manage the Syncfile utility, which duplicates entire files on a scheduled basis.</p>
<p>Use the <code>VIEW REPORT</code> command to view the output of Syncfile.</p>
<hr />
<a id="sthref234"></a>
<h3 class="refsect2">ADD SYNCFILE</h3>
<p>Use <code>ADD</code> <code>SYNCFILE</code> to define a Syncfile group before starting Syncfile.</p>
<p>Using <code>ADD</code> <code>SYNCFILE</code> options you can:</p>
<ul>
<li>
<p>Specify alternative names for the parameter file, the report file, or the Syncfile process</p>
</li>
<li>
<p>Specify a primary and backup CPU and associated NonStop priority</p>
</li>
</ul>
<p class="titleinrefsubsect"><a id="sthref235"></a>Syntax</p>
<pre>
ADD SYNCFILE <span class="codeinlineitalic">group_name</span> 
[, PARAMS <span class="codeinlineitalic">param_file_name</span>]
[, REPORT <span class="codeinlineitalic">report_file</span>] 
[, PROGRAM <span class="codeinlineitalic">program_name</span>]
[, PROCESS <span class="codeinlineitalic">process_name</span>]
[, CPU <span class="codeinlineitalic">primary_cpu</span>] 
[, BACKUPCPU <span class="codeinlineitalic">cpu</span>] 
[, PRI <span class="codeinlineitalic">priority</span>]
[, DESC "<span class="codeinlineitalic">text</span>"]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>A Syncfile group. You can use wildcards to specify a set of group names, such as <code>*</code> or <code>*FIN*</code>.</p>
</dd>
<dt><code>PARAMS</code> <code><span class="codeinlineitalic">param_file_name</span></code></dt>
<dd>
<p>The Syncfile parameter file name.</p>
</dd>
<dt><code>REPORT</code> <code><span class="codeinlineitalic">report_file</span></code></dt>
<dd>
<p>The name of the report file to which Syncfile writes messages.</p>
</dd>
<dt><code>PROCESS</code> <code><span class="codeinlineitalic">process_name</span></code></dt>
<dd>
<p>The process name. See <a href="#i1105437">"Specifying an Alternative Process"</a>.</p>
</dd>
<dt><code>PROGRAM</code> <code><span class="codeinlineitalic">program_name</span></code></dt>
<dd>
<p>The name of the object to be run. See <a href="#i1105474">"Executing user exits"</a>.</p>
</dd>
<dt><code>CPU</code> <code><span class="codeinlineitalic">primary_cpu</span></code></dt>
<dd>
<p>The primary CPU name.</p>
</dd>
<dt><code>BACKUPCPU</code> <code><span class="codeinlineitalic">cpu</span></code></dt>
<dd>
<p>The CPU to use in the event the primary CPU is not available when starting or restarting Syncfile.</p>
</dd>
<dt><code>PRIORITY</code> <code><span class="codeinlineitalic">priority</span></code></dt>
<dd>
<p>The NonStop operating system priority.</p>
</dd>
<dt><code>DESC</code> "<code><span class="codeinlineitalic">text</span></code>"</dt>
<dd>
<p>A description of the Syncfile process.</p>
</dd>
</dl>
<hr />
<a id="sthref236"></a>
<h3 class="refsect2">ALTER SYNCFILE</h3>
<p>Use <code>ALTER SYNCFILE</code> to change an existing Syncfile group. Generally, you will use <code>ALTER SYNCFILE</code> to change <code>CPU</code>, <code>BACKUPCPU</code> or <code>PRIORITY</code> options.</p>
<p class="titleinrefsubsect"><a id="sthref237"></a>Syntax</p>
<pre>
ALTER SYNCFILE <span class="codeinlineitalic">group_name</span> [, <span class="codeinlineitalic">option</span>]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>A Syncfile group. You can use wildcards to specify a set of group names, such as <code>*</code> or <code>*FIN*</code>.</p>
</dd>
<dt><code><span class="codeinlineitalic">option</span></code></dt>
<dd>
<p><code>ALTER SYNCFILE</code> uses the same options as <code>ADD SYNCFILE</code>.</p>
</dd>
</dl>
<hr />
<a id="sthref238"></a>
<h3 class="refsect2">DELETE SYNCFILE</h3>
<p>Use <code>DELETE SYNCFILE</code> to delete a Syncfile group.</p>
<p class="titleinrefsubsect"><a id="sthref239"></a>Syntax</p>
<pre>
DELETE SYNCFILE <span class="codeinlineitalic">group_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>A Syncfile group. You can use a wildcard in the name.</p>
</dd>
</dl>
<hr />
<a id="sthref240"></a>
<h3 class="refsect2">INFO SYNCFILE</h3>
<p>Use <code>INFO SYNCFILE</code> to display information about one or more Syncfile processes, including whether the process is running, and the date of the last time started.</p>
<p class="titleinrefsubsect"><a id="sthref241"></a>Syntax</p>
<pre>
INFO SYNCFILE <span class="codeinlineitalic">group_name</span> [, DETAIL] 
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>A Syncfile group. You can use a wildcard in the name.</p>
</dd>
<dt><code>DETAIL</code></dt>
<dd>
<p>Provides information regarding parameter, report files, process names and other information.</p>
</dd>
</dl>
<hr />
<a id="sthref242"></a>
<h3 class="refsect2">KILL SYNCFILE</h3>
<p>Use <code>KILL SYNCFILE</code> to force a Syncfile process to stop immediately. Try <code>STOP SYNCFILE</code> first because it also performs cleanup work. <code>KILL SYNCFILE</code> is preferable to stopping Syncfile from TACL, which can result in Manager automatically restarting the process.</p>
<p class="titleinrefsubsect"><a id="sthref243"></a>Syntax</p>
<pre>
KILL SYNCFILE <span class="codeinlineitalic">group_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>A Syncfile group. You can use a wildcard in the name.</p>
</dd>
</dl>
<hr />
<a id="sthref244"></a>
<h3 class="refsect2">START SYNCFILE</h3>
<p>Use <code>START SYNCFILE</code> to start one or more Syncfile processes. The <code>START</code> request is routed to Manager, which starts and monitors the Syncfile process.</p>
<p class="titleinrefsubsect"><a id="sthref245"></a>Syntax</p>
<pre>
START SYNCFILE <span class="codeinlineitalic">group_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>A Syncfile group. You can use a wildcard in the name.</p>
</dd>
</dl>
<hr />
<a id="sthref246"></a>
<h3 class="refsect2">STATUS SYNCFILE</h3>
<p>Use <code>STATUS SYNCFILE</code> to display the status of the Syncfile group.</p>
<p class="titleinrefsubsect"><a id="sthref247"></a>Syntax</p>
<pre>
STATUS SYNCFILE <span class="codeinlineitalic">group_name</span> 
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>A Syncfile group. You can use a wildcard in the name.</p>
</dd>
</dl>
<hr />
<a id="sthref248"></a>
<h3 class="refsect2">STOP SYNCFILE</h3>
<p>Use <code>STOP SYNCFILE</code> to stop one or more Syncfile processes gracefully. Using this command lets you make configuration changes without affecting the operation of future Syncfile runs, and ensures that Manager will not restart the process.</p>
<p class="titleinrefsubsect"><a id="sthref249"></a>Syntax</p>
<pre>
STOP SYNCFILE <span class="codeinlineitalic">group_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">group_name</span></code></dt>
<dd>
<p>A Syncfile group. You can use a wildcard in the name.</p>
</dd>
</dl>
</div>
<!-- class="refsect1" -->
<a id="i1101833"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">Miscellaneous commands</h2>
<p>The following commands control various other aspects of Oracle GoldenGate.</p>
<a id="i1101836"></a>
<hr />
<h3 class="refsect2">! command</h3>
<p>Use the <code>!</code> command to run a previous GGSCI command without modifications. To modify a command before re-executing it, use the <code>FC</code> command. To display a list of previous commands, use the <code>HISTORY</code> command.</p>
<p>Issuing the <code>!</code> command without arguments re-executes the most recently used command. By using options, you can re-execute a specific command by specifying its line number or a text substring.</p>
<p class="titleinrefsubsect"><a id="sthref250"></a>Syntax</p>
<pre>
! [<span class="codeinlineitalic">number</span> | -<span class="codeinlineitalic">number</span> | <span class="codeinlineitalic">string</span>]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">number</span></code></dt>
<dd>
<p>Re-executes the command on the specified GGSCI line. Each GGSCI command line is sequenced, beginning with 1 at the start of the session.</p>
</dd>
<dt><code><span class="codeinlineitalic">-number</span></code></dt>
<dd>
<p>Re-executes the command issued <code><span class="codeinlineitalic">number</span></code> lines before the current line.</p>
</dd>
<dt><code><span class="codeinlineitalic">string</span></code></dt>
<dd>
<p>Re-executes the last command that starts with the specified text string.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref251"></a>Examples</p>
<dl>
<dd><a id="sthref252"></a></dd>
<dt class="seghead">Example 1&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre>
! 9
</pre></dd>
<dd><a id="sthref253"></a></dd>
<dt class="seghead">Example 2&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre>
! -3
</pre></dd>
<dd><a id="sthref254"></a></dd>
<dt class="seghead">Example 3&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre>
! sta
</pre></dd>
</dl>
<hr />
<a id="sthref255"></a>
<h3 class="refsect2">ENV</h3>
<p>Use <code>ENV</code> to return information about the current run-time environment. This is based on the current settings for the <code>GLOBALS</code> parameters.</p>
<p class="titleinrefsubsect"><a id="sthref256"></a>Syntax</p>
<pre>
ENV 
</pre>
<p class="titleinrefsubsect"><a id="sthref257"></a>Example</p>
<p>The following display illustrates the information returned for the <code>ENV</code> request.</p>
<pre>
Version                       192.0.2.2 G06 2010/05/05
Prefix                        $GG
System                        \NY
Programs                      \NY.$DATA1.GGS1040
Params                        \NY.$DATA1.GGSPARM
Report                        \NY.$DATA1.GGSRPT
LogFileOpens                  1
Manager Mandatory             Yes
Hometerm messages             Yes
SWAPVOL                       $DATA1
Reply timeout                 3000
TMF Refresh Interval          900
Current defines
=GGS_AUDCFG             CLASS MAP, FILE \NY.$DATA1.GGS.HHCFG
=GGS_PREFIX             CLASS MAP, FILE \NY.$GG
=_DEFAULTS CLASS DEFAULTS, VOLUME \NY.$DATA1.GGS8040
</pre>
<a id="i1101865"></a>
<hr />
<h3 class="refsect2">FC</h3>
<p>Use <code>FC</code> to edit a previously issued GGSCI command and then re-execute it. Previous commands are stored in the memory buffer and can be displayed by issuing the <code>HISTORY</code> command. The <code>FC</code> command is the same as standard NonStop <code>FIX</code> command functionality.</p>
<p>Issuing <code>FC</code> without arguments retrieves the most recently used command. By using options, you can retrieve a specific command by specifying its line number or a text substring. Previous commands can only be edited for the current command-line session, because command history is not maintained from session to session.</p>
<p class="titleinrefsubsect"><a id="sthref258"></a>Using the editor</p>
<p>The <code>FC</code> command displays the specified command and then opens an editor with a prompt containing a blank line starting with two dots. Use the space bar to position the cursor beneath the character in the displayed command where you want to begin editing, and then enter one of the following arguments. Arguments are not case-sensitive and can be combined.</p>
<div class="tblhruleformal">
<p class="titleintable"><a id="sthref259"></a><a id="sthref260"></a>Table 1-1 FC editor commands</p>
<table class="cellalignment20" title="FC editor commands" summary="This table lists the nameand description of the FC editor commands" dir="ltr">
<thead>
<tr class="cellalignment11">
<th class="cellalignment21" id="r1c1-t8">Argument</th>
<th class="cellalignment21" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment11">
<td class="cellalignment17" id="r2c1-t8" headers="r1c1-t8">
<pre>
i <span class="codeinlineitalic">text</span>
</pre></td>
<td class="cellalignment17" headers="r2c1-t8 r1c2-t8">
<p>Inserts text. For example:</p>
<pre>
GGSCI&gt; fc 9
GGSCI&gt; send mgr
GGSCI..        i childstatus
GGSCI&gt; send mgr childstatus
</pre></td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r3c1-t8" headers="r1c1-t8">
<pre>
r <span class="codeinlineitalic">text</span>
</pre></td>
<td class="cellalignment17" headers="r3c1-t8 r1c2-t8">
<p>Replaces text. For example:</p>
<pre>
GGSCI&gt; fc 9
GGSCI&gt; info mgr
GGSCI..     rextract ggfin
GGSCI&gt; info extract ggfin
</pre></td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r4c1-t8" headers="r1c1-t8">
<pre>
d
</pre></td>
<td class="cellalignment17" headers="r4c1-t8 r1c2-t8">
<p>Deletes a character. To delete multiple characters, enter a <code>d</code> for each one. For example:</p>
<pre>
GGSCI&gt; fc 10
GGSCI&gt; info extract ggfin, detail
GGSCI..                  dddddddd
GGSCI&gt; info extract ggfin
</pre></td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r5c1-t8" headers="r1c1-t8">
<pre>
<span class="codeinlineitalic">replacement_text</span>
</pre></td>
<td class="cellalignment17" headers="r5c1-t8 r1c2-t8">
<p>Replaces the displayed command with the text that you enter on a one-for-one basis. For example:</p>
<pre>
GGSCI&gt; fc 10
GGSCI&gt; info mgr
GGSCI..     extract ggfin
GGSCI&gt; info extract ggfin
</pre></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p>To execute the command, press <span class="bold">Enter</span> twice, once to indicate there are no more changes and once to issue the command. To cancel an edit, type a forward slash (/) twice.</p>
<p class="titleinrefsubsect"><a id="sthref261"></a>Syntax</p>
<pre>
FC [<span class="codeinlineitalic">number</span> | -<span class="codeinlineitalic">number</span> | <span class="codeinlineitalic">string</span>]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">number</span></code></dt>
<dd>
<p>Returns the command from the specified line. Each GGSCI command line is sequenced, beginning with 1 at the start of the session.</p>
</dd>
<dt><code><span class="codeinlineitalic">-number</span></code></dt>
<dd>
<p>Returns the command that was issued <code><span class="codeinlineitalic">number</span></code> lines before the current line.</p>
</dd>
<dt><code><span class="codeinlineitalic">string</span></code></dt>
<dd>
<p>Returns the last command that starts with the specified text string.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref262"></a>Examples</p>
<dl>
<dd><a id="sthref263"></a></dd>
<dt class="seghead">Example 1&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre>
FC 9
</pre></dd>
<dd><a id="sthref264"></a></dd>
<dt class="seghead">Example 2&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre>
FC -3
</pre></dd>
<dd><a id="sthref265"></a></dd>
<dt class="seghead">Example 3&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre>
FC sta
</pre></dd>
</dl>
<a id="i1101938"></a>
<hr />
<h3 class="refsect2">HELP</h3>
<p>Use <code>HELP</code> to view information about specific commands. For example, <code>HELP</code> displays information about the <code>ADD REPLICAT</code> command.</p>
<p>For a summary page displaying all commands and objects, enter the single command: <code>HELP</code>.</p>
<p class="titleinrefsubsect"><a id="sthref266"></a>Syntax</p>
<pre>
HELP <span class="codeinlineitalic">command</span> <span class="codeinlineitalic">object</span> 
</pre>
<dl>
<dt><code><span class="codeinlineitalic">command</span></code> <code><span class="codeinlineitalic">object</span></code></dt>
<dd>
<p>The command you need help with, such as <code>ADD REPLICAT.</code></p>
</dd>
</dl>
<a id="i1101952"></a>
<hr />
<h3 class="refsect2">HISTORY</h3>
<p>Use <code>HISTORY</code> to view a list of the commands issued in GGSCI. Previous commands are stored in <code>GGSCIHST</code>, an edit file located on the NonStop user's saved volume. Command history from each session of GGSCI remains available until the data is manually deleted from this file.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>To clear the history, you can use <code>TACL&gt; WHO to</code> find the saved volume for the user and then edit the <code>GGSCIHST</code> stored there.</p>
</div>
<p>You can use the <code>!</code> command or the <code>FC</code> command to re-execute a command in the list. This command is the same as standard NonStop <code>HISTORY</code> command functionality.</p>
<p class="titleinrefsubsect"><a id="sthref267"></a>Syntax</p>
<pre>
HISTORY [<span class="codeinlineitalic">number</span>]
</pre>
<dl>
<dt><code><span class="codeinlineitalic">number</span></code></dt>
<dd>
<p>Returns the last <code><span class="codeinlineitalic">number</span></code> commands, where <code><span class="codeinlineitalic">number</span></code> is any positive number.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref268"></a>Example</p>
<pre>
HISTORY 7
</pre>
<p>The result of this command would be similar to:</p>
<pre>
1: start manager
2: status manager
3: info manager
4: send manager childstatus
5: start extract ggfin
6: info extract ggfin
7: history
</pre>
<hr />
<a id="sthref269"></a>
<h3 class="refsect2">INFO ALL</h3>
<p>Use <code>INFO ALL</code> to display a summary of the status and lag, where relevant, for each Oracle GoldenGate process. This display includes information for Manager, Extract, Replicat, Logger, and Syncfile.</p>
<p>Use <code>INFO ALL</code> to show the status of all active tasks and processes in the system. Use the <code>SYSTEM</code> command to address multiple systems at the same time.</p>
<p class="titleinrefsubsect"><a id="sthref270"></a>Syntax</p>
<pre>
INFO ALL, [DETAIL | TASKS | ALLPROCESSES]
</pre>
<dl>
<dt><code>DETAIL</code></dt>
<dd>
<p>Reports process run history.</p>
</dd>
<dt><code>TASKS | ALLPROCESSES</code></dt>
<dd>
<p>Shows either tasks or all processes that are running. Specify either <code>TASKS</code> or <code>ALLPROCESSES</code>.</p>
</dd>
</dl>
<hr />
<a id="sthref271"></a>
<h3 class="refsect2">LOG</h3>
<p>Using the <code>LOG</code> command, you can save the results of your GGSCI session to an output file. Use <code>LOG</code> to identify where to direct the session output. You can direct output to an edit file, spooler file, or a process name. Any new output will be appended to the file if it already exists.</p>
<p class="titleinrefsubsect"><a id="sthref272"></a>Syntax</p>
<pre>
LOG {<span class="codeinlineitalic">file_name</span> | <span class="codeinlineitalic">process_name</span> | <span class="codeinlineitalic">spooler</span>}
</pre>
<dl>
<dt><code><span class="codeinlineitalic">file_name</span></code></dt>
<dd>
<p>The name of the output file.</p>
</dd>
<dt><code><span class="codeinlineitalic">process_name</span></code></dt>
<dd>
<p>The name of the process.</p>
</dd>
<dt><code><span class="codeinlineitalic">spooler</span></code></dt>
<dd>
<p>The name of the spooler.</p>
</dd>
</dl>
<hr />
<a id="sthref273"></a>
<h3 class="refsect2">LOG STOP</h3>
<p>Use the <code>LOG</code> <code>STOP</code> command to close the session output.</p>
<p class="titleinrefsubsect"><a id="sthref274"></a>Syntax</p>
<pre>
LOG STOP
</pre>
<a id="i1105111"></a>
<hr />
<h3 class="refsect2">OBEY</h3>
<p>Use <code>OBEY</code> to process a file that contains a list of Oracle GoldenGate commands. <code>OBEY</code> is useful for executing commands that are frequently used in sequence. This command provides standard NonStop <code>OBEY</code> file functionality.</p>
<p class="titleinrefsubsect"><a id="sthref275"></a>Syntax</p>
<pre>
OBEY <span class="codeinlineitalic">file_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">file_name</span></code></dt>
<dd>
<p>The name of the file containing the list of commands.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref276"></a>Example</p>
<pre>
OBEY $DATA01.GGSPARM.FINANCE
</pre>
<hr />
<a id="sthref277"></a>
<h3 class="refsect2">EDIT PARAMS</h3>
<p><code>EDIT PARAMS</code> launches an editor from GGSCI.</p>
<p class="titleinrefsubsect"><a id="sthref278"></a>Syntax</p>
<pre>
EDIT PARAMS <span class="codeinlineitalic">file_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">file_name</span></code></dt>
<dd>
<p>Specify a parameter file name. If the file name is unqualified, <code>EDIT</code> assumes the parameter file resides in the Oracle GoldenGate home volume: <code>install_volume.GGSPARM</code>.</p>
</dd>
</dl>
<hr />
<a id="sthref279"></a>
<h3 class="refsect2">VIEW PARAMS</h3>
<p><code>VIEW PARAMS</code> displays the named parameter file to your screen. Use the scrolling commands described in <a href="#g1196899">Table 1-2</a> to scroll through the file.</p>
<p class="titleinrefsubsect"><a id="sthref280"></a>Syntax</p>
<pre>
VIEW PARAMS <span class="codeinlineitalic">file_name</span>
</pre>
<dl>
<dt><code><span class="codeinlineitalic">file_name</span></code></dt>
<dd>
<p>Specify a parameter file name. If the file name is unqualified, <code>VIEW</code> assumes the parameter file resides in the Oracle GoldenGate home volume: <code>install_volume.GGSPARM</code>.</p>
</dd>
</dl>
<div class="tblhruleformal">
<p class="titleintable"><a id="sthref281"></a><a id="g1196899"></a>Table 1-2 Scrolling commands</p>
<table class="cellalignment20" title="Scrolling commands" summary="This table lists the nameand description o the scrolling commands used with VIEW PARAMS" dir="ltr">
<thead>
<tr class="cellalignment11">
<th class="cellalignment21" id="r1c1-t10">Command</th>
<th class="cellalignment21" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment11">
<td class="cellalignment17" id="r2c1-t10" headers="r1c1-t10">
<pre>
<span class="codeinlineitalic">return</span>
</pre></td>
<td class="cellalignment17" headers="r2c1-t10 r1c2-t10">
<p>Go to the next page.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r3c1-t10" headers="r1c1-t10">
<pre>
/<span class="codeinlineitalic">string</span>
</pre></td>
<td class="cellalignment17" headers="r3c1-t10 r1c2-t10">
<p>Search for next occurrence of <code><span class="codeinlineitalic">string</span></code> in file.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r4c1-t10" headers="r1c1-t10">
<pre>
<span class="codeinlineitalic">number</span>
</pre></td>
<td class="cellalignment17" headers="r4c1-t10 r1c2-t10">
<p>Go to line indicated by <code><span class="codeinlineitalic">number</span></code>.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r5c1-t10" headers="r1c1-t10">
<pre>
l
</pre></td>
<td class="cellalignment17" headers="r5c1-t10 r1c2-t10">
<p>Go to last page of file.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r6c1-t10" headers="r1c1-t10">
<pre>
b
</pre></td>
<td class="cellalignment17" headers="r6c1-t10 r1c2-t10">
<p>Go backwards one page in file.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r7c1-t10" headers="r1c1-t10">
<pre>
q
</pre></td>
<td class="cellalignment17" headers="r7c1-t10 r1c2-t10">
<p>Quit display.</p>
</td>
</tr>
<tr class="cellalignment11">
<td class="cellalignment17" id="r8c1-t10" headers="r1c1-t10">
<pre>
h
</pre></td>
<td class="cellalignment17" headers="r8c1-t10 r1c2-t10">
<p>Help.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<a id="i1102011"></a>
<hr />
<h3 class="refsect2">SYSTEM</h3>
<p>The <code>SYSTEM</code> command enables you to manage Oracle GoldenGate processes from a single point of control. Use <code>SYSTEM</code> to switch the reference point from the local system to one or more remote systems, and then back again when needed. After making another system current, you can execute any command, subject to security constraints specified in the <code>CMDSEC</code> file on the remote system.</p>
<p>To enable the <code>SYSTEM</code> command, enter a <code>HOST</code> specification in the <code>GLOBALS</code> parameter file for each remote system with which you intend to communicate. The <code>HOST</code> entry requires the NonStop system name and <code>GGSSUBVOL</code> specification. These parameters are used to identify and start GGSCI sessions on the remote systems.</p>
<p class="titleinrefsubsect"><a id="sthref282"></a>Syntax</p>
<pre>
SYSTEM {<span class="codeinlineitalic">system</span> [, <span class="codeinlineitalic">system</span>] | ALL}
</pre>
<dl>
<dt><code><span class="codeinlineitalic">system</span></code></dt>
<dd>
<p>The NonStop system to make current. Omitting a system name defaults to the local system.</p>
</dd>
<dt><code>ALL</code></dt>
<dd>
<p>Makes all systems current.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref283"></a>Example</p>
<p>If Extract is running on the local system and Replicat is running on the remote system, the following commands would obtain information on each running process.</p>
<ol>
<li>
<p>Get information about all Extract processes at <code>\LA</code>:</p>
<pre>
GGSCI (\LA) &gt; INFO EXTRACT *
</pre></li>
<li>
<p>Switch to <code>\NY</code>:</p>
<pre>
GGSCI (\LA) &gt; SYSTEM \NY
</pre></li>
<li>
<p>Get information about Replicats at <code>\NY</code>:</p>
<pre>
GGSCI (\NY) &gt; INFO REPLICAT *
</pre></li>
<li>
<p>Switch back to <code>\LA</code> (omitting system name defaults to local system):</p>
<pre>
GGSCI (\NY) &gt; SYSTEM
</pre></li>
</ol>
<p class="titleinrefsubsect"><a id="sthref284"></a>Example</p>
<p>You can address multiple systems at the same time:</p>
<ol>
<li>
<p>Make the current systems <code>\LA</code> and <code>\NY</code>:</p>
<pre>
GGSCI (\NY) &gt; SYSTEM \LA, \NY
</pre></li>
<li>
<p>Get information about Extract and Replicat processes on both systems:</p>
<pre>
GGSCI (\LA, \NY) &gt; INFO ER *
</pre></li>
</ol>
<hr />
<a id="sthref285"></a>
<h3 class="refsect2">VIEW GGSEVT</h3>
<p>This command enables you to scroll through the Oracle GoldenGate event file (<code>LOGGGS</code>). This file contains event timestamps, text, program names and processes in chronological sequence.The <code>LOGGGS</code> file also includes a history of commands entered through GGSCI. Although this information is also recorded in the HP NonStop Event Management System (EMS), using <code>VIEW</code> <code>GGSEVT</code> is sometimes more convenient.</p>
<p class="titleinrefsubsect"><a id="sthref286"></a>Syntax</p>
<pre>
VIEW GGSEVT 
[, ASC | DESC] 
[, TIME <span class="codeinlineitalic">timestamp</span>]
[, <span class="codeinlineitalic">program</span>] 
[, <span class="codeinlineitalic">event</span>] [, SEARCH <span class="codeinlineitalic">string</span>]
</pre>
<dl>
<dt><code>ASC | DESC</code></dt>
<dd>
<p><code>ASC</code> sorts the log in ascending order by time. <code>DESC</code>, the default, sorts entries in descending order.</p>
</dd>
<dt><code>TIME</code> <code><span class="codeinlineitalic">timestamp</span></code></dt>
<dd>
<p>Provides a starting point to look for event records. <code><span class="codeinlineitalic">timestamp</span></code> is expressed as <code>yyyy-mm-dd hh:mi (e.g. 2010-03-31 12:30).</code></p>
</dd>
<dt><code><span class="codeinlineitalic">program</span></code></dt>
<dd>
<p>Specify a program name to filter for events related only to that program: <code>EXTRACT, REPLICAT, LOGGER, SYNCFILE, MANAGER,</code> or <code>GGSCI.</code></p>
</dd>
<dt><code><span class="codeinlineitalic">event</span></code></dt>
<dd>
<p>Specify one of: <code>START</code>, <code>STOP</code> (includes <code>ABEND</code> events), or <code>ABEND</code>.</p>
</dd>
<dt><code>SEARCH</code> <code><span class="codeinlineitalic">string</span></code></dt>
<dd>
<p>Searches for <code><span class="codeinlineitalic">string</span></code> in the log message. <code><span class="codeinlineitalic">string</span></code> must not contain spaces or be enclosed in quotes. You can specify multiple <code>SEARCH</code> <code><span class="codeinlineitalic">string</span></code> entries. If any string is found, the record is displayed.</p>
</dd>
</dl>
<p>GGSCI will display the events and then prompt: <code><span class="codeinlineitalic">enter</span></code> or <code>q</code>?</p>
<dl>
<dt><code><span class="codeinlineitalic">enter</span></code></dt>
<dd>
<p>Enter additional options for another <code>GGSEVT</code> display.</p>
</dd>
<dt><code>q</code></dt>
<dd>
<p>Exit <code>GGSEVT</code> and return to GGSCI.</p>
</dd>
</dl>
</div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment10">
<tr>
<td class="cellalignment17">
<table class="cellalignment15">
<tr>
<td class="cellalignment14"><a href="preface.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment14"><a href="gg_parameters.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1995, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment19">
<table class="cellalignment13">
<tr>
<td class="cellalignment14"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment14"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
