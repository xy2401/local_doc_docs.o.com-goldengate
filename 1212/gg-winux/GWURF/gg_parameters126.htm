<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml/DTD/xhtml1-transitional.dtd">
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<title>REPERROR</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1056" />
<meta name="description" content="Contains instructions for using Oracle GoldenGate commands, parameters, and functions." />
<meta name="dcterms.created" content="2015-06-05T16:34:20Z" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Oracle&reg; GoldenGate Reference for Oracle GoldenGate for Windows and UNIX" />
<meta name="dcterms.identifier" content="E29392-08" />
<meta name="dcterms.isVersionOf" content="GWURF" />
<link rel="Start" href="../../index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="gg_parameters125.htm" title="Previous" type="text/html" />
<link rel="Next" href="gg_parameters127.htm" title="Next" type="text/html" />
<link rel="alternate" href="../GWURF.pdf" title="PDF version" type="application/pdf" />
<link rel="alternate" href="../GWURF.epub" title="ePub version" type="application/epub+zip" />
<link rel="alternate" href="../GWURF.mobi" title="Mobipocket version" type="application/x-mobipocket-ebook" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Skip Headers</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns"><div id="BREADCRUMBS"><a href="http://docs.oracle.com">Home</a> / <a href="../../index.html">Middleware</a> / <a href="../index.html">Oracle GoldenGate for Windows and UNIX</a>
</div>

<span id="PAGE" style="display:none;">242/413</span>
<!-- End Header --><a id="i1214605"></a>
<div id="GWURF603" class="refsect1">
<h1 class="refsect1">REPERROR</h1>
<div class="refsubsect"><p class="titleinrefsubsect"><a id="sthref1217"></a>Valid For</p>
<p>Replicat</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect"><a id="sthref1218"></a>Description</p>
<p>Use the <code dir="ltr">REPERROR</code> parameter to control how Replicat responds to errors. The default response of Replicat to any error is to abend.</p>
<p>You can use one <code dir="ltr">REPERROR</code> statement to handle most errors in a default manner, while using one or more other <code dir="ltr">REPERROR</code> statements to handle specific errors differently. For example, you can ignore duplicate-record errors but abend processing in all other cases.</p>
<p>You can use <code dir="ltr">REPERROR</code> globally (at the root of the parameter file) to affect all <code dir="ltr">MAP</code> statements that follow it, or you can use it within a <code dir="ltr">MAP</code> statement to affect the tables specified in that statement. Using <code dir="ltr">REPERROR</code> within a <code dir="ltr">MAP</code> statement gives you the ability to handle errors in a particular way for each thread of a coordinated Replicat.</p>
<div class="refsubsect"><p class="titleinrefsubsect2"><a id="i2507617"></a>Using Record-level Error Handling</p>
<p>All <code dir="ltr">REPERROR</code> options except <code dir="ltr">TRANSDISCARD</code> and <code dir="ltr">TRANSEXCEPTION</code> apply an error-handling action in response to an individual SQL operation on an individual record. Other, error-free records in the same transaction are processed as configured in the <code dir="ltr">MAP</code> statements and other parameters in the parameter file, as applicable.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect2"><a id="sthref1219"></a>Using Transaction-level Error Handling</p>
<p>The <code dir="ltr">TRANSDISCARD</code>, <code dir="ltr">TRANSEXCEPTION</code>, and <code dir="ltr">ABEND</code> options apply an error-handling action to an entire transaction. The triggering error can occur on an individual record in the transaction or on the commit operation. (Commit errors do not have a particular record associated with them.) These options can be used to:</p>
<ul>
<li>
<p>prevent an entire source transaction from being replicated to the target when any error is associated with it.</p>
</li>
<li>
<p>respond to a commit error when deferred constraint checking is enabled on the target.</p>
</li>
</ul>
<p><code dir="ltr">TRANSDISCARD</code> and <code dir="ltr">TRANSEXCEPTION</code> are mutually exclusive.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect2"><a id="sthref1220"></a>Effect of Other Parameters on Transaction-level Options</p>
<p><code dir="ltr">TRANSDISCARD</code> and <code dir="ltr">TRANSEXCEPTION</code> honor the boundaries of the source transaction; however, the presence of <code dir="ltr">BATCHSQL</code>, <code dir="ltr">GROUPTRANSOPS</code>, or <code dir="ltr">MAXTRANSOPS</code> in the parameter file may affect the error-handling logic or outcome, because they alter transaction boundaries.</p>
<div class="refsubsect"><p class="titleinrefsubsect3"><a id="sthref1221"></a>Effect of BATCHSQL and GROUPTRANSOPS</p>
<p><code dir="ltr">BATCHSQL</code> or <code dir="ltr">GROUPTRANSOPS</code> (the default) both group SQL operations from different transactions into larger transactions to improve performance, while maintaining transactional order. When these parameters are in effect and any error occurs, Replicat first tries to resolve it by entering an alternate processing mode (see the documentation for those parameters). If the error persists, <code dir="ltr">TRANSDISCARD</code> or <code dir="ltr">TRANSEXCEPTION</code> comes into effect, and Replicat reverts to source-processing mode as follows:</p>
<ol>
<li>
<p>It rolls back the grouped or arrayed transaction.</p>
</li>
<li>
<p>It replays the offending transaction one SQL operation at a time, using the same transaction boundaries as the source transaction.</p>
</li>
<li>
<p>It performs the discard logic (<code dir="ltr">TRANSDISCARD</code>) or exceptions-mapping (<code dir="ltr">TRANSEXCEPTION</code>). (See those option descriptions for more detail.)</p>
</li>
<li>
<p>It resumes <code dir="ltr">BATCHSQL</code> or <code dir="ltr">GROUPTRANSOPS</code> mode after the <code dir="ltr">TRANSDISCARD</code> error handling is completed.</p>
</li>
</ol>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect3"><a id="sthref1222"></a>Effect of MAXTRANSOPS</p>
<p>The integrity of <code dir="ltr">TRANSDISCARD</code> and <code dir="ltr">TRANSEXCEPTION</code> transaction-level error handling can be adversely affected by the setting of the <code dir="ltr">MAXTRANSOPS</code> parameter. <code dir="ltr">MAXTRANSOPS</code> causes Replicat to split very large replicated source transactions into smaller transactions when it applies them on the target.</p>
<p>The <code dir="ltr">TRANSDISCARD</code> and <code dir="ltr">TRANSEXCEPTION</code> logic cause Replicat to roll back to the first record after the last successful commit. This may or may not be the actual beginning of the offending transaction. It depends on whether that transaction was split up and parts of it are in the previously committed transactions. If that is the case, Replicat cannot apply the <code dir="ltr">TRANSDISCARD</code> or <code dir="ltr">TRANSEXCEPTION</code> action to the whole transaction as it was issued on the source, but only to the part that was rolled back from the target.</p>
<p>If you use <code dir="ltr">MAXTRANSOPS</code>, make certain that it is set to a value that is larger than the largest transaction that you expect to be handled by <code dir="ltr">TRANSDISCARD</code> and <code dir="ltr">TRANSEXCEPTION</code>. This will ensure that transactions are not be split apart into smaller ones on the target.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect2"><a id="sthref1223"></a>Effect of Transaction-level Options on Statistics</p>
<p>The output of informational commands in GGSCI, such as <code dir="ltr">STATS REPLICAT</code>, will show the total number of records in the transaction that was processed by <code dir="ltr">TRANSDISCARD</code> or <code dir="ltr">TRANSEXCEPTION</code> logic. This number may reflect the following:</p>
<ul>
<li>
<p>Replicat writes all records of the transaction to the discard file, including any records that were excluded from Oracle GoldenGate processing by means of a <code dir="ltr">FILTER</code> or <code dir="ltr">WHERE</code> clause in a <code dir="ltr">MAP</code> statement.</p>
</li>
<li>
<p>If a source table in the transaction has multiple targets, the discarded transaction will contain multiple copies of each record, one for each target.</p>
</li>
<li>
<p>Replicat ignores any exceptions mapping statements (as specified with <code dir="ltr">EXCEPTIONSONLY</code> or <code dir="ltr">MAPEXCEPTION</code> in a <code dir="ltr">MAP</code> statement) when discarding the transaction.</p>
</li>
</ul>
<p>Replicat abends on errors that are caused by the discard processing (<code dir="ltr">TRANSDISCARD</code>) or exceptions mapping (<code dir="ltr">TRANSEXCEPTION</code>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect2"><a id="sthref1224"></a>Getting More Information about Error Handling</p>
<p>See <a class="olink GWUAD497" href="../../gg-winux/GWUAD/wu_errorhandling.htm#GWUAD497"><span class="italic">Administering Oracle GoldenGate for Windows and UNIX</span></a> for more information about configuring error handling.</p>
<p>See <a href="gg_parameters160.htm#i2100527">"TABLE | MAP"</a> for more information about the <code dir="ltr">MAP</code> parameter.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect"><a id="sthref1225"></a>Default</p>
<p><code dir="ltr">TRANSABORT</code> for deadlocks; <code dir="ltr">ABEND</code> for all others</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect"><a id="sthref1226"></a>Syntax</p>
<pre dir="ltr">
REPERROR { 
(
{DEFAULT | DEFAULT2 | <span class="italic">SQL_error</span> | <span class="italic">user_defined_error</span>},
{ABEND | 
DISCARD | 
EXCEPTION | 
IGNORE |
RETRYOP [MAXRETRIES <span class="italic">n</span>] |
TRANSABORT [, MAXRETRIES] [, DELAYSECS <span class="italic">n</span> | DELAYCSECS <span class="italic">n</span>] |
TRANSDISCARD |
TRANSEXCEPTION
}
) |
RESET }
</pre>
<div class="refsubsect"><p class="titleinrefsubsect2"><a id="sthref1227"></a>Error Specification Options</p>
<dl>
<dt><code dir="ltr">DEFAULT</code></dt>
<dd>
<p>Sets a global response to all errors except those for which explicit <code dir="ltr">REPERROR</code> statements are specified.</p>
</dd>
<dt><code dir="ltr">DEFAULT2</code></dt>
<dd>
<p>Provides a backup default action when the response for <code dir="ltr">DEFAULT</code> is set to <code dir="ltr">EXCEPTION</code>. Use <code dir="ltr">DEFAULT2</code> when an exceptions <code dir="ltr">MAP</code> statement is not specified for a <code dir="ltr">MAP</code> statement for which errors are anticipated.</p>
</dd>
<dt><code dir="ltr"><span class="codeinlineitalic">SQL_error</span></code></dt>
<dd>
<p>A SQL error number. This can be a record-level error or a commit-level error if using <code dir="ltr">TRANSDISCARD</code> and <code dir="ltr">TRANSEXCEPTION</code>.</p>
</dd>
<dt><code dir="ltr"><span class="codeinlineitalic">user_defined_error</span></code></dt>
<dd>
<p>A user-defined error that is specified with the <code dir="ltr">RAISEERROR</code> option of a <code dir="ltr">FILTER</code> clause within a <code dir="ltr">MAP</code> statement.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect2"><a id="sthref1228"></a>Error Response Options</p>
<dl>
<dt><code dir="ltr">ABEND</code></dt>
<dd>
<p>Rolls back the transaction and terminates processing abnormally. <code dir="ltr">ABEND</code> is the default.</p>
</dd>
<dt><code dir="ltr">DISCARD</code></dt>
<dd>
<p>Logs the offending operation to the discard file but continue processing the transaction and subsequent transactions.</p>
</dd>
<dt><code dir="ltr">EXCEPTION</code></dt>
<dd>
<p>Handles the operation that causes an error as an exception, but processes error-free operations in the transaction normally. Use this option in conjunction with an exceptions <code dir="ltr">MAP</code> statement or to work with the <code dir="ltr">MAPEXCEPTION</code> option of <code dir="ltr">MAP</code>. For example, you can map columns from failed update statements into a "missing updates" table. In the parameter file, specify the exceptions <code dir="ltr">MAP</code> statement after the <code dir="ltr">MAP</code> statement for which the error is anticipated.</p>
<p><code dir="ltr">EXCEPTION</code> applies exception handling only to an individual SQL operation on an individual record. To apply exception handling to the entire transaction, use the <code dir="ltr">TRANSEXCEPTION</code> option.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When the Conflict Detection and Resolution (CDR) feature is active, CDR automatically treats all operations that cause errors as exceptions if an exceptions <code dir="ltr">MAP</code> statement exists for the affected table. In this case, <code dir="ltr">REPERROR</code> with <code dir="ltr">EXCEPTION</code> is not necessary, but you should use <code dir="ltr">REPERROR</code> with other options to handle conflicts that CDR cannot resolve, or for conflicts that you do not want CDR to handle.</div>
</dd>
<dt><code dir="ltr">IGNORE</code></dt>
<dd>
<p>Ignores the error.</p>
</dd>
<dt><code dir="ltr">RETRYOP [MAXRETRIES</code> <code dir="ltr"><span class="codeinlineitalic">n]</span></code></dt>
<dd>
<p>Retries the offending operation. Use the <code dir="ltr">MAXRETRIES</code> option to control the number of retries. For example, if a table is out of extents, <code dir="ltr">RETRYOP</code> with <code dir="ltr">MAXRETRIES</code> gives you time to add extents so the transaction does not fail. Replicat abends after the specified number of <code dir="ltr">MAXRETRIES</code>.</p>
</dd>
<dt><code dir="ltr">TRANSABORT [, MAXRETRIES</code> <code dir="ltr"><span class="codeinlineitalic">n</span></code><code dir="ltr">] [, DELAYSECS</code> <code dir="ltr"><span class="codeinlineitalic">n</span></code> <code dir="ltr">| DELAYCSECS</code> <code dir="ltr"><span class="codeinlineitalic">n</span></code><code dir="ltr">]</code></dt>
<dd>
<p>Aborts the transaction and repositions to the beginning of the transaction. This sequence continues either until the record(s) are processed successfully or <code dir="ltr">MAXRETRIES</code> expires. If <code dir="ltr">MAXRETRIES</code> is not set, the <code dir="ltr">TRANSABORT</code> action will loop continuously.</p>
<p>Use one of the <code dir="ltr">DELAY</code> options to delay the retry. <code dir="ltr">DELAYSECS</code> <code dir="ltr"><span class="codeinlineitalic">n</span></code> sets the delay in seconds and the default is 60 seconds. <code dir="ltr">DELAYCSECS</code> <code dir="ltr"><span class="codeinlineitalic">n</span></code> sets the delay in centiseconds.</p>
<p>The <code dir="ltr">TRANSABORT</code> option is useful for handling timeouts and deadlocks on databases that support those conditions.</p>
</dd>
<dt><code dir="ltr">TRANSDISCARD</code></dt>
<dd>
<p>Discards the entire source transaction if any operation within that transaction, including the commit operation, causes a Replicat error that is listed in the <code dir="ltr">REPERROR</code> error specification. Replicat aborts the transaction and, if the error occurred on a record, writes that record to the discard file. Replicat then replays the transaction and writes all of the records to the discard file, including the commit record. Replicat abends on errors that are caused by the discard processing.</p>
<p>If the discarded record has already been data-mapped to a target record, Replicat writes it to the discard file in the target format; otherwise, it will be written in source format. The replayed transaction itself is always written in source format.</p>
<p><code dir="ltr">TRANSDISCARD</code> supports record-level errors as well as commit errors.</p>
<p>Additional information is at the beginning of this topic.</p>
</dd>
<dt><code dir="ltr">TRANSEXCEPTION</code></dt>
<dd>
<p>If an error specified with <code dir="ltr">REPERROR</code> occurs on any record in a transaction, performs exceptions mapping for every record in the transaction according to its corresponding exceptions-mapping specification, as defined by a <code dir="ltr">MAPEXCEPTION</code> or <code dir="ltr">EXCEPTIONSONLY</code> clause in an exceptions <code dir="ltr">MAP</code> statement. If any record does not have a corresponding exceptions mapping specification, or if there is an error writing to the exceptions table, Replicat abends with an error message.</p>
<p>When an error is encountered and <code dir="ltr">TRANSEXCEPTION</code> is being used, Replicat aborts the transaction and, if the error occurred on a record, writes that record to the discard file. Replicat replays the transaction and examines the source records to find the exceptions-mapping specifications, and then executes them.</p>
<p><code dir="ltr">TRANSEXCEPTION</code> supports record-level errors as well as commit errors. To handle errors at the record level (for individual SQL operations), without affecting error-free operations in the same transaction, use the <code dir="ltr">EXCEPTION</code> option in a <code dir="ltr">MAP</code> statement.</p>
</dd>
<dt><code dir="ltr">RESET</code></dt>
<dd>
<p>Use a <code dir="ltr">REPERROR RESET</code> statement to remove error-handling rules specified in previous <code dir="ltr">REPERROR</code> parameters and apply default error handling to all <code dir="ltr">MAP</code> statements that follow.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect"><a id="sthref1229"></a>Examples of Using REPERROR Globally</p>
<p>These examples show <code dir="ltr">REPERROR</code> as used at the root of the parameter file to set global error-handling rules. You can override any or all of these rules for any given table or tables by using <code dir="ltr">REPERROR</code> in a <code dir="ltr">MAP</code> statement. See <a href="#BABJBGCB">"Examples of Using REPERROR Globally and in a MAP Statement"</a>.</p>
<dl>
<dd><a id="GWURF604"></a><a id="sthref1230"></a></dd>
<dt class="seghead">Example 1&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The following example demonstrates how to stop processing for most errors, but ignore duplicate-record errors.</p>
<pre dir="ltr">
REPERROR (DEFAULT, ABEND)
REPERROR (-1, IGNORE)
</pre></dd>
<dd><a id="GWURF605"></a><a id="sthref1231"></a></dd>
<dt class="seghead">Example 2&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The following example invokes an exceptions MAP statement created to handle errors on the account table. Errors on the product table cause Replicat to end abnormally because an exceptions <code dir="ltr">MAP</code> statement was not defined.</p>
<pre dir="ltr">
REPERROR (DEFAULT, EXCEPTION)
REPERROR (DEFAULT2, ABEND)
MAP sales.product, TARGET sales.product;
MAP sales.account, TARGET sales.account;
INSERTALLRECORDS
MAP sales.account, TARGET sales.account_exception,
EXCEPTIONSONLY,
COLMAP (account_no = account_no,
optype = @GETENV ('lasterr', 'optype'),
dberr = @GETENV ('lasterr', 'dberrnum'),
dberrmsg = @GETENV ('lasterr', 'dberrmsg'));
</pre></dd>
<dd><a id="GWURF606"></a><a id="sthref1232"></a></dd>
<dt class="seghead">Example 3&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The following applies error rules for the first <code dir="ltr">MAP</code> statement and then restores the default of <code dir="ltr">ABEND</code> to the second one.</p>
<pre dir="ltr">
REPERROR (-1, IGNORE)
MAP sales.product, TARGET sales.product;
REPERROR RESET
MAP sales.account, TARGET sales.account;
</pre></dd>
<dd><a id="GWURF607"></a><a id="sthref1233"></a></dd>
<dt class="seghead">Example 4&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The following discards the offending record and then replays the entire transaction if any operation on a record within it generates an error 1403. Other error types cause Replicat to abend.</p>
<pre dir="ltr">
REPERROR DEFAULT ABEND
REPERROR 1403 TRANSDISCARD
</pre></dd>
<dd><a id="GWURF608"></a><a id="sthref1234"></a></dd>
<dt class="seghead">Example 5&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>The following discards the offending record and then replays the entire transaction to search for an exceptions-mapping specification that writes to the exceptions table that is named <code dir="ltr">tgtexception</code>. Other errors cause Replicat to discard the offending record (if applicable) and then abend.</p>
<pre dir="ltr">
REPERROR DEFAULT ABEND
REPERROR 1403 TRANSEXCEPTION
MAP src, TARGET tgt, &amp;
MAPEXCEPTION (TARGET tgtexception, INSERTALLRECORDS, COLMAP (&hellip;) );
</pre></dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect"><a id="BABJBGCB"></a>Examples of Using REPERROR Globally and in a MAP Statement</p>
<p>The following examples show different ways that <code dir="ltr">REPERROR</code> can be used in a <code dir="ltr">MAP</code> statement in conjunction with a global <code dir="ltr">REPERROR</code> statement.</p>
<dl>
<dd><a id="GWURF564"></a><a id="sthref1235"></a></dd>
<dt class="seghead">Example 1&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre dir="ltr">
REPLICAT <span class="italic">group_name</span>
REPERROR (<span class="italic">error1</span> , <span class="italic">response1</span>)
MAP <span class="italic">src1</span>, TARGET <span class="italic">tgt1</span>, REPERROR (<span class="italic">error1</span>, <span class="italic">response2</span>);
MAP <span class="italic">src2</span>, TARGET <span class="italic">tgt2</span>, REPERROR (<span class="italic">error2</span>, <span class="italic">response3</span>);
</pre>
<p>In the preceding example, when <code dir="ltr">error1</code> occurs for the first <code dir="ltr">MAP</code> statement, the action should be <code dir="ltr">response2</code>, not <code dir="ltr">response1</code>, because an override was specified. However, if an <code dir="ltr">error1</code> occurs for the second <code dir="ltr">MAP</code> statement, the response should be <code dir="ltr">response1</code>, the global response. The response for <code dir="ltr">error2</code> would be <code dir="ltr">response3</code>, which is <code dir="ltr">MAP</code>-specific.</p>
</dd>
<dd><a id="GWURF565"></a><a id="sthref1236"></a></dd>
<dt class="seghead">Example 2&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre dir="ltr">
REPLICAT <span class="italic">group_name</span>
REPERROR (<span class="italic">error1</span> , <span class="italic">response1</span>)
MAP <span class="italic">src1</span>, TARGET <span class="italic">tgt1</span>, REPERROR (<span class="italic">error2</span>, <span class="italic">response2</span>),
REPERROR (<span class="italic">error3</span>, <span class="italic">response3</span>);
</pre>
<p>In the preceding example, when replicating from <code dir="ltr">src1</code> to <code dir="ltr">src2</code>, all errors and actions (1-3) should apply, because all <code dir="ltr">REPERROR</code> statements address different errors (there are no <code dir="ltr">MAP</code>-specific overrides).</p>
</dd>
<dd><a id="GWURF566"></a><a id="sthref1237"></a></dd>
<dt class="seghead">Example 3&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre dir="ltr">
REPLICAT <span class="italic">group_name</span>
REPERROR (<span class="italic">error1</span> , <span class="italic">response1</span>)
MAP <span class="italic">src1</span>, TARGET <span class="italic">tgt1</span>, REPERROR (<span class="italic">error1</span>, <span class="italic">response2</span>);
MAP <span class="italic">src2</span>, TARGET <span class="italic">tgt2</span>, REPERROR (<span class="italic">error2</span>, <span class="italic">response3</span>);
REPERROR (<span class="italic">error1</span> , <span class="italic">response4</span>)
MAP <span class="italic">src2</span>, TARGET <span class="italic">tgt2</span>, REPERROR (<span class="italic">error3</span>, <span class="italic">response3</span>);
</pre>
<p>In the preceding example, if <code dir="ltr">error1</code> occurs for the first <code dir="ltr">MAP</code> statement, the action should be <code dir="ltr">response2</code>. For the second one it would be <code dir="ltr">response1</code> (the global response), and for the third one it would be <code dir="ltr">response4</code> (because of the second <code dir="ltr">REPERROR</code> statement). A global <code dir="ltr">REPERROR</code> statement applies to all <code dir="ltr">MAP</code> statements that follow it in the parameter file until another <code dir="ltr">REPERROR</code> statement starts new rules.</p>
</dd>
<dd><a id="GWURF567"></a><a id="sthref1238"></a></dd>
<dt class="seghead">Example 4&nbsp;&nbsp;&nbsp;</dt>
<dd>
<pre dir="ltr">
REPERROR DEFAULT ABEND
REPERROR 1403 TRANSDISCARD.
MAP src, TARGET tgt, REPERROR(600 TRANSDISCARD);
</pre>
<p>In the preceding example, if error 600 is encountered while applying source table <code dir="ltr">src</code> to target table <code dir="ltr">tgt</code>, the whole transaction is written to discard file. Encountering error 1403 also results in the same action based on the global <code dir="ltr">REPERROR</code> specification. On the other errors, the process simply discards only the offending record and then abends.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment135">
<tr>
<td class="cellalignment142"><table class="cellalignment140">
<tr>
<td class="cellalignment139"><a href="gg_parameters125.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>

<td class="cellalignment139"><a href="gg_parameters127.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table></td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2013, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment144">
<table class="cellalignment138">
<tr>
<td class="cellalignment139"><a href="../../index.html"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment139"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment139"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
