<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml/DTD/xhtml1-transitional.dtd">
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<title>HANDLECOLLISIONS | NOHANDLECOLLISIONS</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1056" />
<meta name="description" content="Contains instructions for using Oracle GoldenGate commands, parameters, and functions." />
<meta name="dcterms.created" content="2015-06-05T16:34:9Z" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Oracle&reg; GoldenGate Reference for Oracle GoldenGate for Windows and UNIX" />
<meta name="dcterms.identifier" content="E29392-08" />
<meta name="dcterms.isVersionOf" content="GWURF" />
<link rel="Start" href="../../index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="gg_parameters080.htm" title="Previous" type="text/html" />
<link rel="Next" href="gg_parameters082.htm" title="Next" type="text/html" />
<link rel="alternate" href="../GWURF.pdf" title="PDF version" type="application/pdf" />
<link rel="alternate" href="../GWURF.epub" title="ePub version" type="application/epub+zip" />
<link rel="alternate" href="../GWURF.mobi" title="Mobipocket version" type="application/x-mobipocket-ebook" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Skip Headers</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns"><div id="BREADCRUMBS"><a href="http://docs.oracle.com">Home</a> / <a href="../../index.html">Middleware</a> / <a href="../index.html">Oracle GoldenGate for Windows and UNIX</a>
</div>

<span id="PAGE" style="display:none;">197/413</span>
<!-- End Header --><a id="i1067175"></a>
<div id="GWURF520" class="refsect1">
<h1 class="refsect1">HANDLECOLLISIONS | NOHANDLECOLLISIONS</h1>
<div class="refsubsect"><p class="titleinrefsubsect"><a id="sthref976"></a>Valid For</p>
<p>Replicat</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect"><a id="sthref977"></a>Description</p>
<p>Use the <code dir="ltr">HANDLECOLLISIONS</code> and <code dir="ltr">NOHANDLECOLLISIONS</code> parameters to control whether or not Replicat tries to resolve duplicate-record and missing-record errors when applying SQL on the target. These errors, called <span class="italic">collisions</span>, occur during an initial load, when data from source tables is being loaded to target tables while Oracle GoldenGate is replicating transactional changes that are being made to those tables. When Oracle GoldenGate applies the replicated changes after the load is finished, <code dir="ltr">HANDLECOLLISIONS</code> provides Replicat with error-handling logic for these collisions.</p>
<p>You can use <code dir="ltr">HANDLECOLLISIONS</code> and <code dir="ltr">NOHANDLECOLLISIONS</code> in the following ways:</p>
<ul>
<li>
<p>You can enable <code dir="ltr">HANDLECOLLISIONS</code> and <code dir="ltr">NOHANDLECOLLISIONS</code> in a global manner by specifying them at the root level of the parameter file. One parameter remains enabled for all subsequent <code dir="ltr">MAP</code> statements in the parameter file, until the opposing parameter is encountered.</p>
</li>
<li>
<p>You can enable <code dir="ltr">HANDLECOLLISIONS</code> or <code dir="ltr">NOHANDLECOLLISIONS</code> within a specific <code dir="ltr">MAP</code> parameter to enable or disable error handling only for that source-target mapping.</p>
</li>
</ul>
<p>The preceding methods can be combined. You can specify a global collisions-handling rule and then override that rule with different collisions-handling rules in the <code dir="ltr">MAP</code> statements. A <code dir="ltr">MAP</code> specification always overrides the global specification.</p>
<div class="refsubsect"><p class="titleinrefsubsect2"><a id="sthref978"></a>How HANDLECOLLISIONS Works</p>
<p>The following example explains how <code dir="ltr">HANDLECOLLISIONS</code> works:</p>
<ul>
<li>
<p>When Replicat encounters an update to a column that Oracle GoldenGate is using as a key, the handling is as follows:</p>
<ul>
<li>
<p>If the row with the old key is not found in the target, the change record in the trail is converted to an insert.</p>
</li>
<li>
<p>If a row with the new key exists in the target, Replicat deletes the row that has the old key (it would not exist if the update had executed successfully), and then the row with the new key is updated as an overlay where the trail values replace the current values.</p>
</li>
</ul>
<p>This logic requires all of the columns in the table (not just the ones that changed) to be logged to the transaction log, either by default or by force, such as by using the <code dir="ltr">COLS</code> option of <code dir="ltr">ADD TRANDATA</code> for an Oracle database. See <a href="#i2726269">"Possible Solutions to Avoid Missing Column Values"</a> for more information.</p>
</li>
<li>
<p>When Replicat encounters a duplicate-record error, the static record that was applied by the initial load is overwritten by the change record in the trail. Overlaying the change is safer from an operational standpoint than ignoring the duplicate-record error.</p>
</li>
<li>
<p>When Replicat encounters a missing-record error during an update or delete operation that does not affect a key column, the change record in the trail is discarded. These errors happen when a record is changed on the source system and then the record is deleted before the table data is extracted by the initial-load process. For example:</p>
<ol>
<li>
<p>The application updates record A in source table1.</p>
</li>
<li>
<p>Extract extracts the update.</p>
</li>
<li>
<p>The application deletes record A in source table1.</p>
</li>
<li>
<p>Extract extracts the delete.</p>
</li>
<li>
<p>Oracle GoldenGate extracts initial-load data from source table1, without record A.</p>
</li>
<li>
<p>Oracle GoldenGate applies the initial load, without record A.</p>
</li>
<li>
<p>Replicat attempts to apply the update of record A.</p>
</li>
<li>
<p>The database returns a "record missing" error.</p>
</li>
<li>
<p>Replicat attempts to apply the delete of record A.</p>
</li>
<li>
<p>The database returns a "record missing" error.</p>
</li>
</ol>
</li>
</ul>
<p>Disable <code dir="ltr">HANDLECOLLLIONS</code> after the transactional changes captured during the initial load are applied to the target tables, so that Replicat does not automatically handle subsequent errors. Errors generated after initial synchronization indicate an abnormal condition and should be evaluated by someone who can determine how to resolve them. For example, a missing-record error could indicate that a record which exists on the source system was inadvertently deleted from the target system.</p>
<p>You can turn off <code dir="ltr">HANDLECOLLISIONS</code> in the following ways:</p>
<ul>
<li>
<p>Stop Replicat and remove <code dir="ltr">HANDLECOLLISIONS</code> from the Replicat parameter file (can cause target latency). Alternatively, you can edit the parameter file to add <code dir="ltr">NOHANDLECOLLISIONS</code> before the <code dir="ltr">MAP</code> statements for which you want to disable the error handling.</p>
</li>
<li>
<p>While Replicat is running, run GGSCI and then use the <code dir="ltr">SEND REPLICAT</code> command with the <code dir="ltr">NOHANDLECOLLISIONS</code> option for the tables that you want to affect. See <a href="ggsci_commands028.htm#i935638">"SEND REPLICAT"</a> for more information.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If using <code dir="ltr">SEND REPLICAT</code>, make certain to remove <code dir="ltr">HANDLECOLLISIONS</code> from the parameter file or add a <code dir="ltr">NOHANDLECOLLISIONS</code> parameter before starting another Replicat run, so that <code dir="ltr">HANDLECOLLISIONS</code> does not activate again.</div>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect2"><a id="i2726269"></a>Possible Solutions to Avoid Missing Column Values</p>
<p>When a database does not log all of the column values of a source table by default, there can be errors if the target table has <code dir="ltr">NOT NULL</code> constraints when Replicat attempts to convert a primary-key update to an insert. You can work around this scenario in the following ways:</p>
<ul>
<li>
<p>Use the <code dir="ltr">NOCOMPRESSUPDATES</code> parameter in the Extract parameter file to send all of the columns of the table to the trail, and configure the database to log all column values. By default, Extract only writes the primary key and the columns that changed to the trail. This is the safest method, because it writes the current values at the time when the operation is performed and eliminates the need for fetching.</p>
</li>
<li>
<p>Use the <code dir="ltr">FETCHOPTIONS</code> parameter with the <code dir="ltr">FETCHPKUPDATECOLS</code> option in the Extract parameter file. This configuration causes Extract to fetch unavailable columns when a key column is updated on the source. A fetch is the <span class="italic">current</span> value, not necessarily the value at the time of a particular update, so there can be data integrity issues. See <a href="gg_parameters062.htm#i1065283">"FETCHOPTIONS"</a> for more information and additional fetch options to handle unsuccessful fetches.</p>
</li>
<li>
<p>To avoid fetches, use <code dir="ltr">HANDLECOLLISIONS</code> with <code dir="ltr">_ALLOWPKMISSINGROWCOLLISIONS</code> to skip the update instead of converting it to an <code dir="ltr">INSERT</code>. This configuration can also cause data integrity issues under certain conditions. See <a href="#i2726035">"Preventing Conversion of Key Updates to Inserts"</a> for more information.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect2"><a id="i2726035"></a>Preventing Conversion of Key Updates to Inserts</p>
<p>In some cases, it is not appropriate to convert an operation that updates a key column to an <code dir="ltr">INSERT</code> if the target row does not exist. In these cases, you can use the <code dir="ltr">_ALLOWPKMISSINGROWCOLLISIONS</code> option to force Replicat to <span class="italic">skip</span> the operation, instead of applying it as an insert.</p>
<p>The following example illustrates such a case. This scenario performs an instantiation of Oracle GoldenGate replication, using the default <code dir="ltr">HANDLECOLLISIONS</code> logic, to show what happens if column values are missing when Replicat tries to convert the update to an insert.</p>
<p><span class="bold">Source and target tables:</span></p>
<p>Both tables are named <span class="italic">sample</span>.</p>
<pre dir="ltr">
f1  f2                   f3  f4
1   10-01-2011 11:30:45  1   1
2   10-02-2011 14:15:20  2   2
3   10-03-2011 15:12:55  3   3
</pre>
<ul>
<li>
<p>All columns are <code dir="ltr">NOT NULL</code>.</p>
</li>
<li>
<p><code dir="ltr">f1</code> is the primary key.</p>
</li>
<li>
<p><code dir="ltr">f2</code> is a date field that automatically updates whenever the record is changed.</p>
</li>
<li>
<p><code dir="ltr">KEYCOLS</code> is used in the parameter files to instruct Oracle GoldenGate to use <code dir="ltr">f1</code> and <code dir="ltr">f2</code> as the key.</p>
</li>
<li>
<p><code dir="ltr">ADD TRANDATA</code> was issued accordingly, to log column <code dir="ltr">f2</code>. Column <code dir="ltr">f1</code> is automatically logged because it is a primary key.</p>
</li>
</ul>
<p><span class="bold">DML sequence of events:</span></p>
<ol>
<li>
<p>Start Extract to capture ongoing transactions.</p>
</li>
<li>
<p><code dir="ltr">UPDATE</code> the table as follows:</p>
<pre dir="ltr">
update sample set f3=3 where f1=2;
</pre>
<p>In this operation, column <code dir="ltr">f2</code> updates automatically with the current date and time. Oracle GoldenGate considers this to be a key update.</p>
<p>The row now looks like this:</p>
<pre dir="ltr">
2   10-20-2011 08:01:32  3   3
</pre></li>
<li>
<p><code dir="ltr">DELETE</code> the same row.</p>
<pre dir="ltr">
delete sample where f1=2;
</pre>
<p>Now the table contains the following rows:</p>
<pre dir="ltr">
f1  f2                   f3  f4
1   10-01-2011 11:30:45  1   1
3   10-03-2011 15:12:55  3   3
</pre></li>
<li>
<p>Perform an export/import of the source data to the target, using <code dir="ltr">HANDLECOLLISIONS</code> to handle missing or duplicate rows.</p>
</li>
<li>
<p>The replicated update (<code dir="ltr">update sample, set f3=3 where f1=2</code>) is the first operation to be applied from the trail by Replicat. It fails because the row was deleted from the source before the import/export was performed.</p>
</li>
<li>
<p>Replicat converts the <code dir="ltr">UPDATE</code> to an <code dir="ltr">INSERT</code> according to <code dir="ltr">HANDLECOLLISIONS</code> logic for operations that update a key column (the <code dir="ltr">f2</code> date-time column).</p>
</li>
<li>
<p>In a case where all of the column values are available in the trail, the new <code dir="ltr">INSERT</code> succeeds. Moreover, it does not cause inconsistency, even though the row was deleted on the source, because the replicated delete (<code dir="ltr">delete sample where f1=2</code>) removes it again. However, in this example, there are two problems:</p>
<ul>
<li>
<p>Only columns <code dir="ltr">f1</code> and <code dir="ltr">f2</code>, plus the changed value of <code dir="ltr">f3</code>, are logged. The value for <code dir="ltr">f4</code> is not logged and the value is not available for the insert operation.</p>
</li>
<li>
<p>All columns have a <code dir="ltr">NOT NULL</code> constraint.</p>
</li>
</ul>
</li>
</ol>
<p>The missing <code dir="ltr">f4</code> value causes the <code dir="ltr">INSERT</code> to fail. By using <code dir="ltr">_ALLOWPKMISSINGROWCOLLISIONS</code>, Replicat skips the <code dir="ltr">UPDATE</code> instead of converting it to an <code dir="ltr">INSERT</code>. This causes the subsequent <code dir="ltr">DELETE</code> to fail because the row does not exist, so Replicat skips the <code dir="ltr">DELETE</code> record as part of the default <code dir="ltr">HANDLECOLLISIONS</code> logic. The data now is consistent with that of the source.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect2"><a id="sthref979"></a>Messages from <code dir="ltr">_ALLOWPKMISSINGROWCOLLISIONS</code></p>
<p>Because of the risk of data loss associated with <code dir="ltr">_ALLOWPKMISSINGROWCOLLISIONS</code>, a warning is issued when it is used. The warning is similar to the following text:</p>
<pre dir="ltr">
Using _ALLOWPKMISSINGROWCOLLISIONS may cause data corruption under certain conditions.
</pre>
<p>A warning message also is issued for when an <code dir="ltr">UPDATE</code> to a key does not contain a full after image for conversion to an insert:</p>
<pre dir="ltr">
A complete after image is not available in SOURCE.x, at RBA 123, in file .\dirdat\aa000000, while inserting a row into TARGET.x due to a missing target row for a key update operation. NOCOMPRESSUPDATES or FETCHOPTIONS FETCHPKUPDATECOLS may be specified in the EXTRACT parameter file to include a complete image for key update operations.
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect2"><a id="sthref980"></a>Getting More Information about Initial Loads</p>
<p>See <a class="olink GWUAD546" href="../../gg-winux/GWUAD/wu_initsync.htm#GWUAD546"><span class="italic">Administering Oracle GoldenGate for Windows and UNIX</span></a> for more information about Oracle GoldenGate initial load methods.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect"><a id="sthref981"></a>Default</p>
<p><code dir="ltr">NOHANDLECOLLISIONS</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect"><a id="sthref982"></a>Syntax</p>
<pre dir="ltr">
HANDLECOLLISIONS | NOHANDLECOLLISIONS [_ALLOWPKMISSINGROWCOLLISIONS]
[THREADS (<span class="codeinlineitalic">threadID</span>[, <span class="codeinlineitalic">threadID</span>][, ...][, <span class="codeinlineitalic">thread_range</span>[, <span class="codeinlineitalic">thread_range</span>][, ...])]
</pre>
<dl>
<dt><code dir="ltr">HANDLECOLLISIONS</code></dt>
<dd>
<p>Enables collision handling.</p>
</dd>
<dt><code dir="ltr">_ALLOWPKMISSINGROWCOLLISIONS</code></dt>
<dd>
<p>Use <code dir="ltr">HANDLECOLLISIONS</code> with _<code dir="ltr">ALLOWPKMISSINGROWCOLLISIONS</code> to skip primary-key <code dir="ltr">UPDATE</code> operations if the corresponding target row does not exist.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Skipping operations can cause data corruption. See the Description in this topic.</div>
</dd>
<dt><code dir="ltr">NOHANDLECOLLISIONS</code></dt>
<dd>
<p>Turns off collision handling.</p>
</dd>
<dt><code dir="ltr">THREADS (</code><code dir="ltr"><span class="codeinlineitalic">threadID</span></code><code dir="ltr">[,</code> <code dir="ltr"><span class="codeinlineitalic">threadID</span></code><code dir="ltr">][, ...][,</code> <code dir="ltr"><span class="codeinlineitalic">thread_range</span></code><code dir="ltr">[,</code> <code dir="ltr"><span class="codeinlineitalic">thread_range</span></code><code dir="ltr">][, ...]</code>)</dt>
<dd>
<p>Enables <code dir="ltr">HANDLECOLLISIONS</code> for the specified threads. When used in a global <code dir="ltr">HANDLECOLLISIONS</code> statement at the root level of the parameter file, <code dir="ltr">HANDLECOLLISIONS</code> is enabled for the specified threads wherever they are in all <code dir="ltr">MAP</code> statements where . When used in a <code dir="ltr">HANDLECOLLISIONS</code> clause of a <code dir="ltr">MAP</code> statement, <code dir="ltr">HANDLECOLLISIONS</code> is enabled only for that <code dir="ltr">MAP</code> statement.</p>
<dl>
<dt><code dir="ltr">threadID[, threadID][, ...]</code></dt>
<dd>
<p>Specifies a thread ID or a comma-delimited list of threads in the format of <code dir="ltr">threadID, threadID, threadID</code>.</p>
</dd>
<dt><code dir="ltr">thread_range[, thread_range][, ...]</code></dt>
<dd>
<p>Specifies a range of threads in the form of <code dir="ltr">threadIDlow-threadIDhigh</code> or a comma-delimted list of ranges in the format of <code dir="ltr">threadIDlow-threadIDhigh</code>, <code dir="ltr">threadIDlow-threadIDhigh</code>.</p>
</dd>
</dl>
<p>A combination of these formats is permitted, such as <code dir="ltr">threadID</code>, <code dir="ltr">threadID</code>, <code dir="ltr">threadIDlow-threadIDhigh</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect"><p class="titleinrefsubsect"><a id="sthref983"></a>Examples</p>
<dl>
<dd><a id="GWURF521"></a><a id="sthref984"></a></dd>
<dt class="seghead">Example 1&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>This example enables <code dir="ltr">HANDLECOLLISIONS</code> for all <code dir="ltr">MAP</code> statements in the parameter file.</p>
<pre dir="ltr">
HANDLECOLLISIONS
MAP hr.emp, TARGET hr.emp;
MAP hr.job_hist, TARGET hr.job_hist;
MAP hr.dep, TARGET hr.dep;
MAP hr.country, TARGET hr.country;
</pre></dd>
<dd><a id="GWURF522"></a><a id="sthref985"></a></dd>
<dt class="seghead">Example 2&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>This example enables <code dir="ltr">HANDLECOLLISIONS</code> for some <code dir="ltr">MAP</code> statements while disabling it for others.</p>
<pre dir="ltr">
HANDLECOLLISIONS
MAP hr.emp, TARGET hr.emp;
MAP hr.job_hist, TARGET hr.job_hist;
NOHANDLECOLLISIONS
MAP hr.dep, TARGET hr.dep;
MAP hr.country, TARGET hr.country;
</pre></dd>
<dd><a id="GWURF562"></a><a id="sthref986"></a></dd>
<dt class="seghead">Example 3&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>This example shows the basic use of <code dir="ltr">HANDLECOLLISIONS</code> within a <code dir="ltr">MAP</code> statement.</p>
<pre dir="ltr">
MAP dbo.tcust, TARGET dbo.tcust, HANDLECOLLISIONS;
</pre></dd>
<dd><a id="GWURF523"></a><a id="sthref987"></a></dd>
<dt class="seghead">Example 4&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>This example shows a combination of global and <code dir="ltr">MAP</code>-level use. The <code dir="ltr">MAP</code> specification overrides the global specification for the specified tables.</p>
<pre dir="ltr">
HANDLECOLLISIONS
MAP hr.emp, TARGET hr.emp;
MAP hr.job_hist, TARGET hr.job_hist;
MAP hr.dep, TARGET hr.dep, NOHANDLECOLLISIONS;
MAP hr.country, TARGET hr.country, NOHANDLECOLLISIONS;
</pre></dd>
<dd><a id="GWURF1115"></a><a id="sthref988"></a></dd>
<dt class="seghead">Example 5&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>In the following example, <code dir="ltr">HANDLECOLLISIONS</code> is enabled globally for all <code dir="ltr">MAP</code> statements, except for default thread 0 in the first <code dir="ltr">MAP</code> statement and for thread 3 in the second <code dir="ltr">MAP</code> statement.</p>
<pre dir="ltr">
HANDLECOLLISIONS
MAP fin.*, TARGET fin.*;
MAP sales.*, TARGET sales.*;
MAP orders.*, TARGET orders.*;
MAP scott.cust, TARGET scott.cust, NOHANDLECOLLISIONS;
MAP amy.cust, TARGET amy.cust, THREAD(3), NOHANDLECOLLISIONS;
</pre></dd>
<dd><a id="GWURF1116"></a><a id="sthref989"></a></dd>
<dt class="seghead">Example 6&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>In this example, <code dir="ltr">HANDLECOLLISIONS</code> is enabled globally, but turned off for thread 3. The remaining threads 1, 2, and 4 will handle collisions.</p>
<pre dir="ltr">
HANDLECOLLISIONS
NOHANDLECOLLISIONS THREAD(3)
MAP scott.emplyees, TARGET scott.employees, THREADRANGE(1,4, OID);
MAP scott.inventory, TARGET scott.inventory, THREADRANGE(1,4, OID);
MAP scott.cust, TARGET scott.cust, THREADRANGE(1,4, OID);
</pre></dd>
<dd><a id="GWURF1117"></a><a id="sthref990"></a></dd>
<dt class="seghead">Example 7&nbsp;&nbsp;&nbsp;</dt>
<dd>
<p>In this example, <code dir="ltr">HANDLECOLLISIONS</code> is enabled globally, then disabled globally for threads 5 through 7. In the first map statement, all threads will handle collisions, since the <code dir="ltr">HANDLECOLLISIONS</code> parameter does not specify a thread or a range. In the second map statement, only threads 4, 8, and 9 will handle collisions, because the global <code dir="ltr">NOHANDLECOLLISIONS</code> applies to threads 5-7.</p>
<pre dir="ltr">
HANDLECOLLISIONS
NOHANDLECOLLISIONS THREADRANGE(5-7)
MAP scott.cust, TARGET scott.cust, THREADRANGE(4,9,OID), HANDLECOLLISIONS; 
MAP scott.offices, TARGET scott.offices, THREADRANGE(4,9,OID);
MAP scott.emp, TARGET scott.emp, THREADRANGE(4,9,OID);
MAP scott.ord, TARGET scott.ord, THREADRANGE(4,9,OID);
MAP acct.*, TARGET acct.*;
MAP admin.*, TARGET admin.*;
</pre></dd>
</dl>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment135">
<tr>
<td class="cellalignment142"><table class="cellalignment140">
<tr>
<td class="cellalignment139"><a href="gg_parameters080.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>

<td class="cellalignment139"><a href="gg_parameters082.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table></td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2013, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment144">
<table class="cellalignment138">
<tr>
<td class="cellalignment139"><a href="../../index.html"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment139"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment139"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
