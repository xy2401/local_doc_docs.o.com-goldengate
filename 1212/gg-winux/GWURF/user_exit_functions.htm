<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml/DTD/xhtml1-transitional.dtd">
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<title>6 User Exit Functions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1056" />
<meta name="description" content="This chapter describes the Oracle GoldenGate user exit functions and their syntax and includes the following topics:" />
<meta name="dcterms.created" content="2015-06-05T16:34:31Z" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Oracle&reg; GoldenGate Reference for Oracle GoldenGate for Windows and UNIX" />
<meta name="dcterms.identifier" content="E29392-08" />
<meta name="dcterms.isVersionOf" content="GWURF" />
<link rel="Start" href="../../index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="column_conversion_functions038.htm" title="Previous" type="text/html" />
<link rel="Next" href="user_exit_functions001.htm" title="Next" type="text/html" />
<link rel="alternate" href="../GWURF.pdf" title="PDF version" type="application/pdf" />
<link rel="alternate" href="../GWURF.epub" title="ePub version" type="application/epub+zip" />
<link rel="alternate" href="../GWURF.mobi" title="Mobipocket version" type="application/x-mobipocket-ebook" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Skip Headers</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns"><div id="BREADCRUMBS"><a href="http://docs.oracle.com">Home</a> / <a href="../../index.html">Middleware</a> / <a href="../index.html">Oracle GoldenGate for Windows and UNIX</a>
</div>

<span id="PAGE" style="display:none;">369/413</span>
<!-- End Header -->
<div id="GWURF831" class="chapter"><a id="g1216113"></a> <a id="i1153506"></a>
<h1 class="chapter"><span class="secnum">6</span> User Exit Functions</h1>
<p><a id="GWURF1170"></a>This chapter describes the Oracle GoldenGate user exit functions and their syntax and includes the following topics:</p>
<ul>
<li>
<p><a href="#CIHJBIFI">Section 6.1, "Calling a User Exit"</a></p>
</li>
<li>
<p><a href="#CIHGEJHH">Section 6.2, "Summary of User Exit Functions"</a></p>
</li>
<li>
<p><a href="#i1151243">Section 6.3, "Using EXIT_CALL_TYPE"</a></p>
</li>
<li>
<p><a href="#i1000030">Section 6.4, "Using EXIT_CALL_RESULT"</a></p>
</li>
<li>
<p><a href="#i1000059">Section 6.5, "Using EXIT_PARAMS"</a></p>
</li>
<li>
<p><a href="#i1000083">Section 6.6, "Using ERCALLBACK"</a></p>
</li>
<li>
<p><a href="#i1143514">Section 6.7, "Function Codes"</a></p>
</li>
</ul>
<p>For more information about using Oracle GoldenGate user exits, see <a class="olink GWUAD607" href="../../gg-winux/GWUAD/wu_customcode.htm#GWUAD607"><span class="italic">Administering Oracle GoldenGate for Windows and UNIX</span></a>.</p>
<a id="CIHJBIFI"></a>
<div id="GWURF832" class="sect1">
<h2 class="sect1"><span class="secnum">6.1</span> Calling a User Exit</h2>
<p>Write the user exit routine in C programming code. Use the <code dir="ltr">CUSEREXIT</code> parameter to call the user exit from a Windows DLL or UNIX shared object at a defined exit point within Oracle GoldenGate processing. Your user exit routine must be able to accept different events and information from the Extract and Replicat processes, process the information as desired, and return a response and information to the caller (the Oracle GoldenGate process that called it). For more information and syntax for the <code dir="ltr">CUSEREXIT</code> parameter, see <a href="gg_parameters033.htm#i1005783">"CUSEREXIT"</a>.</p>
</div>
<!-- class="sect1" -->
<a id="CIHGEJHH"></a>
<div id="GWURF833" class="sect1">
<h2 class="sect1"><span class="secnum">6.2</span> Summary of User Exit Functions</h2>
<div class="inftblhruleinformal">
<table class="cellalignment145" title="User Exit Functions" summary="This table describes the user exit functions.">
<thead>
<tr class="cellalignment136">
<th class="cellalignment146" id="r1c1-t2">Parameter</th>
<th class="cellalignment146" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment136">
<td class="cellalignment142" id="r2c1-t2" headers="r1c1-t2"><code dir="ltr">EXIT_CALL_TYPE</code></td>
<td class="cellalignment142" headers="r2c1-t2 r1c2-t2">Indicates when, during processing, the routine is called.</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r3c1-t2" headers="r1c1-t2"><code dir="ltr">EXIT_CALL_RESULT</code></td>
<td class="cellalignment142" headers="r3c1-t2 r1c2-t2">Provides a response to the routine.</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r4c1-t2" headers="r1c1-t2"><code dir="ltr">EXIT_PARAMS</code></td>
<td class="cellalignment142" headers="r4c1-t2 r1c2-t2">Supplies information to the routine.</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r5c1-t2" headers="r1c1-t2"><code dir="ltr">ERCALLBACK</code></td>
<td class="cellalignment142" headers="r5c1-t2 r1c2-t2">Implements a callback routine. Callback routines retrieve record and Oracle GoldenGate context information, and they modify the contents of data records.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="sect1" -->
<a id="i1151243"></a>
<div id="GWURF834" class="sect1">
<h2 class="sect1"><span class="secnum">6.3</span> Using EXIT_CALL_TYPE</h2>
<p>Use <code dir="ltr">EXIT_CALL_TYPE</code> to indicate when, during processing, the Extract or Replicat process (the caller) calls a user exit routine. A process can call a routine with the following calls.</p>
<div id="GWURF835" class="tblhruleformalwide"><p class="titleintable"><a id="sthref1913"></a><a id="sthref1914"></a>Table 6-1 User Exit Calls</p>
<table class="cellalignment145" title="User Exit Calls" summary="This table lists the user exit calls. It gives the call type and processing point.">
<thead>
<tr class="cellalignment136">
<th class="cellalignment146" id="r1c1-t3">Call type</th>
<th class="cellalignment146" id="r1c2-t3">Processing point</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment136">
<td class="cellalignment142" id="r2c1-t3" headers="r1c1-t3">
<p><code dir="ltr">EXIT_CALL_ABORT_TRANS</code></p>
</td>
<td class="cellalignment142" headers="r2c1-t3 r1c2-t3">
<p>Valid when the <code dir="ltr">RECOVERYOPTIONS</code> mode is <code dir="ltr">APPEND</code> (the default). Called when a data pump or Replicat reads a <code dir="ltr">RESTART ABEND</code> record from the trail, placed there by a writer process that abended. (The writer process can be the primary Extract writing to a local trail read by a data pump, or a data pump writing to a remote trail read by Replicat.) This call type enables the user exit to abort or discard the transaction that was left incomplete when the writer process stopped, and then to recover and resume processing at the start of the previous completed transaction.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r3c1-t3" headers="r1c1-t3">
<p><code dir="ltr">EXIT_CALL_BEGIN_TRANS</code></p>
</td>
<td class="cellalignment142" headers="r3c1-t3 r1c2-t3">
<p>Called just before either of the following:</p>
<ul>
<li>
<p>a <code dir="ltr">BEGIN</code> record of a transaction that is read by a data pump</p>
</li>
<li>
<p>the start of a Replicat transaction</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r4c1-t3" headers="r1c1-t3">
<p><code dir="ltr">EXIT_CALL_CHECKPOINT</code></p>
</td>
<td class="cellalignment142" headers="r4c1-t3 r1c2-t3">
<p>Called just before an Extract or Replicat checkpoint is written.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r5c1-t3" headers="r1c1-t3">
<p><code dir="ltr">EXIT_CALL_DISCARD_ASCII_RECORD</code></p>
</td>
<td class="cellalignment142" headers="r5c1-t3 r1c2-t3">
<p>Called during Extract processing before an ASCII input record is written to the discard file. The associated ASCII buffer can be retrieved and manipulated by the user exit using callback routines.</p>
<p>This call type is not applicable for use with the Replicat process.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r6c1-t3" headers="r1c1-t3">
<p><code dir="ltr">EXIT_CALL_DISCARD_RECORD</code></p>
</td>
<td class="cellalignment142" headers="r6c1-t3 r1c2-t3">
<p>Called during Replicat processing before a record is written to the discard file. Records can be discarded for several reasons, such as when a value in the Oracle GoldenGate change record is different from the current version in the target table.The associated discard buffer can be retrieved and manipulated by the user exit using callback routines.</p>
<p>This call type is not applicable for use with the Extract process.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r7c1-t3" headers="r1c1-t3">
<p><code dir="ltr">EXIT_CALL_END_TRANS</code></p>
</td>
<td class="cellalignment142" headers="r7c1-t3 r1c2-t3">
<p>Called just after either of the following:</p>
<ul>
<li>
<p>an <code dir="ltr">END</code> record of a transaction that is read by a data pump</p>
</li>
<li>
<p>the last record in a Replicat transaction</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r8c1-t3" headers="r1c1-t3">
<p><code dir="ltr">EXIT_CALL_FATAL_ERROR</code></p>
</td>
<td class="cellalignment142" headers="r8c1-t3 r1c2-t3">
<p>Called during Extract or Replicat processing just before Oracle GoldenGate terminates after a fatal error.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r9c1-t3" headers="r1c1-t3">
<p><code dir="ltr">EXIT_CALL_PROCESS_MARKER</code></p>
</td>
<td class="cellalignment142" headers="r9c1-t3 r1c2-t3">
<p>Called during Replicat processing when a marker from a NonStop server is read from the trail, and before writing to the marker history file.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r10c1-t3" headers="r1c1-t3">
<p><code dir="ltr">EXIT_CALL_PROCESS_RECORD</code></p>
</td>
<td class="cellalignment142" headers="r10c1-t3 r1c2-t3">
<ul>
<li>
<p>For Extract, called before a record buffer is output to the trail.</p>
</li>
<li>
<p>For Replicat, called just before a replicated operation is performed.</p>
</li>
</ul>
<p>This call is the basis of most user exit processing. When <code dir="ltr">EXIT_CALL_PROCESS_RECORD</code> is called, the record buffer and other record information are available to the user exit through callback routines. If source-target mapping is specified in the parameter file, the mapping is performed before the <code dir="ltr">EXIT_CALL_PROCESS_RECORD</code> event takes place. The user exit can map, transform, clean, or perform virtually any other operation with the record. The user exit can return a status indicating whether the caller should process or ignore the record.</p>
<p>When a user exit is used for a data-pump Extract that is configured in <code dir="ltr">PASSTHRU</code> mode, the user exit does not receive an <code dir="ltr">EXIT_CALL_PROCESS_RECORD</code> call. As a result, the user exit has no access to the DDL and DML operations. DDL operations are always processed by a data-pump Extract in <code dir="ltr">PASSTHRU</code> mode and cannot process DDL at all. If the data pump is configured in <code dir="ltr">NOPASSTHRU</code> mode (the default for DML), the user exit receives the <code dir="ltr">EXIT_CALL_PROCESS_RECORD</code> call only for DML operations. For more information, see <a href="gg_parameters116.htm#i2100679">PASSTHRU | NOPASSTHRU</a>.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r11c1-t3" headers="r1c1-t3">
<p><code dir="ltr">EXIT_CALL_START</code></p>
</td>
<td class="cellalignment142" headers="r11c1-t3 r1c2-t3">
<p>Called at the start of processing. The user exit can perform initialization work, such as opening files and initializing variables.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r12c1-t3" headers="r1c1-t3">
<p><code dir="ltr">EXIT_CALL_STOP</code></p>
</td>
<td class="cellalignment142" headers="r12c1-t3 r1c2-t3">
<p>Called before the process stops gracefully or ends abnormally. The user exit can perform completion work, such as closing files or outputting totals.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r13c1-t3" headers="r1c1-t3">
<p><code dir="ltr">EXIT_CALL_RESULT</code></p>
</td>
<td class="cellalignment142" headers="r13c1-t3 r1c2-t3">
<p>Set by the user exit routines to instruct the caller how to respond when each exit call completes.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect1" -->
<a id="i1000030"></a>
<div id="GWURF836" class="sect1">
<h2 class="sect1"><span class="secnum">6.4</span> Using EXIT_CALL_RESULT</h2>
<p>Use <code dir="ltr">EXIT_CALL_RESULT</code> to provide a response to the routine.</p>
<div id="GWURF837" class="tblhruleformal"><p class="titleintable"><a id="sthref1915"></a><a id="sthref1916"></a>Table 6-2 User Exit Responses</p>
<table class="cellalignment145" title="User Exit Responses" summary="This table describes the user exit responses.">
<thead>
<tr class="cellalignment136">
<th class="cellalignment146" id="r1c1-t4">Call result</th>
<th class="cellalignment146" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment136">
<td class="cellalignment142" id="r2c1-t4" headers="r1c1-t4">
<p><code dir="ltr">EXIT_ABEND_VAL</code></p>
</td>
<td class="cellalignment142" headers="r2c1-t4 r1c2-t4">
<p>Instructs the caller to terminate immediately.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r3c1-t4" headers="r1c1-t4">
<p><code dir="ltr">EXIT_IGNORE_VAL</code></p>
</td>
<td class="cellalignment142" headers="r3c1-t4 r1c2-t4">
<p>Rejects records for further processing. <code dir="ltr">EXIT_IGNORE_VAL</code> is appropriate when the user exit performs all the required processing for a record and there is no need to output or replicate the data record.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r4c1-t4" headers="r1c1-t4">
<p><code dir="ltr">EXIT_OK_VAL</code></p>
</td>
<td class="cellalignment142" headers="r4c1-t4 r1c2-t4">
<p>If the routine does nothing to respond to an event, <code dir="ltr">EXIT_OK_VAL</code> is assumed. If the exit call type is any of the following...</p>
<ul>
<li>
<p><code dir="ltr">EXIT_CALL_PROCESS_RECORD</code></p>
</li>
<li>
<p><code dir="ltr">EXIT_CALL_DISCARD_RECORD</code></p>
</li>
<li>
<p><code dir="ltr">EXIT_CALL_DISCARD_ASCII_RECORD</code></p>
</li>
</ul>
<p>... and <code dir="ltr">EXIT_OK_VAL</code> is returned, then Oracle GoldenGate processes the record buffer that was returned by the user exit.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r5c1-t4" headers="r1c1-t4">
<p><code dir="ltr">EXIT_PROCESSED_REC_VAL</code></p>
</td>
<td class="cellalignment142" headers="r5c1-t4 r1c2-t4">
<p>Instructs Extract or Replicat to skip the record, but update the statistics that are printed to the report file for that table and for that operation type.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r6c1-t4" headers="r1c1-t4">
<p><code dir="ltr">EXIT_STOP_VAL</code></p>
</td>
<td class="cellalignment142" headers="r6c1-t4 r1c2-t4">
<p>Instructs the caller to stop processing gracefully. <code dir="ltr">EXIT_STOP_VAL</code> or <code dir="ltr">EXIT_ABEND_VAL</code> may be appropriate when an error condition occurs in the user exit.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect1" -->
<a id="i1000059"></a>
<div id="GWURF838" class="sect1">
<h2 class="sect1"><span class="secnum">6.5</span> Using EXIT_PARAMS</h2>
<p>Use <code dir="ltr">EXIT_PARAMS</code> to supply information to the user exit routine, such as the program name and user-defined parameters. You can process a single data record multiple times.</p>
<div id="GWURF839" class="tblhruleformalwide"><p class="titleintable"><a id="sthref1917"></a><a id="sthref1918"></a>Table 6-3 User Exit Input</p>
<table class="cellalignment145" title="User Exit Input" summary="This table describes the user exit input parameters.">
<thead>
<tr class="cellalignment136">
<th class="cellalignment146" id="r1c1-t5">Exit parameter</th>
<th class="cellalignment146" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment136">
<td class="cellalignment142" id="r2c1-t5" headers="r1c1-t5">
<p class="synopsis"><code dir="ltr">PROGRAM_NAME</code></p>
</td>
<td class="cellalignment142" headers="r2c1-t5 r1c2-t5">
<p>Specifies the full path and name of the calling process, for example <code dir="ltr">\ggs\extract</code> or <code dir="ltr">\ggs\replicat</code>. Use this parameter when loading an Oracle GoldenGate callback routine using the Windows API or to identify the calling program when user exits are used with both Extract and Replicat processing.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r3c1-t5" headers="r1c1-t5">
<p class="synopsis"><code dir="ltr">FUNCTION_PARAM</code></p>
</td>
<td class="cellalignment142" headers="r3c1-t5 r1c2-t5">
<ul>
<li>
<p>Allows you to pass a parameter that is a literal string to the user exit. Specify the parameter with the <code dir="ltr">EXITPARAM</code> option of the <code dir="ltr">TABLE</code> or <code dir="ltr">MAP</code> statement from which the parameter will be passed. See <a href="gg_parameters160.htm#i1053366">"<code dir="ltr">EXITPARAM '</code><code dir="ltr"><span class="codeinlineitalic">parameter</span></code><code dir="ltr">'</code>"</a>. This is only valid during the exit call to process a specific record.</p>
</li>
<li>
<p><code dir="ltr">FUNCTION_PARAM</code> can also be used at the exit call startup event to pass the parameters that are specified in the <code dir="ltr">PARAMS</code> option of the <code dir="ltr">CUSEREXIT</code> parameter. (See <a href="gg_parameters033.htm#i1005783">"CUSEREXIT"</a>.) This is only valid to supply a global parameter at exit startup.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r4c1-t5" headers="r1c1-t5">
<p class="synopsis"><code dir="ltr">MORE_RECS_IND</code></p>
</td>
<td class="cellalignment142" headers="r4c1-t5 r1c2-t5">
<p>Set on return from an exit. For database records, determines whether Extract or Replicat processes the record again. This allows the user exit to output many records per record processed by Extract, a common function when converting Enscribe to SQL (data normalization). To request the same record again, set <code dir="ltr">MORE_RECS_IND</code> to <code dir="ltr">CHAR_NO_VAL</code> or <code dir="ltr">CHAR_YES_VAL</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect1" -->
<a id="i1000083"></a>
<div id="GWURF840" class="sect1">
<h2 class="sect1"><span class="secnum">6.6</span> Using ERCALLBACK</h2>
<p>Use <code dir="ltr">ERCALLBACK</code> to execute a callback routine. A user callback routine retrieves context information from the Extract or Replicat process and sets context values, including the record itself, when the call type is one of the following:</p>
<ul>
<li>
<p><code dir="ltr">EXIT_CALL_PROCESS_RECORD</code></p>
</li>
<li>
<p><code dir="ltr">EXIT_CALL_DISCARD_RECORD</code></p>
</li>
<li>
<p><code dir="ltr">EXIT_CALL_DISCARD_ASCII_RECORD</code></p>
</li>
</ul>
<p class="subhead1"><a id="GWURF841"></a>Syntax</p>
<pre dir="ltr">
ERCALLBACK (<span class="italic">function_code</span>, <span class="italic">buffer</span>, <span class="italic">result_code</span> );
</pre>
<dl>
<dt><code dir="ltr"><span class="codeinlineitalic">function_code</span></code></dt>
<dd>
<p>The function to be executed by the callback routine. The user callback routine behaves differently based on the function code passed to the callback routine. While some functions can be used for both Extract and Replicat, the validity of the function in one process or the other is dependent on the input parameters that are set for that function during the callback routine. See <a href="#i1143514">Section 6.7, "Function Codes"</a> for a full description of available function codes.</p>
</dd>
<dt><code dir="ltr"><span class="codeinlineitalic">buffer</span></code></dt>
<dd>
<p>A void pointer to a buffer containing a predefined structure associated with the specified function code.</p>
</dd>
<dt><code dir="ltr"><span class="codeinlineitalic">result_code</span></code></dt>
<dd>
<p>The status of the function executed by the callback routine. The result code returned by the callback routine indicates whether or not the callback function was successful. A result code can be one of the values in <a href="#CIHGEBDB">Table 6-4</a>.</p>
</dd>
</dl>
<div id="GWURF842" class="tblhruleformalwide"><p class="titleintable"><a id="sthref1919"></a><a id="CIHGEBDB"></a>Table 6-4 Result Codes</p>
<table class="cellalignment145" title="Result Codes " summary="This table describes the result codes.">
<thead>
<tr class="cellalignment136">
<th class="cellalignment146" id="r1c1-t6">Code</th>
<th class="cellalignment146" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment136">
<td class="cellalignment142" id="r2c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_BAD_COLUMN_DATA</code></p>
</td>
<td class="cellalignment142" headers="r2c1-t6 r1c2-t6">
<p>Invalid data was encountered when retrieving or setting column data.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r3c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_BAD_DATE_TIME</code></p>
</td>
<td class="cellalignment142" headers="r3c1-t6 r1c2-t6">
<p>A date, timestamp, or interval type <code dir="ltr">of</code> column contains an invalid date or time value.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r4c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_BAD_NUMERIC_VALUE</code></p>
</td>
<td class="cellalignment142" headers="r4c1-t6 r1c2-t6">
<p>A numeric type of column contains an invalid numeric value.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r5c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_COLUMN_NOT_FOUND</code></p>
</td>
<td class="cellalignment142" headers="r5c1-t6 r1c2-t6">
<p>The column was not found in a compressed update record (update by a database that only logs the values that were changed).</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r6c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_ENV_NOT_FOUND</code></p>
</td>
<td class="cellalignment142" headers="r6c1-t6 r1c2-t6">
<p>The specified environment value could not be found in the record.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r7c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_EXCEEDED_MAX_LENGTH</code></p>
</td>
<td class="cellalignment142" headers="r7c1-t6 r1c2-t6">
<p>The metadata could not be retrieved because the name of the table or column did not fit in the allocated buffer.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r8c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_FETCH_ERROR</code></p>
</td>
<td class="cellalignment142" headers="r8c1-t6 r1c2-t6">
<p>The record could not be fetched. View the error message to see the reason.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r9c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_INCOMPLETE_DDL_REC</code></p>
</td>
<td class="cellalignment142" headers="r9c1-t6 r1c2-t6">
<p>An internal error occurred when processing the DDL record. The record is probably incomplete.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r10c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_INVALID_CALLBACK_FNC_CD</code></p>
</td>
<td class="cellalignment142" headers="r10c1-t6 r1c2-t6">
<p>An invalid callback function code was passed to the callback routine.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r11c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_INVALID_COLUMN</code></p>
</td>
<td class="cellalignment142" headers="r11c1-t6 r1c2-t6">
<p>A non-existent column was referred to in the function call.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r12c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_INVALID_COLUMN_TYPE</code></p>
</td>
<td class="cellalignment142" headers="r12c1-t6 r1c2-t6">
<p>The routine is trying to manipulate a data type that is not supported by Oracle GoldenGate for that purpose.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r13c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_INVALID_CONTEXT</code></p>
</td>
<td class="cellalignment142" headers="r13c1-t6 r1c2-t6">
<p>The callback function was called at an improper time.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r14c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_INVALID_PARAM</code></p>
</td>
<td class="cellalignment142" headers="r14c1-t6 r1c2-t6">
<p>An invalid parameter was passed to the callback function.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r15c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_NO_SRCDB_INSTANCE</code></p>
</td>
<td class="cellalignment142" headers="r15c1-t6 r1c2-t6">
<p>The source database instance could not be found.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r16c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_NO_TGTDB_INSTANCE</code></p>
</td>
<td class="cellalignment142" headers="r16c1-t6 r1c2-t6">
<p>The target database instance could not be found.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r17c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_NOT_SUPPORTED</code></p>
</td>
<td class="cellalignment142" headers="r17c1-t6 r1c2-t6">
<p>This function is not supported for this process.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r18c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_OK</code></p>
</td>
<td class="cellalignment142" headers="r18c1-t6 r1c2-t6">
<p>The callback function succeeded.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r19c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_SESSION_CS_CNV_ERR</code></p>
</td>
<td class="cellalignment142" headers="r19c1-t6 r1c2-t6">
<p>A <code dir="ltr">ULIB_ERR_INVALID_CHAR_FOUND</code> error was returned to the character-set conversion routine. The conversion failed.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r20c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_TABLE_NOT_FOUND</code></p>
</td>
<td class="cellalignment142" headers="r20c1-t6 r1c2-t6">
<p>An invalid table name was specified.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r21c1-t6" headers="r1c1-t6">
<p><code dir="ltr">EXIT_FN_RET_TOKEN_NOT_FOUND</code></p>
</td>
<td class="cellalignment142" headers="r21c1-t6 r1c2-t6">
<p>The specified user token could not be found in the record.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect1" -->
<a id="i1143514"></a>
<div id="GWURF843" class="sect1">
<h2 class="sect1"><span class="secnum">6.7</span> Function Codes</h2>
<p>Function codes determine the output of the callback routine. The callback routine expects the contents of the data buffer to match the structure of the specified function code. The callback routine function codes and their data buffers are described in the following sections. The following is a summary of available functions.</p>
<div id="GWURF844" class="tblhruleformalwide"><p class="titleintable"><a id="sthref1920"></a><a id="sthref1921"></a>Table 6-5 Summary of Oracle GoldenGate Function Codes</p>
<table class="cellalignment145" title="Summary of Oracle GoldenGate Function Codes" summary="This table describes the Oracle GoldenGate function codes.">
<thead>
<tr class="cellalignment136">
<th class="cellalignment146" id="r1c1-t7">Function code</th>
<th class="cellalignment146" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment136">
<td class="cellalignment142" id="r2c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions001.htm#i1000158">COMPRESS_RECORD</a></code></p></td>
<td class="cellalignment142" headers="r2c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">COMPRESS_RECORD</code> function when some, but not all, of a target table's columns are present after mapping and the entire record must be manipulated, rather than individual column values.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r3c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions002.htm#i1000224">DECOMPRESS_RECORD</a></code></p></td>
<td class="cellalignment142" headers="r3c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">DECOMPRESS_RECORD</code> function when some, but not all, of a target table's columns are present after mapping and the entire record must be manipulated, rather than individual column values.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r4c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions003.htm#CIHCIBFE">GET_BASE_OBJECT_NAME</a></code></p></td>
<td class="cellalignment142" headers="r4c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_BASE_OBJECT_NAME</code> function to retrieve the fully qualified name of the base object of an object in a record.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r5c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions004.htm#CIHECBEJ">GET_BASE_OBJECT_NAME_ONLY</a></code></p></td>
<td class="cellalignment142" headers="r5c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_BASE_OBJECT_NAME_ONLY</code> function to retrieve only the name of the base object of an object in a record.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r6c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions005.htm#CIHCHIHJ">GET_BASE_SCHEMA_NAME_ONLY</a></code></p></td>
<td class="cellalignment142" headers="r6c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_BASE_SCHEMA_NAME_ONLY</code> function to retrieve only the name of the schema of the base object of an object in a record.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r7c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions006.htm#i1100152">GET_BEFORE_AFTER_IND</a></code></p></td>
<td class="cellalignment142" headers="r7c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_BEFORE_AFTER_IND</code> function to determine whether a record is a before image or an after image of the database operation.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r8c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions007.htm#i1145134">GET_CATALOG_NAME_ONLY</a></code></p></td>
<td class="cellalignment142" headers="r8c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_CATALOG_NAME_ONLY</code> function to return the name of the database catalog.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r9c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions008.htm#i1100156">GET_COL_METADATA_FROM_INDEX</a></code></p></td>
<td class="cellalignment142" headers="r9c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_COL_METADATA_FROM_INDEX</code> function to determine the column metadata that is associated with a specified column index.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r10c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions009.htm#i1100160">GET_COL_METADATA_FROM_NAME</a></code></p></td>
<td class="cellalignment142" headers="r10c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_COL_METADATA_FROM_NAME</code> function to determine the column metadata that is associated with a specified column name.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r11c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions010.htm#i1105425">GET_COLUMN_INDEX_FROM_NAME</a></code></p></td>
<td class="cellalignment142" headers="r11c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_COLUMN_INDEX_FROM_NAME</code> function to determine the column index associated with a specified column name.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r12c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions011.htm#i1100168">GET_COLUMN_NAME_FROM_INDEX</a></code></p></td>
<td class="cellalignment142" headers="r12c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_COLUMN_NAME_FROM_INDEX</code> function to determine the column name associated with a specified column index.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r13c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions012.htm#i1100172">GET_COLUMN_VALUE_FROM_INDEX</a></code></p></td>
<td class="cellalignment142" headers="r13c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_COLUMN_VALUE_FROM_INDEX</code> function to return the column value from the data record using the specified column index.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r14c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions013.htm#i1100176">GET_COLUMN_VALUE_FROM_NAME</a></code></p></td>
<td class="cellalignment142" headers="r14c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_COLUMN_VALUE_FROM_NAME</code> function to return the column value from the data record by using the specified column name.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r15c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions014.htm#i1146976">GET_DATABASE_METADATA</a></code></p></td>
<td class="cellalignment142" headers="r15c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_DATABASE_METADATA</code> function to return database metadata.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r16c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions015.htm#i1145186">GET_DDL_RECORD_PROPERTIES</a></code></p></td>
<td class="cellalignment142" headers="r16c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_DDL_RECORD_PROPERTIES</code> function to return information about a DDL operation.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r17c1-t7" headers="r1c1-t7">
<p class="synopsis"><code dir="ltr"><a href="user_exit_functions016.htm#i1105970">GET_ENV_VALUE</a></code></p></td>
<td class="cellalignment142" headers="r17c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_ENV_VALUE</code> function to return information about the Oracle GoldenGate environment.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r18c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions017.htm#i1100183">GET_ERROR_INFO</a></code></p></td>
<td class="cellalignment142" headers="r18c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_ERROR_INFO</code> function to return error information associated with a discard record.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r19c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions018.htm#i1102608">GET_GMT_TIMESTAMP</a></code></p></td>
<td class="cellalignment142" headers="r19c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_GMT_TIMESTAMP</code> function to return the operation commit timestamp in GMT format.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r20c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions019.htm#i1100230">GET_MARKER_INFO</a></code></p></td>
<td class="cellalignment142" headers="r20c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_MARKER_INFO</code> function to return marker information when posting data. Use markers to trigger custom processing within a user exit.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r21c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions020.htm#CIHDJDID">GET_OBJECT_NAME</a></code></p></td>
<td class="cellalignment142" headers="r21c1-t7 r1c2-t7">
<p>Returns the fully qualified two- or three-part name of a table or other object that is associated with the record that is being processed.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r22c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions021.htm#CIHJDIDD">GET_OBJECT_NAME_ONLY</a></code></p></td>
<td class="cellalignment142" headers="r22c1-t7 r1c2-t7">
<p>Returns the unqualified name of a table or other object that is associated with the record that is being processed.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r23c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions022.htm#i1100234">GET_OPERATION_TYPE</a></code></p></td>
<td class="cellalignment142" headers="r23c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_OPERATION_TYPE</code> function to determine the operation type associated with a record.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r24c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions023.htm#i1100238">GET_POSITION</a></code></p></td>
<td class="cellalignment142" headers="r24c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_POSITION</code> function is obtain a read position of an Extract data pump or Replicat in the Oracle GoldenGate trail.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r25c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions024.htm#i1030890">GET_RECORD_BUFFER</a></code></p></td>
<td class="cellalignment142" headers="r25c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_RECORD_BUFFER</code> function to obtain information for custom column conversions.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r26c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions025.htm#i1000834">GET_RECORD_LENGTH</a></code></p></td>
<td class="cellalignment142" headers="r26c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_RECORD_LENGTH</code> function to return the length of the data record.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r27c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions026.htm#i1100248">GET_RECORD_TYPE</a></code></p></td>
<td class="cellalignment142" headers="r27c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_RECORD_TYPE</code> function to return the type of record being processed</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r28c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions027.htm#i1145105">GET_SCHEMA_NAME_ONLY</a></code></p></td>
<td class="cellalignment142" headers="r28c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_SCHEMA_NAME_ONLY</code> function to return only the schema name of a table.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r29c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions028.htm#i1146980">GET_SESSION_CHARSET</a></code></p></td>
<td class="cellalignment142" headers="r29c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_SESSION_CHARSET</code> function to return the character set of the user exit session.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r30c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions029.htm#i1100252">GET_STATISTICS</a></code></p></td>
<td class="cellalignment142" headers="r30c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_STATISTICS</code> function to return the current processing statistics for the Extract or Replicat process.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r31c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions030.htm#i1001013">GET_TABLE_COLUMN_COUNT</a></code></p></td>
<td class="cellalignment142" headers="r31c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_TABLE_COLUMN_COUNT</code> function to return the total number of columns in a table.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r32c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions031.htm#i1100259">GET_TABLE_METADATA</a></code></p></td>
<td class="cellalignment142" headers="r32c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_TABLE_METADATA</code> function to return metadata for the table that associated with the record that is being processed.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r33c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions032.htm#i1100263">GET_TABLE_NAME</a></code></p></td>
<td class="cellalignment142" headers="r33c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_TABLE_NAME</code> function to return the fully qualified two- or three-part name of the source or target table that is associated with the record that is being processed.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r34c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions033.htm#i1144997">GET_TABLE_NAME_ONLY</a></code></p></td>
<td class="cellalignment142" headers="r34c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_TABLE_NAME_ONLY</code> function to return only the unqualified name of the table that is associated with the record that is being processed.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r35c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions034.htm#i1100307">GET_TIMESTAMP</a></code></p></td>
<td class="cellalignment142" headers="r35c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_TIMESTAMP</code> function to return the I/O timestamp associated with a source data record.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r36c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions035.htm#i1100311">GET_TRANSACTION_IND</a></code></p></td>
<td class="cellalignment142" headers="r36c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_TRANSACTION_IND</code> function to determine whether a data record is the first, last or middle operation in a transaction,</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r37c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions036.htm#i1113374">GET_USER_TOKEN_VALUE</a></code></p></td>
<td class="cellalignment142" headers="r37c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">GET_USER_TOKEN_VALUE</code> function to obtain the value of a user token from a trail record.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r38c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions037.htm#i1100319">OUTPUT_MESSAGE_TO_REPORT</a></code></p></td>
<td class="cellalignment142" headers="r38c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">OUTPUT_MESSAGE_TO_REPORT</code> function to output a message to the report file.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r39c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions038.htm#i1101799">RESET_USEREXIT_STATS</a></code></p></td>
<td class="cellalignment142" headers="r39c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">RESET_USEREXIT_STATS</code> function to reset the statistics for the Oracle GoldenGate process.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r40c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions039.htm#i1001194">SET_COLUMN_VALUE_BY_INDEX</a></code></p></td>
<td class="cellalignment142" headers="r40c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">SET_COLUMN_VALUE_BY_INDEX</code> function to modify a single column value without manipulating the entire data record.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r41c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="column_conversion_functions031.htm#i1001259">STRNCMP</a></code></p></td>
<td class="cellalignment142" headers="r41c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">SET_COLUMN_VALUE_BY_NAME</code> function to modify a single column value without manipulating the entire data record.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r42c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions041.htm#i1100329">SET_OPERATION_TYPE</a></code></p></td>
<td class="cellalignment142" headers="r42c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">SET_OPERATION_TYPE</code> function to change the operation type associated with a data record.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r43c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions042.htm#i1001364">SET_RECORD_BUFFER</a></code></p></td>
<td class="cellalignment142" headers="r43c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">SET_RECORD_BUFFER</code> function for compatibility with HP NonStop user exits, and for complex data record manipulation.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r44c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions043.htm#i1146984">SET_SESSION_CHARSET</a></code></p></td>
<td class="cellalignment142" headers="r44c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">SET_SESSION_CHARSET</code> function to set the character set of the user exit session.</p>
</td>
</tr>
<tr class="cellalignment136">
<td class="cellalignment142" id="r45c1-t7" headers="r1c1-t7">
<p><code dir="ltr"><a href="user_exit_functions044.htm#i1145258">SET_TABLE_NAME</a></code></p></td>
<td class="cellalignment142" headers="r45c1-t7 r1c2-t7">
<p>Use the <code dir="ltr">SET_TABLE_NAME</code> function to change the table name associated with a data record.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect1" -->
<div class="refentry"></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment135">
<tr>
<td class="cellalignment142"><table class="cellalignment140">
<tr>
<td class="cellalignment139"><a href="column_conversion_functions038.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>

<td class="cellalignment139"><a href="user_exit_functions001.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table></td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2013, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment144">
<table class="cellalignment138">
<tr>
<td class="cellalignment139"><a href="../../index.html"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment139"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment139"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
