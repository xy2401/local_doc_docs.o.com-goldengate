<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml/DTD/xhtml1-transitional.dtd">
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<title>1 Introduction to Oracle GoldenGate</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1028" />
<meta name="description" content="This chapter describes the capabilities of Oracle GoldenGate, its basic terminology, and its processing logic and architecture." />
<meta name="dcterms.created" content="2014-11-11T22:58:5Z" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Oracle&reg; GoldenGate Administering Oracle GoldenGate for Windows and UNIX" />
<meta name="dcterms.identifier" content="E29388-06" />
<meta name="dcterms.isVersionOf" content="GWUAD" />
<link rel="Start" href="../../index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="preface.htm" title="Previous" type="text/html" />
<link rel="Next" href="wu_globalization.htm" title="Next" type="text/html" />
<link rel="alternate" href="../GWUAD.pdf" title="PDF version" type="application/pdf" />
<link rel="alternate" href="../GWUAD.epub" title="ePub version" type="application/epub+zip" />
<link rel="alternate" href="../GWUAD.mobi" title="Mobipocket version" type="application/x-mobipocket-ebook" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Skip Headers</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns"><div id="BREADCRUMBS"><a href="http://docs.oracle.com">Home</a> / <a href="../../index.html">Middleware</a> / <a href="../index.html">Oracle GoldenGate for Windows and UNIX</a>
</div>

<span id="PAGE" style="display:none;">4/30</span>
<!-- End Header -->
<div id="GWUAD110" class="chapter"><a id="sthref6"></a>
<h1 class="chapter"><span class="secnum">1</span> Introduction to Oracle GoldenGate</h1>
<p><a id="GWUAD111"></a>This chapter describes the capabilities of Oracle GoldenGate, its basic terminology, and its processing logic and architecture.</p>
<p>This chapter includes the following sections:</p>
<ul>
<li>
<p><a href="#BEJDGFAA">Oracle GoldenGate Supported Processing Methods and Databases</a></p>
</li>
<li>
<p><a href="#i1050546">Overview of the Oracle GoldenGate Architecture</a></p>
</li>
<li>
<p><a href="#i1048838">Overview of Process Types</a></p>
</li>
<li>
<p><a href="#i1089562">Overview of Groups</a></p>
</li>
<li>
<p><a href="#BEJHIFBG">Overview of the Commit Sequence Number (CSN)</a></p>
</li>
</ul>
<a id="BEJDGFAA"></a>
<div id="GWUAD112" class="sect1">
<h2 class="sect1"><span class="secnum">1.1</span> Oracle GoldenGate<a id="sthref7"></a> Supported Processing Methods and Databases</h2>
<p>Oracle GoldenGate enables the exchange and manipulation of data at the transaction level among multiple, heterogeneous platforms across the enterprise. It moves committed transactions with transaction integrity and minimal overhead on your existing infrastructure. Its modular architecture gives you the flexibility to extract and replicate selected data records, transactional changes, and changes to DDL (data definition language) across a variety of topologies.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Support for DDL, certain topologies, and capture or delivery configurations varies by the database type. See the Oracle GoldenGate installation and configuration documentation for your database for detailed information about supported features and configurations.</div>
<p>With this flexibility, and the filtering, transformation, and custom processing features of Oracle GoldenGate, you can support numerous business requirements:</p>
<ul>
<li>
<p>Business continuance and high availability.</p>
</li>
<li>
<p>Initial load and database migration.</p>
</li>
<li>
<p>Data integration.</p>
</li>
<li>
<p>Decision support and data warehousing.</p>
</li>
</ul>
<div id="GWUAD113" class="figure"><p class="titleinfigure"><a id="sthref8"></a>Figure 1-1 Oracle GoldenGate Supported Topologies</p>
<img width="1620" height="827" src="img/goldengate_configs2.jpg" alt="Description of Figure 1-1 follows" /><br />
<a id="sthref9" href="img_text/goldengate_configs2.htm">Description of "Figure 1-1 Oracle GoldenGate Supported Topologies"</a><br />
<br /></div>
<!-- class="figure" -->
<div id="GWUAD114" class="tblhruleformalwidekey"><p class="titleintable"><a id="sthref10"></a><a id="sthref11"></a>Table 1-1 Supported Processing <a id="sthref12"></a>Methods</p>
<table class="cellalignment160" title="Supported Processing Methods" summary="This table lists the supported processing methods. This table has a legend.">
<thead>
<tr class="cellalignment151">
<th class="cellalignment161" id="r1c1-t3">Database</th>
<th class="cellalignment161" id="r1c2-t3">Log-Based Extraction (capture)</th>
<th class="cellalignment161" id="r1c3-t3">Non-Log-Based Extraction* (capture)</th>
<th class="cellalignment161" id="r1c4-t3">Replication (delivery)</th>
</tr>
</thead>
<tfoot>
<tr class="cellalignment151">
<td class="cellalignment151" colspan="4"><br />
* Non-Log-Based Extraction uses a capture module that communicates with the Oracle GoldenGate API to send change data to Oracle GoldenGate.</td>
</tr>
</tfoot>
<tbody>
<tr class="cellalignment151">
<td class="cellalignment157" id="r2c1-t3" headers="r1c1-t3">
<p><a id="sthref13"></a>DB2 for i</p>
</td>
<td class="cellalignment157" headers="r2c1-t3 r1c2-t3">
<p>n/a</p>
</td>
<td class="cellalignment157" headers="r2c1-t3 r1c3-t3">
<p>n/a</p>
</td>
<td class="cellalignment157" headers="r2c1-t3 r1c4-t3">
<p>X</p>
</td>
</tr>
<tr class="cellalignment151">
<td class="cellalignment157" id="r3c1-t3" headers="r1c1-t3">
<p><a id="sthref14"></a>DB2 for Linux, UNIX, Windows</p>
</td>
<td class="cellalignment157" headers="r3c1-t3 r1c2-t3">
<p>X</p>
</td>
<td class="cellalignment157" headers="r3c1-t3 r1c3-t3">
<p>n/a</p>
</td>
<td class="cellalignment157" headers="r3c1-t3 r1c4-t3">
<p>X</p>
</td>
</tr>
<tr class="cellalignment151">
<td class="cellalignment157" id="r4c1-t3" headers="r1c1-t3">
<p>DB2 for z/OS</p>
</td>
<td class="cellalignment157" headers="r4c1-t3 r1c2-t3">
<p>X</p>
</td>
<td class="cellalignment157" headers="r4c1-t3 r1c3-t3">
<p>n/a</p>
</td>
<td class="cellalignment157" headers="r4c1-t3 r1c4-t3">
<p>X</p>
</td>
</tr>
<tr class="cellalignment151">
<td class="cellalignment157" id="r5c1-t3" headers="r1c1-t3">
<p><a id="sthref15"></a>Oracle</p>
</td>
<td class="cellalignment157" headers="r5c1-t3 r1c2-t3">
<p>X</p>
</td>
<td class="cellalignment157" headers="r5c1-t3 r1c3-t3">
<p>n/a</p>
</td>
<td class="cellalignment157" headers="r5c1-t3 r1c4-t3">
<p>X</p>
</td>
</tr>
<tr class="cellalignment151">
<td class="cellalignment157" id="r6c1-t3" headers="r1c1-t3">
<p><a id="sthref16"></a>MySQL</p>
</td>
<td class="cellalignment157" headers="r6c1-t3 r1c2-t3">
<p>X</p>
</td>
<td class="cellalignment157" headers="r6c1-t3 r1c3-t3">
<p>n/a</p>
</td>
<td class="cellalignment157" headers="r6c1-t3 r1c4-t3">
<p>X</p>
</td>
</tr>
<tr class="cellalignment151">
<td class="cellalignment157" id="r7c1-t3" headers="r1c1-t3">
<p><a id="sthref17"></a>SQL/MX</p>
</td>
<td class="cellalignment157" headers="r7c1-t3 r1c2-t3">
<p>X</p>
</td>
<td class="cellalignment157" headers="r7c1-t3 r1c3-t3">
<p>n/a</p>
</td>
<td class="cellalignment157" headers="r7c1-t3 r1c4-t3">
<p>X</p>
</td>
</tr>
<tr class="cellalignment151">
<td class="cellalignment157" id="r8c1-t3" headers="r1c1-t3">
<p><a id="sthref18"></a>SQL Server</p>
</td>
<td class="cellalignment157" headers="r8c1-t3 r1c2-t3">
<p>X</p>
</td>
<td class="cellalignment157" headers="r8c1-t3 r1c3-t3">
<p>n/a</p>
</td>
<td class="cellalignment157" headers="r8c1-t3 r1c4-t3">
<p>X</p>
</td>
</tr>
<tr class="cellalignment151">
<td class="cellalignment157" id="r9c1-t3" headers="r1c1-t3">
<p><a id="sthref19"></a>Sybase</p>
</td>
<td class="cellalignment157" headers="r9c1-t3 r1c2-t3">
<p>X</p>
</td>
<td class="cellalignment157" headers="r9c1-t3 r1c3-t3">
<p>n/a</p>
</td>
<td class="cellalignment157" headers="r9c1-t3 r1c4-t3">
<p>X</p>
</td>
</tr>
<tr class="cellalignment151">
<td class="cellalignment157" id="r10c1-t3" headers="r1c1-t3">
<p><a id="sthref20"></a>Teradata</p>
</td>
<td class="cellalignment157" headers="r10c1-t3 r1c2-t3">
<p>n/a</p>
</td>
<td class="cellalignment157" headers="r10c1-t3 r1c3-t3">
<p>X</p>
</td>
<td class="cellalignment157" headers="r10c1-t3 r1c4-t3">
<p>X</p>
</td>
</tr>
<tr class="cellalignment151">
<td class="cellalignment157" id="r11c1-t3" headers="r1c1-t3">
<p><a id="sthref21"></a>TimesTen*</p>
</td>
<td class="cellalignment157" headers="r11c1-t3 r1c2-t3">
<p>n/a</p>
</td>
<td class="cellalignment157" headers="r11c1-t3 r1c3-t3">
<p>n/a</p>
</td>
<td class="cellalignment157" headers="r11c1-t3 r1c4-t3">
<p>X</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwidekey" -->
<p>For full information about processing methodology, supported topologies and functionality, and configuration requirements, see the Oracle GoldenGate documentation for your database.</p>
</div>
<!-- class="sect1" -->
<a id="i1050546"></a>
<div id="GWUAD115" class="sect1">
<h2 class="sect1"><span class="secnum">1.2</span> Overview of the Oracle GoldenGate <a id="sthref22"></a>Architecture</h2>
<p>Oracle GoldenGate can be configured for the following purposes:</p>
<ul>
<li>
<p>A static extraction of data records from one database and the loading of those records to another database.</p>
</li>
<li>
<p>Continuous extraction and replication of transactional Data Manipulation Language (DML) operations and data definition language (DDL) changes (for supported databases) to keep source and target data consistent.</p>
</li>
<li>
<p>Extraction from a database and replication to a file outside the database.</p>
</li>
</ul>
<p>Oracle GoldenGate is composed of the following components:</p>
<ul>
<li>
<p>Extract</p>
</li>
<li>
<p>Data pump</p>
</li>
<li>
<p>Replicat</p>
</li>
<li>
<p>Trails or extract files</p>
</li>
<li>
<p>Checkpoints</p>
</li>
<li>
<p>Manager</p>
</li>
<li>
<p>Collector</p>
</li>
</ul>
<p><a href="#i1103348">Figure 1-2</a> illustrates the logical architecture of Oracle GoldenGate for initial data loads and for the synchronization of DML and DDL operations. This is the basic configuration. Variations of this model are recommended depending on business needs.</p>
<div id="GWUAD116" class="figure"><p class="titleinfigure"><a id="i1103348"></a>Figure 1-2 Oracle GoldenGate Logical Architecture</p>
<img width="1613" height="550" src="img/logicalarch2.jpg" alt="Description of Figure 1-2 follows" /><br />
<a id="sthref23" href="img_text/logicalarch2.htm">Description of "Figure 1-2 Oracle GoldenGate Logical Architecture"</a><br />
<br /></div>
<!-- class="figure" -->
<a id="i1048742"></a>
<div id="GWUAD117" class="sect2">
<h3 class="sect2"><span class="secnum">1.2.1</span> Overview of <a id="sthref24"></a><a id="sthref25"></a><a id="sthref26"></a>Extract</h3>
<p>The Extract process is the extraction (capture) mechanism of Oracle GoldenGate. Extract runs on a source system or on a downstream database, or both, depending on the database and the implementation requirements.</p>
<p>You can configure Extract in one of the following ways:</p>
<ul>
<li>
<p><span class="bold">Initial loads:</span> For initial data loads, Extract extracts (captures) a current, static set of data directly from their source objects.</p>
</li>
<li>
<p><span class="bold">Change synchronization:</span> To keep source data synchronized with another set of data, Extract captures DML and DDL operations after the initial synchronization has taken place.</p>
</li>
</ul>
<p>Extract captures from a <a id="sthref27"></a>data source that can be one of the following:</p>
<ul>
<li>
<p>Source tables, if the run is an initial load.</p>
</li>
<li>
<p>The database recovery logs or transaction logs (such as the Oracle redo logs or SQL/MX audit trails). The actual method of capturing from the logs varies depending on the database type. For example, Oracle GoldenGate for Oracle offers an <span class="italic">integrated capture</span> mode, in which Extract interacts directly with a database logmining server that mines the Oracle transaction stream. See <a class="olink GIORA212" href="../../gg-winux/GIORA/process_mode.htm#GIORA212">"About Integrated Capture"</a> in <span class="italic">Installing and Configuring Oracle GoldenGate for Oracle Database</span> for more information about integrated capture.</p>
</li>
<li>
<p>A third-party capture module. This method provides a communication layer that passes data and metadata from an external API to the Extract API. The database vendor or a third-party vendor provides the components that extract the data operations and pass them to Extract.</p>
</li>
</ul>
<p>When configured for change synchronization, Extract captures the DML and DDL operations that are performed on objects in the Extract configuration. Extract stores these operations until it receives commit records or rollbacks for the transactions that contain them. When a rollback is received, Extract discards the operations for that transaction. When a commit is received, Extract persists the transaction to disk in a series of files called a <span class="italic">trail</span>, where it is queued for propagation to the target system. All of the operations in each transaction are written to the trail as a sequentially organized transaction unit. This design ensures both speed and data integrity.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Extract ignores operations on objects that are not in the Extract configuration, even though the same transaction may also include operations on objects that are in the Extract configuration.</div>
<p>Multiple Extract processes can operate on different objects at the same time. For example, two Extract processes can extract and transmit in parallel to two Replicat processes (with two persistence trails) to minimize target latency when the databases are large. To differentiate among different Extract processes, you assign each one a group name (see <a href="#i1089562">Section 1.4, "Overview of Groups"</a>).</p>
</div>
<!-- class="sect2" -->
<div id="GWUAD118" class="sect2"><a id="sthref28"></a>
<h3 class="sect2"><span class="secnum">1.2.2</span> Overview of <a id="sthref29"></a>Data Pumps<a id="sthref30"></a><a id="sthref31"></a><a id="sthref32"></a><a id="sthref33"></a><a id="sthref34"></a></h3>
<p>A data pump is a secondary Extract group within the source Oracle GoldenGate configuration. If a data pump is not used, Extract must send the captured data operations to a remote trail on the target. In a typical configuration with a data pump, however, the primary Extract group writes to a trail on the source system. The data pump reads this trail and sends the data operations over the network to a remote trail on the target. The data pump adds storage flexibility and also serves to isolate the primary Extract process from TCP/IP activity.</p>
<p>In general, a data pump can perform data filtering, mapping, and conversion, or it can be configured in <span class="italic"><a id="sthref35"></a><a id="sthref36"></a>pass-through mode</span>, where data is passively transferred as-is, without manipulation. Pass-through mode increases the throughput of the data pump, because all of the functionality that looks up object definitions is bypassed.</p>
<p>In most business cases, you should use a data pump. Some reasons for using a data pump include the following:</p>
<ul>
<li>
<p><span class="bold">Protection against network and target failures: <a id="sthref37"></a><a id="sthref38"></a><a id="sthref39"></a></span>In a basic Oracle GoldenGate configuration, with only a trail on the target system, there is nowhere on the source system to store the data operations that Extract continuously extracts into memory. If the network or the target system becomes unavailable, Extract could run out of memory and abend. However, with a trail and data pump on the source system, captured data can be moved to disk, preventing the abend of the primary Extract. When connectivity is restored, the data pump captures the data from the source trail and sends it to the target system(s).</p>
</li>
<li>
<p><span class="bold">You are implementing several phases of data filtering or transformation.</span> When using complex filtering or data transformation configurations, you can configure a data pump to perform the first transformation either on the source system or on the target system, or even on an intermediary system, and then use another data pump or the Replicat group to perform the second transformation.</p>
</li>
<li>
<p><span class="bold">Consolidating data from many sources to a central target.</span> When synchronizing multiple <a id="sthref40"></a>source databases with a central target database, you can store extracted data operations on each source system and use data pumps on each of those systems to send the data to a trail on the target system. Dividing the storage load between the source and target systems reduces the need for massive amounts of space on the target system to accommodate data arriving from multiple sources.</p>
</li>
<li>
<p><span class="bold">Synchronizing <a id="sthref41"></a>one source with multiple targets.</span> When sending data to multiple target systems, you can configure data pumps on the source system for each target. If network connectivity to any of the targets fails, data can still be sent to the other targets.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1086031"></a>
<div id="GWUAD119" class="sect2">
<h3 class="sect2"><span class="secnum">1.2.3</span> Overview of <a id="sthref42"></a><a id="sthref43"></a><a id="sthref44"></a>Replicat</h3>
<p>The Replicat process runs on the target system, reads the trail on that system, and then reconstructs the DML or DDL operations and applies them to the target database. Replicat uses dynamic SQL to compile a SQL statement once, and then execute it many times with different bind variables.</p>
<p>You can configure Replicat in one of the following ways:</p>
<ul>
<li>
<p><span class="bold">Initial loads:</span> For initial data loads, Replicat can apply a static data copy to target objects or route it to a high-speed bulk-load utility.</p>
</li>
<li>
<p><span class="bold">Change synchronization:</span> When configured for change synchronization, Replicat applies the replicated source operations to the target objects using a native database interface or ODBC, depending on the database type.</p>
</li>
</ul>
<p>You can use multiple Replicat <a id="sthref45"></a>processes with one or more Extract processes and data pumps in parallel to increase throughput. To preserve data integrity, each set of processes handles a different set of objects. To differentiate among Replicat processes, you assign each one a group name (see <a href="#i1089562">Section 1.4, "Overview of Groups"</a>).</p>
<p>Rather than use multiple Replicat processes, you can configure one Replicat in coordinated or integrated mode.</p>
<ul>
<li>
<p>Coordinated mode is supported on all databases that Oracle GoldenGate supports. In coordinated mode, Replicat is threaded. One coordinator thread spawns and coordinates one or more threads that execute replicated SQL operations in parallel. A coordinated Replicat uses one parameter file and is monitored and managed as one unit. See <a href="wu_changesync.htm#i1007379">Section 14.7, "Creating an Online Replicat Group"</a> for more information.</p>
</li>
<li>
<p>Integrated mode is supported for Oracle versions 11.2.0.4 or later. In integrated mode, Replicat leverages the apply processing functionality that is available within the Oracle database. Within a single Replicat configuration, multiple inbound server child processes known as <span class="italic">apply servers</span> apply transactions in parallel while preserving the original transaction atomicity. See <a class="olink GIORA216" href="../../gg-winux/GIORA/process_mode.htm#GIORA216"><span class="italic">Installing and Configuring Oracle GoldenGate for Oracle Database</span></a> for more information about integrated mode.</p>
</li>
</ul>
<p>You can delay Replicat so that it waits a specific amount of time before applying the replicated operations to the target database. A delay may be desirable, for example, to prevent the propagation of errant SQL, to control data arrival across different time zones, or to allow time for other planned events to occur. The length of the delay is controlled by the <code dir="ltr">DEFERAPPLYINTERVAL</code> parameter.</p>
<p>Various parameters control the way that Replicat converts source transactions to target transactions. These parameters include <code dir="ltr">BATCHSQL</code>, <code dir="ltr">GROUPTRANSOPS</code>, and <code dir="ltr">MAXTRANSOPS</code>. For more information about these and other Replicat parameters, see <a class="olink GWURF394" href="../../gg-winux/GWURF/gg_parameters.htm#GWURF394"><span class="italic">Reference for Oracle GoldenGate for Windows and UNIX</span></a>.</p>
</div>
<!-- class="sect2" -->
<a id="i1089831"></a>
<div id="GWUAD120" class="sect2">
<h3 class="sect2"><span class="secnum">1.2.4</span> Overview of Trails<a id="sthref46"></a><a id="sthref47"></a></h3>
<p>To support the continuous extraction and replication of database changes, Oracle GoldenGate stores records of the captured changes temporarily on disk in a series of files called a <span class="italic">trail</span>. A trail can exist on the source system, an intermediary system, the target system, or any combination of those systems, depending on how you configure Oracle GoldenGate. On the local system it is known as an <span class="italic">extract trail</span> (or <span class="italic">local trail</span>). On a remote system it is known as a <span class="italic">remote trail</span>.</p>
<p>By using a trail for storage, Oracle GoldenGate supports data accuracy and fault tolerance (see <a href="#i1048805">Section 1.2.6, "Overview of Checkpoints"</a>). The use of a trail also allows extraction and replication activities to occur independently of each other. With these processes separated, you have more choices for how data is processed and delivered. For example, instead of extracting and replicating changes continuously, you could extract changes continuously but store them in the trail for replication to the target later, whenever the target application needs them.</p>
<div id="GWUAD121" class="sect3"><a id="sthref48"></a>
<h4 class="sect3"><span class="secnum">1.2.4.1</span> Processes that Write to, and Read, a Trail</h4>
<p>The primary Extract and the data-pump Extract write to a trail. Every online Extract process must be linked to a trail. Only one primary Extract process can write to a given local trail. All local trails must have different names.</p>
<p>Multiple data pump Extract processes can each write to a trail of the same name, but the physical trails themselves must reside on different remote systems, such as in a data-distribution topology. For example, a data pump named <code dir="ltr">1pump</code> and a data pump named <code dir="ltr">2pump</code> can both reside on sys01 and write to a remote trail named <code dir="ltr">aa</code>. Data pump <code dir="ltr">1pump</code> can write to trail <code dir="ltr">aa</code> on <code dir="ltr">sys02</code>, while data pump <code dir="ltr">2pump</code> can write to trail <code dir="ltr">aa</code> on <code dir="ltr">sys03</code>.</p>
<p>Processes that read the trail are:</p>
<ul>
<li>
<p>Data-pump Extract: Extracts DML and DDL operations from a local trail that is linked to a previous Extract (typically the primary Extract), performs further processing if needed, and transfers the data to a trail that is read by the next Oracle GoldenGate process downstream (typically Replicat, but could be another data pump if required).</p>
</li>
<li>
<p>Replicat: Reads the trail and applies replicated DML and DDL operations to the target database.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div id="GWUAD122" class="sect3"><a id="sthref49"></a>
<h4 class="sect3"><span class="secnum">1.2.4.2</span> Trail Creation and Maintenance</h4>
<p>The trail files themselves are created as needed during processing, but you specify a two-character name for the trail when you add it to the Oracle GoldenGate configuration with the <code dir="ltr">ADD RMTTRAIL</code> or <code dir="ltr">ADD EXTTRAIL</code> command. By default, trails are stored in the <code dir="ltr">dirdat</code> sub-directory of the Oracle GoldenGate directory.</p>
<p>Trail files are aged automatically to allow processing to continue without interruption for file maintenance. As each new file is created, it inherits the two-character trail name appended with a unique, six-digit sequence number from 000000 through 999999 (for example c:<code dir="ltr">\ggs\dirdat\tr000001</code>). When the sequence number reaches 999999, the numbering starts over at 000000, and previous trail files are overwritten. Trail files can be purged on a routine basis by using the Manager parameter <code dir="ltr">PURGEOLDEXTRACTS</code>.</p>
<p>You can create more than one trail to separate the data from different objects or applications. You link the objects that are specified in a <code dir="ltr">TABLE</code> or <code dir="ltr">SEQUENCE</code> parameter to a trail that is specified with an <code dir="ltr">EXTTRAIL</code> or <code dir="ltr">RMTTRAIL</code> parameter in the Extract parameter file.</p>
<p>To maximize throughput, and to minimize I/O load on the system, extracted data is sent into and out of a trail in large blocks. Transactional order is preserved.<a id="sthref50"></a><a id="sthref51"></a><a id="sthref52"></a></p>
<p>See <a href="wu_fileformats.htm#g1001699">Appendix C, "About the Oracle GoldenGate Trail"</a> for more information about the trail and the records it contains.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="GWUAD123" class="sect2"><a id="sthref53"></a>
<h3 class="sect2"><span class="secnum">1.2.5</span> Overview of <a id="sthref54"></a>Extract <a id="sthref55"></a>Files</h3>
<p>In some configurations, Oracle GoldenGate stores extracted data in an <span class="italic">extract file</span> instead of a trail. The extract file can be a single file, or it can be configured to roll over into multiple files in anticipation of limitations on file size that are imposed by the operating system. In this sense, it is similar to a trail, except that checkpoints are not recorded. The file or files are created automatically during the run. The same versioning features that apply to trails also apply to extract files.</p>
</div>
<!-- class="sect2" -->
<a id="i1048805"></a>
<div id="GWUAD124" class="sect2">
<h3 class="sect2"><span class="secnum">1.2.6</span> Overview of <a id="sthref56"></a>Checkpoints</h3>
<p><span class="italic">Checkpoints</span> store the current read and write positions of a process to disk for recovery purposes. Checkpoints ensure that data changes that are marked for synchronization actually are captured by Extract and applied to the target by Replicat, and they prevent redundant processing. They provide fault tolerance by preventing the loss of data should the system, the network, or an Oracle GoldenGate process need to be restarted. For complex synchronization configurations, checkpoints enable multiple Extract or Replicat processes to read from the same set of trails.</p>
<p>Checkpoints work with inter-process acknowledgments to prevent messages from being lost in the network. Oracle GoldenGate has a proprietary guaranteed-message delivery technology.</p>
<p>Extract creates checkpoints for its positions in the data source and in the trail. Because Extract only captures committed transactions, it keeps track of the operations in all open transactions, in the event that any of them are committed. This requires Extract to record a checkpoint where it is currently reading in a transaction log, plus the position of the start of the oldest open transaction, which can be in the current or any preceding log.</p>
<p>To control the amount of transaction log that must be re-processed after an outage in an Oracle database, Extract also persists the current state and data of processing to disk at specific intervals, including the state and data (if any) of long-running transactions. If Extract stops after one of these intervals, it can recover from a position within the previous interval or at the last checkpoint, instead of having to return to the log position where the oldest open long-running transaction first appeared. See the <code dir="ltr">BR</code> parameter in <a class="olink GWURF410" href="../../gg-winux/GWURF/gg_parameters015.htm#GWURF410"><span class="italic">Reference for Oracle GoldenGate for Windows and UNIX</span></a> for more information.</p>
<p>Replicat creates checkpoints for its position in the trail. Replicat stores these checkpoints in a table, known as the <span class="italic">checkpoint table</span>, in the target database and also in a checkpoint file on disk. The checkpoint table is stored with a user-specified name and location. The checkpoint file is stored in the <code dir="ltr">dirchk</code> sub-directory of the Oracle GoldenGate directory.</p>
<p>At the completion of each transaction, Replicat writes information about that transaction to a row in the checkpoint table, linking the transaction with a unique position in a specific trail file. Replicat also writes a checkpoint to the checkpoint file when it completes a transaction. At regular intervals, Replicat also writes its current read position to the checkpoint file. These positions are typically not at a transaction boundary, but at some point within a transaction. The interval length is controlled by the <code dir="ltr">CHECKPOINTSECS</code> parameter.</p>
<p>Because the checkpoint table is part of the database, and benefits from the database recovery system, it provides a more efficient recovery point for Replicat. The last checkpoint in the checkpoint file may not be the most recent transaction boundary. It could be the middle of a transaction not yet applied by Replicat or an earlier transaction that was already applied. The checkpoint table ensures that Replicat starts at the correct transaction boundary, so that each transaction is applied only once. The information in the checkpoint table can be used for recovery in some cases, but is primarily used for purposes, such as for the <code dir="ltr">INFO</code> commands in GGSCI.</p>
<p>Regular backups of the Oracle GoldenGate environment, including the trails, should match your database backup, recovery, and retention policies. Restoring the database (and with it the checkpoint table) to an earlier period of time causes Replicat to reposition to an earlier checkpoint that matches that time. If the required trail files for this time period are already aged off the system, they must be restored from backup. To understand how trails are maintained and aged, see <a href="#i1089831">"Overview of Trails"</a>.</p>
<p>Checkpoints are not required for non-continuous types of configurations, such as a batch load or initial load. If there is a failure, these processes can be started again from the original start point.</p>
<p>See <a href="wu_ogg_checkpts.htm#CIHGFDHI">Appendix E</a> for additional information about checkpoints and the checkpoint table.</p>
</div>
<!-- class="sect2" -->
<div id="GWUAD125" class="sect2"><a id="sthref57"></a>
<h3 class="sect2"><span class="secnum">1.2.7</span> Overview of <a id="sthref58"></a>Manager</h3>
<p>Manager is the control process of Oracle GoldenGate. Manager must be running on each system in the Oracle GoldenGate configuration before Extract or Replicat can be started, and Manager must remain running while those processes are running so that resource management functions are performed. Manager performs the following functions:</p>
<ul>
<li>
<p>Start Oracle GoldenGate processes</p>
</li>
<li>
<p>Start dynamic processes</p>
</li>
<li>
<p>Maintain port numbers for processes</p>
</li>
<li>
<p>Perform trail management</p>
</li>
<li>
<p>Create event, error, and threshold reports</p>
</li>
</ul>
<p>One Manager process can control many Extract or Replicat processes. On Windows systems, Manager can run as a service. See <a href="wu_manager.htm#i1033185">Chapter 3, "Configuring Manager and Network Communications"</a> for more information about the Manager process and configuring TCP/IP connections.</p>
</div>
<!-- class="sect2" -->
<a id="i1048830"></a>
<div id="GWUAD126" class="sect2">
<h3 class="sect2"><span class="secnum">1.2.8</span> Overview of <a id="sthref59"></a><a id="sthref60"></a>Collector</h3>
<p>Collector is a process that runs in the background on the target system when continuous, online change synchronization is active. Collector does the following:</p>
<ul>
<li>
<p><a id="sthref61"></a>Upon a connection request from a remote Extract to Manger, scan and bind to an available port and then send the port number to Manager for assignment to the requesting Extract process.</p>
</li>
<li>
<p><a id="sthref62"></a>Receive extracted database changes that are sent by Extract and write them to a trail file. Manager starts Collector automatically when a network connection is required, so Oracle GoldenGate users do not interact with it. Collector can receive information from only one Extract process, so there is one Collector for each Extract that you use. Collector terminates when the associated Extract process terminates.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Collector can be run manually, if needed. This is known as a <span class="italic"><a id="sthref63"></a>static</span> Collector (as opposed to the regular, <span class="italic">dynamic</span> Collector). Several Extract processes can share one static Collector; however, a one-to-one ratio is optimal. A static Collector can be used to ensure that the process runs on a specific port. See <a class="olink GWURF742" href="../../gg-winux/GWURF/collector_parameters.htm#GWURF742"><span class="italic">Reference for Oracle GoldenGate for Windows and UNIX</span></a> for more information about the static Collector. See <a href="wu_manager.htm#i1033185">Chapter 3, "Configuring Manager and Network Communications"</a> for more information about how Manager assigns ports.</div>
</li>
</ul>
<p>By default, Extract initiates TCP/IP connections from the source system to Collector on the target, but Oracle GoldenGate can be configured so that Collector initiates connections from the target. Initiating connections from the target might be required if, for example, the target is in a trusted network zone, but the source is in a less trusted zone.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1048838"></a>
<div id="GWUAD127" class="sect1">
<h2 class="sect1"><span class="secnum">1.3</span> Overview of Process Types<a id="sthref64"></a><a id="sthref65"></a><a id="sthref66"></a><a id="sthref67"></a></h2>
<p>Depending on the requirement, Oracle GoldenGate can be configured with the following processing types.</p>
<ul>
<li>
<p>An <span class="italic">online</span> Extract or Replicat process runs until stopped by a user. Online processes maintain recovery checkpoints in the trail so that processing can resume after interruptions. You use online processes to continuously extract and replicate DML and DDL operations (where supported) to keep source and target objects synchronized. The <code dir="ltr">EXTRACT</code> and <code dir="ltr">REPLICAT</code> parameters apply to this process type.</p>
</li>
<li>
<p>A <span class="italic">source-is-table</span> (also known as in <span class="italic">initial-load</span> Extract) Extract process extracts a current set of static data directly from the source objects in preparation for an initial load to another database. This process type does not use checkpoints. The <code dir="ltr">SOURCEISTABLE</code> parameter applies to this process type.</p>
</li>
<li>
<p>A <span class="italic">special-run</span> Replicat process applies data within known begin and end points. You use a special Replicat run for initial data loads, and it also can be used with an online Extract to apply data changes from the trail in batches, such as once a day rather than continuously. This process type does not maintain checkpoints, because the run can be started over with the same begin and end points. The <code dir="ltr">SPECIALRUN</code> parameter applies to this process type.</p>
</li>
<li>
<p>A <span class="italic">remote task</span> is a special type of initial-load process in which Extract communicates directly with Replicat over TCP/IP. Neither a Collector process nor temporary disk storage in a trail or file is used. The task is defined in the Extract parameter file with the <code dir="ltr">RMTTASK</code> parameter.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1089562"></a>
<div id="GWUAD128" class="sect1">
<h2 class="sect1"><span class="secnum">1.4</span> Overview of <a id="sthref68"></a>Groups</h2>
<p>To differentiate among multiple Extract or Replicat processes on a system, you define processing <span class="italic">groups</span>. For example, to replicate different sets of data in parallel, you would create two Replicat groups.</p>
<p>A processing group consists of a process (either Extract or Replicat), its parameter file, its checkpoint file, and any other files associated with the process. For Replicat, a group may also include an associated checkpoint table. You define groups by using the <code dir="ltr">ADD EXTRACT</code> and <code dir="ltr">ADD REPLICAT</code> commands in the Oracle GoldenGate command interface, GGSCI.</p>
<p>All files and checkpoints relating to a group share the name that is assigned to the group itself. Any time that you issue a command to control or view processing, you supply a group name or multiple group names by means of a wildcard.</p>
</div>
<!-- class="sect1" -->
<a id="BEJHIFBG"></a>
<div id="GWUAD129" class="sect1">
<h2 class="sect1"><span class="secnum">1.5</span> Overview of the <a id="sthref69"></a><a id="sthref70"></a><a id="sthref71"></a>Commit Sequence Number (CSN)</h2>
<p>When working with Oracle GoldenGate, you might need to refer to a <span class="italic">Commit Sequence Number</span>, or CSN. A CSN is an identifier that Oracle GoldenGate constructs to identify a transaction for the purpose of maintaining transactional consistency and data integrity. It uniquely identifies a point in time in which a transaction commits to the database.</p>
<p>The CSN can be required to position Extract in the transaction log, to reposition Replicat in the trail, or for other purposes. It is returned by some conversion functions and is included in reports and certain GGSCI output.</p>
<p>See <a href="wu_csn.htm#g955588">Appendix D, "About the Commit Sequence Number"</a> for more information about the CSN and a list of CSN values per database.</p>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment150">
<tr>
<td class="cellalignment157"><table class="cellalignment155">
<tr>
<td class="cellalignment154"><a href="preface.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>

<td class="cellalignment154"><a href="wu_globalization.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table></td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2013, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment159">
<table class="cellalignment153">
<tr>
<td class="cellalignment154"><a href="../../index.html"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment154"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment154"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment154"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
